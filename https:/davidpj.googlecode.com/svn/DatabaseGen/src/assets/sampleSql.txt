/*
Navicat MySQL Data Transfer

Source Server         : local
Source Server Version : 50611
Source Host           : localhost:3306
Source Database       : crm

Target Server Type    : MYSQL
Target Server Version : 50611
File Encoding         : 65001

Date: 2013-07-26 17:44:06
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for aditionbarcode
-- ----------------------------
DROP TABLE IF EXISTS `aditionbarcode`;
CREATE TABLE `aditionbarcode` (
  `stcode` varchar(30) NOT NULL,
  `barcode` varchar(30) NOT NULL DEFAULT '',
  `note` text,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`stcode`,`barcode`),
  UNIQUE KEY `barcode` (`barcode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of aditionbarcode
-- ----------------------------

-- ----------------------------
-- Table structure for apadddetail
-- ----------------------------
DROP TABLE IF EXISTS `apadddetail`;
CREATE TABLE `apadddetail` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Locationcode` varchar(30) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Oldquan` decimal(18,2) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Oldsumcost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,2) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apadddetail
-- ----------------------------

-- ----------------------------
-- Table structure for apaddhead
-- ----------------------------
DROP TABLE IF EXISTS `apaddhead`;
CREATE TABLE `apaddhead` (
  `Docno` varchar(30) NOT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Recvdoc` varchar(30) DEFAULT NULL,
  `Recvday` datetime DEFAULT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Buytype` varchar(1) DEFAULT NULL,
  `Taxtype` varchar(1) DEFAULT NULL,
  `Taxrate` decimal(18,2) DEFAULT NULL,
  `Reason` varchar(255) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Totalamount` decimal(19,4) DEFAULT NULL,
  `Totaltrade` decimal(19,4) DEFAULT NULL,
  `Totaltax` decimal(19,4) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Oldmoney` decimal(19,4) DEFAULT NULL,
  `Newmoney` decimal(19,4) DEFAULT NULL,
  `Newdiff` decimal(19,4) DEFAULT NULL,
  `Newtax` decimal(19,4) DEFAULT NULL,
  `Newall` decimal(19,4) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apaddhead
-- ----------------------------

-- ----------------------------
-- Table structure for apcard
-- ----------------------------
DROP TABLE IF EXISTS `apcard`;
CREATE TABLE `apcard` (
  `Apcode` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Podoc` varchar(30) DEFAULT NULL,
  `Dateline` datetime DEFAULT NULL,
  `Part` varchar(200) DEFAULT NULL,
  `Totalmoney` decimal(19,4) DEFAULT NULL,
  `Totalpayment` decimal(19,4) DEFAULT NULL,
  `Totalreduce` decimal(19,4) DEFAULT NULL,
  `Totaladd` decimal(19,4) DEFAULT NULL,
  `Totalcredit` decimal(19,4) DEFAULT NULL,
  `Status` varchar(1) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apcard
-- ----------------------------

-- ----------------------------
-- Table structure for apcode
-- ----------------------------
DROP TABLE IF EXISTS `apcode`;
CREATE TABLE `apcode` (
  `Apcode` varchar(30) NOT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apcallname` varchar(100) DEFAULT NULL,
  `Apgroupcode` varchar(30) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apdocaddr1` varchar(100) DEFAULT NULL,
  `Apdocaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Apwebsite` varchar(150) DEFAULT NULL,
  `Apbirthday` varchar(10) DEFAULT NULL,
  `Apsex` varchar(1) DEFAULT NULL,
  `Aplevel` varchar(1) DEFAULT NULL,
  `Apcreditmoney` decimal(19,4) DEFAULT NULL,
  `Apcreditday` decimal(18,4) DEFAULT NULL,
  `Apcomments` varchar(255) DEFAULT NULL,
  `Appicture` longblob,
  `Latitude` varchar(50) DEFAULT NULL,
  `Longitude` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`Apcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apcode
-- ----------------------------
INSERT INTO `apcode` VALUES ('AP00001', 'บริษัท', 'เทสโก้ โลตัส จำกัด', 'โลตัส', '01', '132 หมู่ 1 ถนนเชียงใหม่-หางดง ต.ป่าแดด', 'อ.เมือง จ.เชียงใหม่ 50000', '132 หมู่ 1 ถนนเชียงใหม่-หางดง ต.ป่าแดด', 'อ.เมือง จ.เชียงใหม่ 50000', 'admin@lotus.co.th', 'www.lotus.co.th', '01/12/2540', 'N', 'A', '0.0000', '0.0000', '', '', '18.775991', '98.970337');
INSERT INTO `apcode` VALUES ('AP00002', 'บริษัท', 'บิ๊กซี ซุเปอร์เซ็นเตอร์', 'บิ๊กซี', '01', '433/4-5 หมู่ 7 ตำบลแม่เหียะ', 'อำเภอเมือง เชียงใหม่ 50000', '433/4-5 หมู่ 7 ตำบลแม่เหียะ', 'อำเภอเมือง เชียงใหม่ 50000', 'mak@bigc.co.th', 'www.bigc.co.th', '12/01/2545', 'N', 'A', '0.0000', '0.0000', '', null, '18.667063', '98.914375');
INSERT INTO `apcode` VALUES ('AP00003', 'บริษัท', 'สยามแม็คโคร จำกัด', '', '01', '15  ถ.เชียงใหม่-หางดง ต.บ้านแหวน', 'อ.หางดง จ.เชียงใหม่ 50230', '15  ถ.เชียงใหม่-หางดง ต.บ้านแหวน', 'อ.หางดง จ.เชียงใหม่ 50230', 'admin@macro.co.th', 'www.macro.co.th', '15/01/2550', 'N', 'A', '0.0000', '0.0000', '', null, '18.740556', '98.958321');
INSERT INTO `apcode` VALUES ('AP00004', 'บริษัท', 'เดต้า เทคโนโลยี จำกัด', 'เดต้า', '02', '123 นิคมอุสาหกรรม ลำพูน', 'อ.เมือง จ.ลำพูน ', '123 นิคมอุสาหกรรม ลำพูน', 'อ.เมือง จ.ลำพูน ', 'info@datatechnology.com', 'www.datatechnology.com', '23/12/2554', 'N', 'A', '0.0000', '0.0000', '', null, '18.592236', '99.045696');
INSERT INTO `apcode` VALUES ('AP00005', 'บริษัท', 'ไมโครคอม จำกัด', '', '02', '311  ซอยลาดกระบัง 21 แขวงลาดกระบัง', 'เขตลาดกระบัง กรุงเทพฯ 10520', '311  ซอยลาดกระบัง 21 แขวงลาดกระบัง', 'เขตลาดกระบัง กรุงเทพฯ 10520', 'micro@microcom.com', 'www.microcom.com', '25/02/2553', 'N', 'A', '0.0000', '0.0000', '', null, '13.718707', '100.778961');

-- ----------------------------
-- Table structure for apcontact
-- ----------------------------
DROP TABLE IF EXISTS `apcontact`;
CREATE TABLE `apcontact` (
  `Apcode` varchar(30) DEFAULT NULL,
  `Apcontacttitle` varchar(50) DEFAULT NULL,
  `Apcontactname` varchar(150) DEFAULT NULL,
  `Apcontactposition` varchar(100) DEFAULT NULL,
  `Apcontactbirthday` varchar(10) DEFAULT NULL,
  `Apcontacttel` varchar(100) DEFAULT NULL,
  `Apcontactmail` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apcontact
-- ----------------------------
INSERT INTO `apcontact` VALUES ('AP00001', 'คุณ', 'สมใจ  วิทยกุล', 'ฝ่ายขาย', '', '053225864', 'somjai@lotus.co.th');
INSERT INTO `apcontact` VALUES ('AP00001', 'คุณ', 'พิชาวรรณ ใจจันทร์', 'ฝ่ายขาย', '', '053225864', 'pichar@lotus.co.th');
INSERT INTO `apcontact` VALUES ('AP00002', 'คุณ', 'อำนาจ  วิริยกิจ', 'ผู้จัดการสาขา', '', '053774411', 'admin@bigc.co.th');
INSERT INTO `apcontact` VALUES ('AP00004', 'คุณ', 'พิชาวีร์   ใจแก้ว', 'ผู้จัดการ', '', '053258695', '');
INSERT INTO `apcontact` VALUES ('AP00004', 'คุณ', 'ราชพฤกษ์ ใจแก้ว', 'วิศวกร', '', '053258695', '');
INSERT INTO `apcontact` VALUES ('AP00005', 'คุณ', 'มนชัย  สกุลดี', 'ฝ่ายขาย', '', '0225996321', '');
INSERT INTO `apcontact` VALUES ('AP00005', 'คุณ', 'นิรมล มงคล', 'บัญชี', '', '0225996322', '');
INSERT INTO `apcontact` VALUES ('AP00005', 'คุณ', 'อำพร สอนใจ', 'ผู้จัดการ', '', '0225996325', '');
INSERT INTO `apcontact` VALUES ('AP00003', 'คุณ', 'มนัส  อำนวยพร', 'ฝ่ายขาย', '', '053255666', '');

-- ----------------------------
-- Table structure for apdepositdetail
-- ----------------------------
DROP TABLE IF EXISTS `apdepositdetail`;
CREATE TABLE `apdepositdetail` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Part` varchar(200) DEFAULT NULL,
  `Deposit` decimal(19,4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apdepositdetail
-- ----------------------------

-- ----------------------------
-- Table structure for apdeposithead
-- ----------------------------
DROP TABLE IF EXISTS `apdeposithead`;
CREATE TABLE `apdeposithead` (
  `Docno` varchar(30) NOT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Totaldeposit` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apdeposithead
-- ----------------------------

-- ----------------------------
-- Table structure for apdoclink
-- ----------------------------
DROP TABLE IF EXISTS `apdoclink`;
CREATE TABLE `apdoclink` (
  `Apcode` varchar(30) DEFAULT NULL,
  `Apdoclinkitem` int(11) DEFAULT NULL,
  `Apdoclinkday` datetime DEFAULT NULL,
  `Apdoclinkdes` varchar(200) DEFAULT NULL,
  `Apdoclinkpath` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apdoclink
-- ----------------------------

-- ----------------------------
-- Table structure for apgroupcode
-- ----------------------------
DROP TABLE IF EXISTS `apgroupcode`;
CREATE TABLE `apgroupcode` (
  `Apgroupcode` varchar(30) NOT NULL,
  `Apgroupdes` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`Apgroupcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apgroupcode
-- ----------------------------
INSERT INTO `apgroupcode` VALUES ('01', 'ผู้จำหน่ายทั่วไป');
INSERT INTO `apgroupcode` VALUES ('02', 'ผู้จำหน่ายสินค้าคอมพิวเตอร์');

-- ----------------------------
-- Table structure for appaydetail
-- ----------------------------
DROP TABLE IF EXISTS `appaydetail`;
CREATE TABLE `appaydetail` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Podoc` varchar(30) DEFAULT NULL,
  `Dateline` datetime DEFAULT NULL,
  `Totalmoney` decimal(19,4) DEFAULT NULL,
  `Totalpayment` decimal(19,4) DEFAULT NULL,
  `Totalcredit` decimal(19,4) DEFAULT NULL,
  `Paymoney` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,2) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Taxcostpercent` decimal(18,2) DEFAULT NULL,
  `Taxcostmoney` decimal(19,4) DEFAULT NULL,
  `Plusmoney` decimal(19,4) DEFAULT NULL,
  `Netpay` decimal(19,4) DEFAULT NULL,
  `Remainmoney` decimal(19,4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of appaydetail
-- ----------------------------

-- ----------------------------
-- Table structure for appayhead
-- ----------------------------
DROP TABLE IF EXISTS `appayhead`;
CREATE TABLE `appayhead` (
  `Docno` varchar(30) NOT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Totalpaymoney` decimal(19,4) DEFAULT NULL,
  `Totalreduceitem` decimal(19,4) DEFAULT NULL,
  `Totaltaxcost` decimal(19,4) DEFAULT NULL,
  `Totalplusmoney` decimal(19,4) DEFAULT NULL,
  `Totalnetpay` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of appayhead
-- ----------------------------

-- ----------------------------
-- Table structure for apphone
-- ----------------------------
DROP TABLE IF EXISTS `apphone`;
CREATE TABLE `apphone` (
  `Apcode` varchar(30) DEFAULT NULL,
  `Apphonetype` varchar(1) DEFAULT NULL,
  `Apphoneno` varchar(50) DEFAULT NULL,
  `Apphoneext` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apphone
-- ----------------------------
INSERT INTO `apphone` VALUES ('AP00001', '3', '053255896', '');
INSERT INTO `apphone` VALUES ('AP00001', '4', '053255899', '');
INSERT INTO `apphone` VALUES ('AP00002', '2', '053447711', '');
INSERT INTO `apphone` VALUES ('AP00002', '4', '053447712', '');
INSERT INTO `apphone` VALUES ('AP00004', '3', '053225811', '11');
INSERT INTO `apphone` VALUES ('AP00004', '4', '053225812', '');
INSERT INTO `apphone` VALUES ('AP00005', '3', '0225996325', '');
INSERT INTO `apphone` VALUES ('AP00005', '4', '0225996326', '');
INSERT INTO `apphone` VALUES ('AP00003', '3', '053258258', '');
INSERT INTO `apphone` VALUES ('AP00003', '4', '053258259', '');

-- ----------------------------
-- Table structure for apreducedetail
-- ----------------------------
DROP TABLE IF EXISTS `apreducedetail`;
CREATE TABLE `apreducedetail` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Locationcode` varchar(30) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Oldquan` decimal(18,2) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Oldsumcost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,2) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apreducedetail
-- ----------------------------

-- ----------------------------
-- Table structure for apreducehead
-- ----------------------------
DROP TABLE IF EXISTS `apreducehead`;
CREATE TABLE `apreducehead` (
  `Docno` varchar(30) NOT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Recvdoc` varchar(30) DEFAULT NULL,
  `Recvday` datetime DEFAULT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Buytype` varchar(1) DEFAULT NULL,
  `Taxtype` varchar(1) DEFAULT NULL,
  `Taxrate` decimal(18,2) DEFAULT NULL,
  `Reason` varchar(255) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Totalamount` decimal(19,4) DEFAULT NULL,
  `Totaltrade` decimal(19,4) DEFAULT NULL,
  `Totaltax` decimal(19,4) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Oldmoney` decimal(19,4) DEFAULT NULL,
  `Newmoney` decimal(19,4) DEFAULT NULL,
  `Newdiff` decimal(19,4) DEFAULT NULL,
  `Newtax` decimal(19,4) DEFAULT NULL,
  `Newall` decimal(19,4) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apreducehead
-- ----------------------------

-- ----------------------------
-- Table structure for apreducesn
-- ----------------------------
DROP TABLE IF EXISTS `apreducesn`;
CREATE TABLE `apreducesn` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `SN` varchar(80) DEFAULT NULL,
  `SNLocation` varchar(30) DEFAULT NULL,
  `Stcarditem` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of apreducesn
-- ----------------------------

-- ----------------------------
-- Table structure for aptrn
-- ----------------------------
DROP TABLE IF EXISTS `aptrn`;
CREATE TABLE `aptrn` (
  `RECTYP` varchar(1) DEFAULT NULL,
  `DOCNUM` varchar(12) DEFAULT NULL,
  `DOCDAT` date DEFAULT NULL,
  `REFNUM` varchar(15) DEFAULT NULL,
  `VATPRD` date DEFAULT NULL,
  `VATLATE` varchar(1) DEFAULT NULL,
  `VATTYP` varchar(1) DEFAULT NULL,
  `POSTGL` varchar(1) DEFAULT NULL,
  `PONUM` varchar(12) DEFAULT NULL,
  `DNTYP` varchar(1) DEFAULT NULL,
  `DEPCOD` varchar(4) DEFAULT NULL,
  `FLGVAT` varchar(1) DEFAULT NULL,
  `SUPCOD` varchar(10) DEFAULT NULL,
  `SHIPTO` varchar(10) DEFAULT NULL,
  `YOUREF` varchar(30) DEFAULT NULL,
  `PAYTRM` int(11) DEFAULT NULL,
  `DUEDAT` date DEFAULT NULL,
  `BILNUM` varchar(12) DEFAULT NULL,
  `DLVBY` varchar(2) DEFAULT NULL,
  `NXTSEQ` varchar(3) DEFAULT NULL,
  `AMOUNT` double DEFAULT NULL,
  `DISC` varchar(10) DEFAULT NULL,
  `DISCAMT` double DEFAULT NULL,
  `AFTDISC` double DEFAULT NULL,
  `ADVNUM` varchar(12) DEFAULT NULL,
  `ADVAMT` double DEFAULT NULL,
  `TOTAL` double DEFAULT NULL,
  `AMTRAT0` double DEFAULT NULL,
  `VATRAT` double DEFAULT NULL,
  `VATAMT` double DEFAULT NULL,
  `NETAMT` double DEFAULT NULL,
  `NETVAL` double DEFAULT NULL,
  `PAYAMT` double DEFAULT NULL,
  `REMAMT` double DEFAULT NULL,
  `CMPLAPP` varchar(1) DEFAULT NULL,
  `CMPLDAT` date DEFAULT NULL,
  `DOCSTAT` varchar(1) DEFAULT NULL,
  `CSHPAY` double DEFAULT NULL,
  `CHQPAY` double DEFAULT NULL,
  `INTPAY` double DEFAULT NULL,
  `TAX` double DEFAULT NULL,
  `RCVAMT` double DEFAULT NULL,
  `CHQPAS` double DEFAULT NULL,
  `VATDAT` date DEFAULT NULL,
  `SRV_VATTYP` varchar(1) DEFAULT NULL,
  `PVATPRORAT` varchar(1) DEFAULT NULL,
  `PVAT_RF` double DEFAULT NULL,
  `PVAT_NRF` double DEFAULT NULL,
  `USERID` varchar(8) DEFAULT NULL,
  `CHGDAT` date DEFAULT NULL,
  `USERPRN` varchar(8) DEFAULT NULL,
  `PRNDAT` date DEFAULT NULL,
  `PRNCNT` int(11) DEFAULT NULL,
  `PRNTIM` varchar(5) DEFAULT NULL,
  `AUTHID` varchar(8) DEFAULT NULL,
  `APPROVE` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of aptrn
-- ----------------------------
INSERT INTO `aptrn` VALUES ('3', 'RR43/9568', '2005-12-25', '', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '', null, '2006-02-08', 'BR0000001', '', ' -1', '30000', '', '0', '0', '', '0', '30000', '0', '7', '2100', '32100', '30000', '32100', '0', 'Y', null, 'N', '0', '0', '0', '0', '0', '0', '2005-12-25', '1', '', null, null, 'BIT9', '2005-12-07', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000001', '2006-01-03', '', null, '', '', '', 'PO0000001', '', '', '2', 'DIGITAL', '', '', '45', '2006-02-17', '~', '', '  2', '25800', '', '0', '25800', '', '0', '25800', '0', '7', '1806', '27606', '25800', '27606', '0', 'Y', null, 'N', '0', '0', '0', '0', '0', '0', '2006-01-03', '1', '-', null, null, 'BIT9', '2005-12-25', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('1', 'HP0000001', '2006-01-07', '4401/0015', '2006-01-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  1', '50400', '', '0', '50400', '', '0', '50400', '0', '7', '3528', '53928', '50400', '53928', '0', 'Y', '2006-01-07', 'N', '53928', '0', '0', '0', '0', '0', '2006-01-07', '1', '-', null, null, 'BIT9', '2005-12-28', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000002', '2006-01-05', '4401/0001', '2006-01-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', '2006-03-06', '~', '', '  1', '6800', '', '0', '6800', '', '0', '6800', '0', '7', '476', '7276', '6800', '0', '7276', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2006-01-04', '1', '-', null, null, 'BIT9', '2006-01-10', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000003', '2006-01-13', '', null, '', '', '', '', '', '', '2', 'MICRO-SYS', '', '������ҧ��õ�駠���.��ҧ����', '60', '2006-03-14', '~', '', '  1', '1500', '', '0', '1500', '', '0', '1500', '0', '7', '105', '1605', '1500', '1605', '0', 'Y', '2006-03-15', 'N', '0', '0', '0', '0', '0', '0', null, '2', '-', null, null, 'BIT9', '2006-03-19', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('0', 'AE0000001', '2006-01-28', '44/00145', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '���ª��Ф���Թ��Ҡ30%', '0', '2006-01-28', '~', '', '  1', '12000', '', '0', '12000', '', '0', '12000', '0', '7', '840', '12840', '12000', '12000', '0', 'Y', '2007-01-01', 'N', '12840', '0', '0', '0', '0', '0', '2006-01-27', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('4', 'CP0000001', '2006-01-19', 'SR4401/003', null, '', '', '', 'RR0000002', '2', '', '2', 'UNISYS', '', '', null, '2006-01-19', '~', '', '  1', '100', '', '0', '100', '', '0', '100', '0', '7', '7', '107', '100', '0', '107', 'N', null, 'N', '0', '0', '0', '0', '1500', '0', '2006-01-19', '1', '-', null, null, 'BIT9', '2006-01-19', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('5', 'GR0000001', '2006-01-21', '', null, '', '', '', 'RR0000002', '2', '', '2', 'UNISYS', '', '', null, '2006-03-06', '~', '', '  1', '3400', '', '0', '3400', '', '0', '3400', '0', '7', '238', '3638', '3400', '0', '3638', 'N', null, 'N', '0', '0', '0', '0', '6800', '0', '2006-01-21', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('9', 'PS0000001', '2006-02-15', '', null, '', '', 'Y', '', '', '', '', 'DIGITAL', '', '', null, '2006-02-15', '~', '', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '32100', '0', '0', '0', 'Y', null, 'N', '0', '32100', '0', '0', '32100', '0', null, '', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('9', 'PS0000002', '2006-02-17', '', null, '', '', 'Y', '', '', '', '', 'DIGITAL', '', '', null, '2006-02-17', '~', '', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '27606', '0', '0', '0', 'Y', null, 'N', '0', '27606', '0', '0', '27606', '0', null, '', '-', null, null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('7', 'OE0000001', '2006-01-07', '', null, '', '', '', '', '', '', '0', '', '', '�����������ö', null, null, '~', '', '  1', '800', '', '0', '800', '', '0', '800', '0', '0', '0', '800', '800', '800', '0', 'Y', '2006-01-07', 'N', '800', '0', '0', '0', '0', '0', '2006-01-07', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('9', 'PS0000003', '2006-03-15', '03/1546', '2006-03-01', '', '', 'Y', '', '', '', '2', 'MICRO-SYS', '', '��ҷӻ����ɳ�', null, '2006-03-15', '~', '', '', '0', '', '0', '0', '', '0', '1500', '0', null, '105', '1605', '1500', '0', '0', 'Y', '2006-03-15', 'M', '1560', '0', '0', '45', '1605', '0', '2006-03-14', '', '-', null, null, 'BIT9', '2006-01-15', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('1', 'HP0000002', '2006-02-01', '4401/1001', null, '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  1', '13680', '', '0', '13680', '', '0', '13680', '0', '7', '957.6', '14637.6', '13680', '14637.6', '0', 'Y', '2006-02-01', 'N', '14637.6', '0', '0', '0', '0', '0', '2006-02-01', '1', '-', null, null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('1', 'HP0000003', '2006-02-09', '', null, '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  2', '3250', '', '0', '3250', '', '0', '3250', '0', '7', '227.5', '3477.5', '3250', '3477.5', '0', 'Y', '2006-02-09', 'N', '3477.5', '0', '0', '0', '0', '0', '2006-02-09', '1', '-', null, null, 'BIT9', '2006-02-09', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000004', '2006-02-01', '', '2006-02-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', '2006-04-02', '~', '', ' 13', '343800', '', '0', '343800', 'AE', '0', '343800', '0', '7', '24066', '367866', '343800', '0', '367866', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2006-02-01', '1', '-', null, null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000005', '2007-01-01', '', null, '', '', '', '', '', '', '2', 'MAXDATA', '', '', '45', '2007-02-15', '~', '', '  3', '87341', '', '0', '87341', '', '0', '87341', '0', '7', '6113.87', '93454.87', '87341', '0', '93454.87', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000006', '2007-01-01', '', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '', '45', '2007-02-15', '~', '', '  1', '3400', '', '0', '3400', 'AE0000001', '3400', '0', '0', '7', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-04-22', '', null, null, '', '', null);
INSERT INTO `aptrn` VALUES ('3', 'RR0000007', '2007-01-01', '', null, '', '', '', 'PO0000002', '', '', '2', 'DIGITAL', '', '', '45', '2007-02-15', '~', '', '  1', '10000', '', '0', '10000', 'AE0000001', '8600', '1400', '0', '7', '98', '1498', '1400', '0', '1498', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-05-14', '', null, null, '', '', null);

-- ----------------------------
-- Table structure for aptrn.old
-- ----------------------------
DROP TABLE IF EXISTS `aptrn.old`;
CREATE TABLE `aptrn.old` (
  `RECTYP` varchar(1) DEFAULT NULL,
  `DOCNUM` varchar(12) DEFAULT NULL,
  `DOCDAT` date DEFAULT NULL,
  `REFNUM` varchar(15) DEFAULT NULL,
  `VATPRD` date DEFAULT NULL,
  `VATLATE` varchar(1) DEFAULT NULL,
  `VATTYP` varchar(1) DEFAULT NULL,
  `POSTGL` varchar(1) DEFAULT NULL,
  `PONUM` varchar(12) DEFAULT NULL,
  `DNTYP` varchar(1) DEFAULT NULL,
  `DEPCOD` varchar(4) DEFAULT NULL,
  `FLGVAT` varchar(1) DEFAULT NULL,
  `SUPCOD` varchar(10) DEFAULT NULL,
  `SHIPTO` varchar(10) DEFAULT NULL,
  `YOUREF` varchar(30) DEFAULT NULL,
  `PAYTRM` int(11) DEFAULT NULL,
  `DUEDAT` date DEFAULT NULL,
  `BILNUM` varchar(12) DEFAULT NULL,
  `DLVBY` varchar(2) DEFAULT NULL,
  `NXTSEQ` varchar(3) DEFAULT NULL,
  `AMOUNT` double DEFAULT NULL,
  `DISC` varchar(10) DEFAULT NULL,
  `DISCAMT` double DEFAULT NULL,
  `AFTDISC` double DEFAULT NULL,
  `ADVNUM` varchar(12) DEFAULT NULL,
  `ADVAMT` double DEFAULT NULL,
  `TOTAL` double DEFAULT NULL,
  `AMTRAT0` double DEFAULT NULL,
  `VATRAT` double DEFAULT NULL,
  `VATAMT` double DEFAULT NULL,
  `NETAMT` double DEFAULT NULL,
  `NETVAL` double DEFAULT NULL,
  `PAYAMT` double DEFAULT NULL,
  `REMAMT` double DEFAULT NULL,
  `CMPLAPP` varchar(1) DEFAULT NULL,
  `CMPLDAT` date DEFAULT NULL,
  `DOCSTAT` varchar(1) DEFAULT NULL,
  `CSHPAY` double DEFAULT NULL,
  `CHQPAY` double DEFAULT NULL,
  `INTPAY` double DEFAULT NULL,
  `TAX` double DEFAULT NULL,
  `RCVAMT` double DEFAULT NULL,
  `CHQPAS` double DEFAULT NULL,
  `VATDAT` date DEFAULT NULL,
  `SRV_VATTYP` varchar(1) DEFAULT NULL,
  `PVATPRORAT` varchar(1) DEFAULT NULL,
  `PVAT_RF` double DEFAULT NULL,
  `PVAT_NRF` double DEFAULT NULL,
  `USERID` varchar(8) DEFAULT NULL,
  `CHGDAT` date DEFAULT NULL,
  `USERPRN` varchar(8) DEFAULT NULL,
  `PRNDAT` date DEFAULT NULL,
  `PRNCNT` int(11) DEFAULT NULL,
  `PRNTIM` varchar(5) DEFAULT NULL,
  `AUTHID` varchar(8) DEFAULT NULL,
  `APPROVE` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of aptrn.old
-- ----------------------------
INSERT INTO `aptrn.old` VALUES ('3', 'RR43/9568', '2005-12-25', '', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '', null, '2006-02-08', 'BR0000001', '', ' -1', '30000', '', '0', '0', '', '0', '30000', '0', '7', '2100', '32100', '30000', '32100', '0', 'Y', null, 'N', '0', '0', '0', '0', '0', '0', '2005-12-25', '1', '', null, null, 'BIT9', '2005-12-07', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000001', '2006-01-03', '', null, '', '', '', 'PO0000001', '', '', '2', 'DIGITAL', '', '', '45', '2006-02-17', '~', '', '  2', '25800', '', '0', '25800', '', '0', '25800', '0', '7', '1806', '27606', '25800', '27606', '0', 'Y', null, 'N', '0', '0', '0', '0', '0', '0', '2006-01-03', '1', '-', null, null, 'BIT9', '2005-12-25', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('1', 'HP0000001', '2006-01-07', '4401/0015', '2006-01-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  1', '50400', '', '0', '50400', '', '0', '50400', '0', '7', '3528', '53928', '50400', '53928', '0', 'Y', '2006-01-07', 'N', '53928', '0', '0', '0', '0', '0', '2006-01-07', '1', '-', null, null, 'BIT9', '2005-12-28', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000002', '2006-01-05', '4401/0001', '2006-01-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', '2006-03-06', '~', '', '  1', '6800', '', '0', '6800', '', '0', '6800', '0', '7', '476', '7276', '6800', '0', '7276', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2006-01-04', '1', '-', null, null, 'BIT9', '2006-01-10', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000003', '2006-01-13', '', null, '', '', '', '', '', '', '2', 'MICRO-SYS', '', '������ҧ��õ�駠���.��ҧ����', '60', '2006-03-14', '~', '', '  1', '1500', '', '0', '1500', '', '0', '1500', '0', '7', '105', '1605', '1500', '1605', '0', 'Y', '2006-03-15', 'N', '0', '0', '0', '0', '0', '0', null, '2', '-', null, null, 'BIT9', '2006-03-19', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('0', 'AE0000001', '2006-01-28', '44/00145', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '���ª��Ф���Թ��Ҡ30%', '0', '2006-01-28', '~', '', '  1', '12000', '', '0', '12000', '', '0', '12000', '0', '7', '840', '12840', '12000', '12000', '0', 'Y', '2007-01-01', 'N', '12840', '0', '0', '0', '0', '0', '2006-01-27', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('4', 'CP0000001', '2006-01-19', 'SR4401/003', null, '', '', '', 'RR0000002', '2', '', '2', 'UNISYS', '', '', null, '2006-01-19', '~', '', '  1', '100', '', '0', '100', '', '0', '100', '0', '7', '7', '107', '100', '0', '107', 'N', null, 'N', '0', '0', '0', '0', '1500', '0', '2006-01-19', '1', '-', null, null, 'BIT9', '2006-01-19', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('5', 'GR0000001', '2006-01-21', '', null, '', '', '', 'RR0000002', '2', '', '2', 'UNISYS', '', '', null, '2006-03-06', '~', '', '  1', '3400', '', '0', '3400', '', '0', '3400', '0', '7', '238', '3638', '3400', '0', '3638', 'N', null, 'N', '0', '0', '0', '0', '6800', '0', '2006-01-21', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('9', 'PS0000001', '2006-02-15', '', null, '', '', 'Y', '', '', '', '', 'DIGITAL', '', '', null, '2006-02-15', '~', '', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '32100', '0', '0', '0', 'Y', null, 'N', '0', '32100', '0', '0', '32100', '0', null, '', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('9', 'PS0000002', '2006-02-17', '', null, '', '', 'Y', '', '', '', '', 'DIGITAL', '', '', null, '2006-02-17', '~', '', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '27606', '0', '0', '0', 'Y', null, 'N', '0', '27606', '0', '0', '27606', '0', null, '', '-', null, null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('7', 'OE0000001', '2006-01-07', '', null, '', '', '', '', '', '', '0', '', '', '�����������ö', null, null, '~', '', '  1', '800', '', '0', '800', '', '0', '800', '0', '0', '0', '800', '800', '800', '0', 'Y', '2006-01-07', 'N', '800', '0', '0', '0', '0', '0', '2006-01-07', '1', '-', null, null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('9', 'PS0000003', '2006-03-15', '03/1546', '2006-03-01', '', '', 'Y', '', '', '', '2', 'MICRO-SYS', '', '��ҷӻ����ɳ�', null, '2006-03-15', '~', '', '', '0', '', '0', '0', '', '0', '1500', '0', null, '105', '1605', '1500', '0', '0', 'Y', '2006-03-15', 'M', '1560', '0', '0', '45', '1605', '0', '2006-03-14', '', '-', null, null, 'BIT9', '2006-01-15', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('1', 'HP0000002', '2006-02-01', '4401/1001', null, '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  1', '13680', '', '0', '13680', '', '0', '13680', '0', '7', '957.6', '14637.6', '13680', '14637.6', '0', 'Y', '2006-02-01', 'N', '14637.6', '0', '0', '0', '0', '0', '2006-02-01', '1', '-', null, null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('1', 'HP0000003', '2006-02-09', '', null, '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', null, '~', '', '  2', '3250', '', '0', '3250', '', '0', '3250', '0', '7', '227.5', '3477.5', '3250', '3477.5', '0', 'Y', '2006-02-09', 'N', '3477.5', '0', '0', '0', '0', '0', '2006-02-09', '1', '-', null, null, 'BIT9', '2006-02-09', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000004', '2006-02-01', '', '2006-02-01', '', '', '', '', '', '', '2', 'UNISYS', '', '', '60', '2006-04-02', '~', '', ' 13', '343800', '', '0', '343800', 'AE', '0', '343800', '0', '7', '24066', '367866', '343800', '0', '367866', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2006-02-01', '1', '-', null, null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000005', '2007-01-01', '', null, '', '', '', '', '', '', '2', 'MAXDATA', '', '', '45', '2007-02-15', '~', '', '  3', '87341', '', '0', '87341', '', '0', '87341', '0', '7', '6113.87', '93454.87', '87341', '0', '93454.87', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000006', '2007-01-01', '', null, '', '', '', '', '', '', '2', 'DIGITAL', '', '', '45', '2007-02-15', '~', '', '  1', '3400', '', '0', '3400', 'AE0000001', '3400', '0', '0', '7', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-04-22', '', null, null, '', '', null);
INSERT INTO `aptrn.old` VALUES ('3', 'RR0000007', '2007-01-01', '', null, '', '', '', 'PO0000002', '', '', '2', 'DIGITAL', '', '', '45', '2007-02-15', '~', '', '  1', '10000', '', '0', '10000', 'AE0000001', '8600', '1400', '0', '7', '98', '1498', '1400', '0', '1498', 'N', null, 'N', '0', '0', '0', '0', '0', '0', '2007-01-01', '1', '-', null, null, 'BIT9', '2013-05-14', '', null, null, '', '', null);

-- ----------------------------
-- Table structure for arcode
-- ----------------------------
DROP TABLE IF EXISTS `arcode`;
CREATE TABLE `arcode` (
  `Arcode` varchar(30) NOT NULL,
  `Artitle` varchar(50) DEFAULT NULL,
  `Arname` varchar(150) DEFAULT NULL,
  `Arcallname` varchar(100) DEFAULT NULL,
  `Argroupcode` varchar(30) DEFAULT NULL,
  `Araddr1` varchar(100) DEFAULT NULL,
  `Araddr2` varchar(100) DEFAULT NULL,
  `Ardocaddr1` varchar(100) DEFAULT NULL,
  `Ardocaddr2` varchar(100) DEFAULT NULL,
  `Aremail` varchar(150) DEFAULT NULL,
  `Arwebsite` varchar(150) DEFAULT NULL,
  `Arbirthday` varchar(10) DEFAULT NULL,
  `Arsex` varchar(1) DEFAULT NULL,
  `Arlevel` varchar(1) DEFAULT NULL,
  `Arpricetype` varchar(1) DEFAULT NULL,
  `Arcreditmoney` decimal(19,4) DEFAULT NULL,
  `Arcreditday` decimal(18,4) DEFAULT NULL,
  `Armember` varchar(1) DEFAULT NULL,
  `Arcomments` varchar(255) DEFAULT NULL,
  `Arpicture` longblob,
  `Latitude` varchar(50) DEFAULT NULL,
  `Longitude` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`Arcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of arcode
-- ----------------------------
INSERT INTO `arcode` VALUES ('AR00001', 'คุณ', 'พิยดา  อมรพันธ์', 'อ้อม', '01', '155 ถ.ประชาราษฎร์บำเพ็ญ 26 ', 'สามเสนนอก ห้วยขวาง กรุงเทพฯ 10320 ', '155 ถ.ประชาราษฎร์บำเพ็ญ 26 ', 'สามเสนนอก ห้วยขวาง กรุงเทพฯ 10320 ', 'aom@yahoo.com', '', '15/08/2520', 'F', 'A', 'A', '15000.0000', '0.0000', 'Y', '', null, '13.783736', '100.578461');
INSERT INTO `arcode` VALUES ('AR00002', 'คุณ', 'อมรา ตระกูลดี', '', '01', '111 ถ.พระปกเกล้า ต.พระสิงห์', 'อ.เมือง จ.เชียงใหม่ 50200', '111 ถ.พระปกเกล้า ต.พระสิงห์', 'อ.เมือง จ.เชียงใหม่ 50200', 'aum@gmail.com', '', '16/07/2542', 'F', 'A', 'A', '10000.0000', '0.0000', 'Y', '', null, '18.785133', '98.988361');
INSERT INTO `arcode` VALUES ('AR00003', 'คุณ', 'สมชาย  มีโชค', '', '01', '128 ถนนมณีนพรัตน์ ตำบลศรีภูมิ', ' อำเภอเมือง จังหวัดเชียงใหม่ 50000', '128 ถนนมณีนพรัตน์ ตำบลศรีภูมิ', ' อำเภอเมือง จังหวัดเชียงใหม่ 50000', 'somchai@gmail.com', '', '01/08/2525', 'M', 'A', 'A', '0.0000', '0.0000', 'N', '', null, '18.795859', '98.982139');
INSERT INTO `arcode` VALUES ('AR00004', 'คุณ', 'วิลัยพร  มหาดำรง', 'พร', '01', '255 ถนนสีลม แขวงสีลม เขตบางรัก', 'กรุงเทพฯ 10500', '255 ถนนสีลม แขวงสีลม เขตบางรัก', 'กรุงเทพฯ 10500', 'viraiporn@yahoo.com', '', '15/12/2529', 'N', 'A', 'A', '0.0000', '0.0000', 'N', '', null, '13.726295', '100.527306');
INSERT INTO `arcode` VALUES ('AR00005', 'บริษัท', 'ไทยพัฒนาพานิช จำกัด', '', '02', '15/2 ถนนพระราม 4  แขวงคลองเตย', 'เขตคลองเตย  กรุงเทพ ', '15/2 ถนนพระราม 4  แขวงคลองเตย', 'เขตคลองเตย  กรุงเทพ ', 'thaicpc@gmail.com', 'www.thaicpc.com', '16/07/2542', 'N', 'A', 'B', '30000.0000', '15.0000', 'N', '', null, '13.720208', '100.569363');
INSERT INTO `arcode` VALUES ('AR00006', 'บริษัท', 'ออโตโมทีฟ เซอร์วิส จำกัด', '', '02', '12/5 ถ.ลาดพร้าว 53 แขวงลาดพร้าว', 'เขตลาดพร้าว กรุงเทพฯ ', '12/5 ถ.ลาดพร้าว 53 แขวงลาดพร้าว', 'เขตลาดพร้าว กรุงเทพฯ ', 'admin@ptk.co.th', 'www.ptk.co.th', '05/05/2550', 'N', 'A', 'B', '30000.0000', '7.0000', 'N', '', null, '13.818744', '100.605583');
INSERT INTO `arcode` VALUES ('AR00007', 'หจก.', 'นาโนซอฟท์ แอนด์ โซลูชั่น', 'นาโนซอฟท์', '02', '175/5 หมู่ 7 ตำบลป่าแดด', 'อำเภอเมือง เชียงใหม่ 50100', '175/5 หมู่ 7 ตำบลป่าแดด', 'อำเภอเมือง เชียงใหม่ 50100', 'info@nanosoft.co.th', 'www.nanosoft.co.th', '16/07/2542', 'N', 'A', 'B', '30000.0000', '7.0000', 'N', '', '', '18.741857', '98.973083');

-- ----------------------------
-- Table structure for arcontact
-- ----------------------------
DROP TABLE IF EXISTS `arcontact`;
CREATE TABLE `arcontact` (
  `Arcode` varchar(30) NOT NULL DEFAULT '',
  `seq` int(11) NOT NULL AUTO_INCREMENT,
  `Arcontacttitle` varchar(50) DEFAULT NULL,
  `Arcontactname` varchar(150) DEFAULT NULL,
  `Arcontactposition` varchar(100) DEFAULT NULL,
  `Arcontactbirthday` varchar(10) DEFAULT NULL,
  `Arcontacttel` varchar(100) DEFAULT NULL,
  `Arcontactmail` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`seq`,`Arcode`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of arcontact
-- ----------------------------
INSERT INTO `arcontact` VALUES ('AR00005', '1', 'คุณ', 'กมล  รักษ์วงค์', 'ผู้จัดการ', '01/02/2510', '0852547896', 'kamon@gmail.com');
INSERT INTO `arcontact` VALUES ('AR00005', '2', 'คุณ', 'วิลัย  ใจดี', 'จัดซื้อ', '28/08/2525', '0812545825', 'virai@hotmail.com');
INSERT INTO `arcontact` VALUES ('AR00006', '3', 'คุณ', 'วินัย  ใจสุภาพ', 'จัดซื้อ', '12/12/2518', '0258695478', '');
INSERT INTO `arcontact` VALUES ('AR00007', '4', 'คุณ', 'ศักดิ์ชัย  สุเมธิกุล', 'ฝ่ายการตลาด', '', '053444111', 'nanosoftmak@gmail.com');
INSERT INTO `arcontact` VALUES ('AR00007', '5', 'คุณ', 'สาวิณี  แสนคติ', 'ฝ่ายการตลาด', '', '053444111', 'nanosoftmak@gmail.com');

-- ----------------------------
-- Table structure for ardeliveryloc
-- ----------------------------
DROP TABLE IF EXISTS `ardeliveryloc`;
CREATE TABLE `ardeliveryloc` (
  `DeliveryLocItem` int(11) NOT NULL AUTO_INCREMENT,
  `ArCode` varchar(30) NOT NULL DEFAULT '',
  `DevName` varchar(100) DEFAULT NULL,
  `Address` varchar(100) DEFAULT NULL,
  `Address1` varchar(100) DEFAULT NULL,
  `address2` varchar(100) DEFAULT NULL,
  `devContact` varchar(100) DEFAULT NULL,
  `Tel` varchar(100) DEFAULT NULL,
  `maplink` varchar(255) DEFAULT NULL,
  `locatepic` blob,
  `notes` text,
  `cDate` datetime DEFAULT NULL,
  `mDate` datetime DEFAULT NULL,
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`DeliveryLocItem`,`ArCode`),
  KEY `ArCode` (`ArCode`),
  KEY `DeliveryLocItem` (`DeliveryLocItem`),
  CONSTRAINT `ardeliveryloc_ibfk_1` FOREIGN KEY (`ArCode`) REFERENCES `armas` (`Arcode`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of ardeliveryloc
-- ----------------------------
INSERT INTO `ardeliveryloc` VALUES ('1', 'AR00005', 'โรงงานเจ้าพยะยา', 'ที่อยู่ ', 'ที่อยู่1 ', 'ที่อยู่  2', 'ผู้ติดต่อส่งของ', '0222222', null, null, 'notes', null, null, null, null);
INSERT INTO `ardeliveryloc` VALUES ('2', 'AR00005', 'โรงงานพระประแดง', 'ที่อยู่', 'ที่อยู่1 ', 'ที่อยู่  2', 'ผู้ติดต่อส่งของ', '0370000', null, null, 'commnet', null, null, null, null);

-- ----------------------------
-- Table structure for argroupcode
-- ----------------------------
DROP TABLE IF EXISTS `argroupcode`;
CREATE TABLE `argroupcode` (
  `Argroupcode` varchar(30) NOT NULL,
  `Argroupdes` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`Argroupcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of argroupcode
-- ----------------------------
INSERT INTO `argroupcode` VALUES ('01', 'ลูกค้าทั่วไป');
INSERT INTO `argroupcode` VALUES ('02', 'ลูกค้าขายส่ง');
INSERT INTO `argroupcode` VALUES ('๙๙', 'ลูกค้าชั่วคราว');

-- ----------------------------
-- Table structure for armas
-- ----------------------------
DROP TABLE IF EXISTS `armas`;
CREATE TABLE `armas` (
  `Arcode` varchar(30) NOT NULL,
  `Artitle` varchar(50) DEFAULT NULL,
  `Arname` varchar(150) DEFAULT NULL,
  `Arcallname` varchar(100) DEFAULT NULL,
  `Argroupcode` varchar(30) DEFAULT NULL,
  `Araddr1` varchar(100) DEFAULT NULL,
  `Araddr2` varchar(100) DEFAULT NULL,
  `Ardocaddr1` varchar(100) DEFAULT NULL,
  `Ardocaddr2` varchar(100) DEFAULT NULL,
  `Aremail` varchar(150) DEFAULT NULL,
  `Arwebsite` varchar(150) DEFAULT NULL,
  `Arbirthday` varchar(10) DEFAULT NULL,
  `Arsex` varchar(1) DEFAULT NULL,
  `Arlevel` varchar(1) DEFAULT NULL,
  `Arpricetype` varchar(1) DEFAULT NULL,
  `Arcreditmoney` decimal(19,4) DEFAULT NULL,
  `Arcreditday` decimal(18,4) DEFAULT NULL,
  `Armember` varchar(1) DEFAULT NULL,
  `Arcomments` varchar(255) DEFAULT NULL,
  `Arpicture` longblob,
  `Latitude` varchar(50) DEFAULT NULL,
  `Longitude` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`Arcode`),
  KEY `Argroupcode` (`Argroupcode`),
  CONSTRAINT `armas_ibfk_1` FOREIGN KEY (`Argroupcode`) REFERENCES `argroupcode` (`Argroupcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of armas
-- ----------------------------
INSERT INTO `armas` VALUES ('AR00001', 'คุณ', 'พิยดา  อมรพันธ์', 'อ้อม', '๙๙', '155 ถ.ประชาราษฎร์บำเพ็ญ 26 ', 'สามเสนนอก ห้วยขวาง กรุงเทพฯ 10320 ', '155 ถ.ประชาราษฎร์บำเพ็ญ 26 ', 'สามเสนนอก ห้วยขวาง กรุงเทพฯ 10320 ', 'aom@yahoo.com', '', '15/08/2520', 'F', 'A', 'A', '15000.0000', '0.0000', 'Y', '', null, '13.783736', '100.578461');
INSERT INTO `armas` VALUES ('AR00002', 'คุณ', 'อมรา ตระกูลดี', '', '01', '111 ถ.พระปกเกล้า ต.พระสิงห์', 'อ.เมือง จ.เชียงใหม่ 50200', '111 ถ.พระปกเกล้า ต.พระสิงห์', 'อ.เมือง จ.เชียงใหม่ 50200', 'aum@gmail.com', '', '16/07/2542', 'F', 'A', 'A', '10000.0000', '0.0000', 'Y', '', null, '18.785133', '98.988361');
INSERT INTO `armas` VALUES ('AR00003', 'คุณ', 'สมชาย  มีโชค', '', '01', '128 ถนนมณีนพรัตน์ ตำบลศรีภูมิ', ' อำเภอเมือง จังหวัดเชียงใหม่ 50000', '128 ถนนมณีนพรัตน์ ตำบลศรีภูมิ', ' อำเภอเมือง จังหวัดเชียงใหม่ 50000', 'somchai@gmail.com', '', '01/08/2525', 'M', 'A', 'A', '0.0000', '0.0000', 'N', '', null, '18.795859', '98.982139');
INSERT INTO `armas` VALUES ('AR00004', 'คุณ', 'วิลัยพร  มหาดำรง', 'พร', '01', '255 ถนนสีลม แขวงสีลม เขตบางรัก', 'กรุงเทพฯ 10500', '255 ถนนสีลม แขวงสีลม เขตบางรัก', 'กรุงเทพฯ 10500', 'viraiporn@yahoo.com', '', '15/12/2529', 'N', 'A', 'A', '0.0000', '0.0000', 'N', '', null, '13.726295', '100.527306');
INSERT INTO `armas` VALUES ('AR00005', 'บริษัท', 'ไทยพัฒนาพานิช จำกัด', '', '02', '15/2 ถนนพระราม 4  แขวงคลองเตย', 'เขตคลองเตย  กรุงเทพ ', '15/2 ถนนพระราม 4  แขวงคลองเตย', 'เขตคลองเตย  กรุงเทพ ', 'thaicpc@gmail.com', 'www.thaicpc.com', '16/07/2542', 'N', 'A', 'B', '30000.0000', '15.0000', 'N', '', null, '13.720208', '100.569363');
INSERT INTO `armas` VALUES ('AR00006', 'บริษัท', 'ออโตโมทีฟ เซอร์วิส จำกัด', '', '02', '12/5 ถ.ลาดพร้าว 53 แขวงลาดพร้าว', 'เขตลาดพร้าว กรุงเทพฯ ', '12/5 ถ.ลาดพร้าว 53 แขวงลาดพร้าว', 'เขตลาดพร้าว กรุงเทพฯ ', 'admin@ptk.co.th', 'www.ptk.co.th', '05/05/2550', 'N', 'A', 'B', '30000.0000', '7.0000', 'N', '', null, '13.818744', '100.605583');
INSERT INTO `armas` VALUES ('AR00007', 'หจก.', 'นาโนซอฟท์ แอนด์ โซลูชั่น', 'นาโนซอฟท์', '02', '175/5 หมู่ 7 ตำบลป่าแดด', 'อำเภอเมือง เชียงใหม่ 50100', '175/5 หมู่ 7 ตำบลป่าแดด', 'อำเภอเมือง เชียงใหม่ 50100', 'info@nanosoft.co.th', 'www.nanosoft.co.th', '16/07/2542', 'N', 'A', 'B', '30000.0000', '7.0000', 'N', '', '', '18.741857', '98.973083');

-- ----------------------------
-- Table structure for armember
-- ----------------------------
DROP TABLE IF EXISTS `armember`;
CREATE TABLE `armember` (
  `Arcode` varchar(30) NOT NULL,
  `Memberbeginday` datetime DEFAULT NULL,
  `Memberendday` datetime DEFAULT NULL,
  `Keepscore` varchar(1) DEFAULT NULL,
  `Memberscore` decimal(18,4) DEFAULT NULL,
  `Scorecondition` decimal(18,4) DEFAULT NULL,
  `Promotioncode` varchar(30) DEFAULT NULL,
  `Promotiondes` varchar(200) DEFAULT NULL,
  `Membercondition1` varchar(200) DEFAULT NULL,
  `Membercondition2` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`Arcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of armember
-- ----------------------------
INSERT INTO `armember` VALUES ('AR00001', '2012-01-31 00:00:00', '2012-12-30 00:00:00', 'Y', '0.0000', '500.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00002', '2012-01-31 00:00:00', '2012-12-31 00:00:00', 'Y', '0.0000', '500.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00003', '2012-07-12 00:00:00', '2012-12-31 00:00:00', 'N', '0.0000', '0.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00004', '2012-07-12 00:00:00', '2012-12-31 00:00:00', 'N', '0.0000', '0.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00005', '2012-07-11 00:00:00', '2012-12-31 00:00:00', 'N', '0.0000', '0.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00006', '2012-07-12 00:00:00', '2012-12-31 00:00:00', 'N', '0.0000', '0.0000', '', '', '', '');
INSERT INTO `armember` VALUES ('AR00007', '2012-07-12 00:00:00', '2012-12-31 00:00:00', 'N', '0.0000', '0.0000', '', '', '', '');

-- ----------------------------
-- Table structure for artrn
-- ----------------------------
DROP TABLE IF EXISTS `artrn`;
CREATE TABLE `artrn` (
  `RECTYP` varchar(1) DEFAULT NULL,
  `DOCNUM` varchar(12) DEFAULT NULL,
  `DOCDAT` date DEFAULT NULL,
  `POSTGL` varchar(1) DEFAULT NULL,
  `SONUM` varchar(12) DEFAULT NULL,
  `CNTYP` varchar(1) DEFAULT NULL,
  `DEPCOD` varchar(4) DEFAULT NULL,
  `FLGVAT` varchar(1) DEFAULT NULL,
  `SLMCOD` varchar(10) DEFAULT NULL,
  `CUSCOD` varchar(10) DEFAULT NULL,
  `SHIPTO` varchar(10) DEFAULT NULL,
  `YOUREF` varchar(30) DEFAULT NULL,
  `AREACOD` varchar(4) DEFAULT NULL,
  `PAYTRM` int(11) DEFAULT NULL,
  `DUEDAT` date DEFAULT NULL,
  `BILNUM` varchar(12) DEFAULT NULL,
  `NXTSEQ` varchar(3) DEFAULT NULL,
  `AMOUNT` double DEFAULT NULL,
  `DISC` varchar(10) DEFAULT NULL,
  `DISCAMT` double DEFAULT NULL,
  `AFTDISC` double DEFAULT NULL,
  `ADVNUM` varchar(12) DEFAULT NULL,
  `ADVAMT` double DEFAULT NULL,
  `TOTAL` double DEFAULT NULL,
  `AMTRAT0` double DEFAULT NULL,
  `VATRAT` double DEFAULT NULL,
  `VATAMT` double DEFAULT NULL,
  `NETAMT` double DEFAULT NULL,
  `NETVAL` double DEFAULT NULL,
  `RCVAMT` double DEFAULT NULL,
  `REMAMT` double DEFAULT NULL,
  `COMAMT` double DEFAULT NULL,
  `CMPLAPP` varchar(1) DEFAULT NULL,
  `CMPLDAT` date DEFAULT NULL,
  `DOCSTAT` varchar(1) DEFAULT NULL,
  `CSHRCV` double DEFAULT NULL,
  `CHQRCV` double DEFAULT NULL,
  `INTRCV` double DEFAULT NULL,
  `BEFTAX` double DEFAULT NULL,
  `TAXRAT` double DEFAULT NULL,
  `TAXCOND` varchar(1) DEFAULT NULL,
  `TAX` double DEFAULT NULL,
  `IVCAMT` double DEFAULT NULL,
  `CHQPAS` double DEFAULT NULL,
  `VATDAT` date DEFAULT NULL,
  `VATPRD` date DEFAULT NULL,
  `VATLATE` varchar(1) DEFAULT NULL,
  `SRV_VATTYP` varchar(1) DEFAULT NULL,
  `DLVBY` varchar(2) DEFAULT NULL,
  `RESERVE` date DEFAULT NULL,
  `USERID` varchar(8) DEFAULT NULL,
  `CHGDAT` date DEFAULT NULL,
  `USERPRN` varchar(8) DEFAULT NULL,
  `PRNDAT` date DEFAULT NULL,
  `PRNCNT` int(11) DEFAULT NULL,
  `PRNTIM` varchar(8) DEFAULT NULL,
  `AUTHID` varchar(8) DEFAULT NULL,
  `APPROVE` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of artrn
-- ----------------------------
INSERT INTO `artrn` VALUES ('3', 'IV42/2860', '2005-12-20', '', '', '', '', '2', '����ö', '��ŵ���', '', '', '��', null, '2006-01-19', 'BI0000001', ' -1', '50000', '', '0', '0', '', '0', '50000', '0', '7', '3500', '53500', '50000', '53500', '0', '0', 'Y', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2005-12-20', null, '', '1', '', null, 'BIT9', '2006-01-18', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000001', '2006-01-05', '', 'SO0000001', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2006-02-04', '~', '  2', '11000', '', '0', '11000', '', '0', '11000', '0', '7', '770', '11770', '11000', '0', '11770', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-01-05', null, '', '1', '', null, 'BIT9', '2006-01-19', 'BIT9', '2006-01-16', '1', '17:00:52', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000002', '2006-01-07', '', '', '', '', '2', '����', '�Թ��๷', '', '', '��', '30', '2006-02-06', '~', '  2', '24000', '', '0', '24000', '', '0', '24000', '0', '7', '1680', '25680', '24000', '8709.8', '16970.2', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-01-07', null, '', '1', '', null, 'BIT9', '2006-01-09', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('1', 'HS0000001', '2006-01-09', '', '', '', '', '2', '', '��0000002', '', '', '', '0', null, '~', '  1', '8500', '', '0', '8500', '', '0', '8500', '0', '7', '595', '9095', '8500', '8500', '0', '0', 'Y', '2006-01-09', 'N', '9095', '0', '0', '0', null, '', '0', '0', '0', '2006-01-09', null, '', '1', '', null, 'BIT9', '2006-01-09', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000003', '2006-01-14', '', '', '', '', '2', '', '��0000001', '', '', '', '15', '2006-01-29', '~', '  1', '1600', '', '0', '1600', '', '0', '1600', '0', '7', '112', '1712', '1600', '1712', '0', '0', 'Y', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-01-14', null, '', '1', '', null, 'BIT9', '2006-01-15', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('0', 'AI0000001', '2006-01-28', '', '', '', '', '2', '����ö', '��ŵ���', '', '', '��', '0', '2006-01-28', '~', '  1', '2700', '', '0', '2700', '', '0', '2700', '0', '7', '189', '2889', '2700', '2700', '0', '0', 'Y', '2006-04-01', 'N', '0', '2889', '0', '0', null, '', '0', '0', '0', '2006-01-28', null, '', '1', '', null, 'BIT9', '2006-01-14', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000004', '2006-01-16', '', '', '', '', '2', '����ö', '��ŵ���', '', '', '��', '30', '2006-02-15', 'BI0000002', '  1', '3200', '', '0', '3200', '', '0', '3200', '0', '7', '224', '3424', '3200', '0', '3424', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-01-16', null, '', '1', '', null, 'BIT9', '2006-02-09', 'BIT9', '2006-01-16', '2', '17:31:05', '', null);
INSERT INTO `artrn` VALUES ('5', 'SR0000001', '2006-01-26', '', 'IV0000002', '1', '', '2', '����', '�Թ��๷', '', '', '��', null, '2006-01-26', '~', '  2', '8140', '', '0', '8140', '', '0', '8140', '0', '7', '569.8', '8709.8', '8140', '8709.8', '0', '0', 'Y', '2006-01-26', 'N', '0', '0', '0', '0', null, '', '0', '24000', '0', '2006-01-26', null, '', '1', '', null, 'BIT9', '2006-02-23', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('4', 'DR0000001', '2006-01-29', '', 'IV0000004', '2', '', '2', '����ö', '��ŵ���', '', '', '��', null, '2006-01-29', 'BI0000002', '  1', '50', '', '0', '50', '', '0', '50', '0', '7', '3.5', '53.5', '50', '0', '53.5', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '3200', '0', '2006-01-29', null, '', '1', '', null, 'BIT9', '2006-01-15', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('9', 'RE0000001', '2006-02-02', 'Y', '', '', '', '', '����ö', '��ŵ���', '', '', '', null, '2006-02-02', '~', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '53500', '0', '0', '0', '0', 'Y', null, 'N', '0', '53500', '0', '0', null, '', '0', '53500', '0', null, null, '', '', '', null, 'BIT9', '2006-01-19', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('7', 'OI0000001', '2006-01-15', '', '', '', '', '2', '', '��0000002', '', '������ͧ��Ц�������', '', '0', null, '~', '  1', '700', '', '0', '700', '', '0', '700', '0', '7', '49', '749', '700', '700', '0', '0', 'Y', '2006-01-15', 'N', '749', '0', '0', '0', null, '', '0', '0', '0', '2006-01-15', null, '', '1', '', null, 'BIT9', '2006-01-15', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('1', 'HS0000002', '2006-02-02', '', '', '', '', '2', '����', 'ठ������', '', '', '��', '30', null, '~', '  1', '8217', '', '0', '8217', '', '0', '8217', '0', '7', '575.19', '8792.19', '8217', '8217', '0', '0', 'Y', '2006-02-02', 'N', '8792.19', '0', '0', '0', null, '', '0', '0', '0', '2006-02-02', null, '', '1', '', null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('9', 'RE0000002', '2006-02-03', 'Y', '', '', '', '', '', '��0000001', '', '', '', null, '2006-02-03', '~', '', '0', '', '0', '0', '', '0', '0', '0', null, '0', '1712', '0', '0', '0', '0', 'Y', null, 'N', '664', '1000', '0', '0', null, '', '48', '1712', '0', null, null, '', '', '', null, 'BIT9', '2006-01-17', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('1', 'HS0000003', '2006-02-15', '', '', '', '', '2', '����', '�����', '', '', '��', '45', null, '~', '  1', '25000', '', '0', '25000', '', '0', '25000', '0', '7', '1750', '26750', '25000', '25000', '0', '0', 'Y', '2006-02-15', 'N', '26750', '0', '0', '0', null, '', '0', '0', '0', '2006-02-15', null, '', '1', '', null, 'BIT9', '2006-03-19', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('1', 'HS0000004', '2006-03-16', '', '', '', '', '2', '����ö', '�«Ѿ����', '', '', '��', '45', null, '~', ' 11', '33000', '', '0', '33000', 'AI', '0', '33000', '0', '7', '2310', '35310', '33000', '33000', '0', '0', 'Y', '2006-03-16', 'N', '35310', '0', '0', '0', null, '', '0', '0', '0', '2006-03-16', null, '', '1', '', null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000005', '2006-04-24', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2006-05-24', '~', '  3', '9500', '', '0', '9500', 'AI', '0', '9500', '0', '7', '665', '10165', '9500', '0', '10165', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-04-24', null, '', '1', '', null, 'BIT9', '2013-04-10', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('5', 'SR0000002', '2006-04-24', '', '', '2', '', '2', '����ö', 'ʺ���', '', '', '��', null, '2006-04-24', '~', '  1', '900', '', '0', '900', '', '0', '900', '0', '7', '63', '963', '900', '0', '963', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-04-24', null, '', '1', '', null, 'BIT9', '2006-04-24', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000006', '2006-04-01', '', '', '', '', '2', '����ö', '��ŵ���', '', '', '��', '30', '2006-05-01', '~', '  1', '4500', '', '0', '4500', 'AI0000001', '2700', '1800', '0', '7', '126', '1926', '1800', '0', '1926', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-04-01', null, '', '1', '', null, 'BIT9', '2013-04-05', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('5', 'SR0000003', '2006-04-24', '', '', '2', '', '2', '����', '�Թ��๷', '', '', '��', null, '2006-04-24', '~', '  1', '4200', '', '0', '4200', '', '0', '4200', '0', '7', '294', '4494', '4200', '0', '4494', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2006-04-24', null, '', '1', '', null, 'BIT9', '2006-04-24', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('1', 'HS0000005', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-01', '~', '  1', '4000', '', '0', '4000', 'AI', '0', '4000', '0', '7', '280', '4280', '4000', '4000', '0', '0', 'Y', '2007-01-01', 'N', '4280', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-04-03', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000007', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '  3', '4000', '', '0', '4000', 'AI', '0', '4000', '0', '7', '280', '4280', '4000', '0', '4280', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-04-05', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000008', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '', '0', '', '0', '0', 'AI', '0', '0', '0', '7', '0', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'C', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-04-05', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000009', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '', '0', '', '0', '0', '', '0', '0', '0', '7', '0', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'C', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-04-05', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000010', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '  2', '8000', '', '0', '8000', '', '0', '8000', '0', '7', '560', '8560', '8000', '0', '8560', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-04-30', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000011', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '', '0', '', '0', '0', 'AI', '0', '0', '0', '7', '0', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'N', '0', '0', '0', '0', null, '', '0', '0', '0', null, null, '', '-', '', null, 'BIT9', '2013-04-30', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV0000012', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '', '0', '', '0', '0', 'AI', '0', '0', '0', '7', '0', '0', '0', '0', '0', '0', 'Y', '2007-01-01', 'C', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-06-04', '', null, null, '', '', null);
INSERT INTO `artrn` VALUES ('3', 'IV00000001', '2007-01-01', '', '', '', '', '2', '����ö', 'ʺ���', '', '', '��', '30', '2007-01-31', '~', '  1', '5000', '', '0', '5000', 'AI', '0', '5000', '0', '7', '350', '5350', '5000', '0', '5350', '0', 'N', null, 'N', '0', '0', '0', '0', null, '', '0', '0', '0', '2007-01-01', null, '', '1', '', null, 'BIT9', '2013-06-04', '', null, null, '', '', null);

-- ----------------------------
-- Table structure for artrndetail
-- ----------------------------
DROP TABLE IF EXISTS `artrndetail`;
CREATE TABLE `artrndetail` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `Stcode` varchar(30) DEFAULT NULL,
  `WH` int(11) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Locationcode` int(11) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Price` decimal(19,4) DEFAULT NULL,
  `Sumprice` decimal(19,4) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,2) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL,
  `Freestatus` varchar(1) DEFAULT NULL,
  `Freelink` int(11) DEFAULT NULL,
  KEY `Locationcode` (`Locationcode`),
  CONSTRAINT `artrndetail_ibfk_1` FOREIGN KEY (`Locationcode`) REFERENCES `location` (`whid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of artrndetail
-- ----------------------------
INSERT INTO `artrndetail` VALUES ('SA00001', '1', 'ST00008', '1', 'RAM DDR 2GB', '02', '1', 'แถว', '1.00', '2', 'Y', '2', 'Y', 'Y', 'Y', '2.00', '0.00', '1500.0000', '3000.0000', '1000.0000', '2000.0000', '0.00', '0.0000', '3000.0000', 'N', '0');
INSERT INTO `artrndetail` VALUES ('SA00001', '2', 'ST00007', '1', 'กาแฟ', '01', '1', 'ถุง', '1.00', '1', 'Y', '1', 'Y', 'N', '', '3.00', '3.00', '150.0000', '450.0000', '100.0000', '300.0000', '0.00', '0.0000', '450.0000', 'N', '0');
INSERT INTO `artrndetail` VALUES ('SA00001', '3', 'ST00002', '1', 'โค๊ก', '01', '1', 'กระป๋อง', '1.00', '1', 'Y', '2', 'Y', 'N', '', '1.00', '1.00', '15.0000', '15.0000', '8.0000', '8.0000', '0.00', '0.0000', '15.0000', 'N', '0');

-- ----------------------------
-- Table structure for artrnmas
-- ----------------------------
DROP TABLE IF EXISTS `artrnmas`;
CREATE TABLE `artrnmas` (
  `Docno` varchar(30) NOT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `WH` int(11) NOT NULL DEFAULT '0',
  `diliveryId` int(11) DEFAULT NULL,
  `Days` datetime DEFAULT NULL,
  `Arcode` varchar(30) DEFAULT NULL,
  `Artitle` varchar(50) DEFAULT NULL,
  `Arname` varchar(150) DEFAULT NULL,
  `Araddr1` varchar(100) DEFAULT NULL,
  `Araddr2` varchar(100) DEFAULT NULL,
  `Aremail` varchar(150) DEFAULT NULL,
  `Artel` varchar(100) DEFAULT NULL,
  `Arfax` varchar(100) DEFAULT NULL,
  `Arpricetype` varchar(1) DEFAULT NULL,
  `Armember` varchar(1) DEFAULT NULL,
  `Promotioncode` varchar(30) DEFAULT NULL,
  `Saletype` varchar(1) DEFAULT NULL,
  `Dateline` datetime DEFAULT NULL,
  `Sendday` datetime DEFAULT NULL,
  `Taxtype` varchar(1) DEFAULT NULL,
  `Taxdoc` varchar(30) DEFAULT NULL,
  `Taxrate` decimal(18,2) DEFAULT NULL,
  `Personcode` varchar(30) DEFAULT NULL,
  `Totalamount` decimal(19,4) DEFAULT NULL,
  `Totalreducepercent` decimal(18,2) DEFAULT NULL,
  `Totalreducemoney` decimal(19,4) DEFAULT NULL,
  `Totalpromotion` decimal(19,4) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Totaltrade` decimal(19,4) DEFAULT NULL,
  `Totaltax` decimal(19,4) DEFAULT NULL,
  `Refdeposit` varchar(30) DEFAULT NULL,
  `Totaldeposit` decimal(19,4) DEFAULT NULL,
  `Totalremain` decimal(19,4) DEFAULT NULL,
  `Totalcost` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Recvmoney` decimal(19,4) DEFAULT NULL,
  `Changemoney` decimal(19,4) DEFAULT NULL,
  `Salestatus` varchar(1) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`WH`,`Docno`),
  KEY `diliveryId` (`diliveryId`),
  CONSTRAINT `artrnmas_ibfk_1` FOREIGN KEY (`WH`) REFERENCES `location` (`whid`),
  CONSTRAINT `artrnmas_ibfk_2` FOREIGN KEY (`diliveryId`) REFERENCES `ardeliveryloc` (`DeliveryLocItem`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of artrnmas
-- ----------------------------
INSERT INTO `artrnmas` VALUES ('SA00001', '', '1', '1', '2013-04-18 00:00:00', 'AR00001', 'คุณ', 'พิยดา  อมรพันธ์', '155 ถ.ประชาราษฎร์บำเพ็ญ 26 ', 'สามเสนนอก ห้วยขวาง กรุงเทพฯ 10320 ', 'aom@yahoo.com', '0821457895,0221414452', '', 'A', 'Y', '', '1', '2013-04-18 00:00:00', '2013-04-18 00:00:00', '1', 'BX00001', '7.00', '', '3465.0000', '0.00', '0.0000', '0.0000', '3465.0000', '3238.3200', '226.6800', '', '0.0000', '3465.0000', '2308.0000', '', '3465.0000', '0.0000', 'X', '001');

-- ----------------------------
-- Table structure for controlupdatetable
-- ----------------------------
DROP TABLE IF EXISTS `controlupdatetable`;
CREATE TABLE `controlupdatetable` (
  `docNo` varchar(30) NOT NULL,
  `tbMaster` varchar(100) NOT NULL,
  `tbDetail` varchar(100) DEFAULT NULL,
  `sTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `userid` varchar(30) NOT NULL,
  `versionControl` int(11) NOT NULL,
  PRIMARY KEY (`docNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of controlupdatetable
-- ----------------------------
INSERT INTO `controlupdatetable` VALUES ('0', 'tbSingle', null, '2013-06-27 19:03:10', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('150', 'tbSingle', null, '2013-06-27 17:33:38', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('303', 'tbSingle', null, '2013-06-27 17:35:25', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('304', 'tbSingle', null, '2013-06-27 17:36:10', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('305', 'tbSingle', null, '2013-06-27 17:37:03', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('306', 'tbSingle', null, '2013-06-27 17:37:18', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('307', 'tbSingle', null, '2013-06-27 17:37:37', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('308', 'tbSingle', null, '2013-06-27 17:40:46', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('309', 'tbSingle', null, '2013-06-27 17:40:47', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('310', 'tbSingle', null, '2013-06-27 17:40:48', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('311', 'tbSingle', null, '2013-06-27 17:40:48', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('312', 'tbSingle', null, '2013-06-27 17:40:49', 's', '0');
INSERT INTO `controlupdatetable` VALUES ('380', 'tbSingle', null, '2013-06-27 19:03:57', 's', '0');

-- ----------------------------
-- Table structure for customer_records
-- ----------------------------
DROP TABLE IF EXISTS `customer_records`;
CREATE TABLE `customer_records` (
  `id_customer` int(10) unsigned DEFAULT NULL,
  `id_customer_key` varchar(255) DEFAULT NULL,
  `last_updated` date DEFAULT NULL,
  KEY `cus_idx` (`id_customer`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of customer_records
-- ----------------------------
INSERT INTO `customer_records` VALUES ('123456', 'var1:1000', '2010-03-15');
INSERT INTO `customer_records` VALUES ('123456', 'var2:2000', '2010-04-11');
INSERT INTO `customer_records` VALUES ('123456', 'var1:1001', '2013-05-15');
INSERT INTO `customer_records` VALUES ('123456', 'var2:2001', '2010-04-11');

-- ----------------------------
-- Table structure for docscontrol
-- ----------------------------
DROP TABLE IF EXISTS `docscontrol`;
CREATE TABLE `docscontrol` (
  `docid` varchar(4) NOT NULL DEFAULT '',
  `docnum` int(30) unsigned zerofill NOT NULL DEFAULT '000000000000000000000000000001',
  `digi` int(30) NOT NULL DEFAULT '15',
  `comment` varchar(200) DEFAULT NULL,
  `prefix` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`docid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of docscontrol
-- ----------------------------
INSERT INTO `docscontrol` VALUES ('IP', '000000000000000000000000000001', '15', 'IN STOCK', '2556');
INSERT INTO `docscontrol` VALUES ('IV', '000000000000000000000000000005', '15', 'INVOICE', '2556');
INSERT INTO `docscontrol` VALUES ('MV', '000000000000000000000000000054', '9', 'Stock Move', '2556');
INSERT INTO `docscontrol` VALUES ('OP', '000000000000000000000000000051', '15', 'OUT stock', '2556');
INSERT INTO `docscontrol` VALUES ('RR', '000000000000000000000000000001', '15', 'Receive Recipt', '2556');

-- ----------------------------
-- Table structure for employee
-- ----------------------------
DROP TABLE IF EXISTS `employee`;
CREATE TABLE `employee` (
  `Personcode` varchar(30) NOT NULL,
  `Persontitle` varchar(50) DEFAULT NULL,
  `Personname` varchar(100) DEFAULT NULL,
  `Personnickname` varchar(100) DEFAULT NULL,
  `Depart` varchar(150) DEFAULT NULL,
  `Positions` varchar(150) DEFAULT NULL,
  `Personaddr1` varchar(200) DEFAULT NULL,
  `Personaddr2` varchar(200) DEFAULT NULL,
  `Personlawaddr1` varchar(200) DEFAULT NULL,
  `Personlawaddr2` varchar(200) DEFAULT NULL,
  `Personmail` varchar(200) DEFAULT NULL,
  `Personwebsite` varchar(200) DEFAULT NULL,
  `Personpicture` longblob,
  PRIMARY KEY (`Personcode`),
  KEY `Personcode` (`Personcode`,`Personname`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ข้อมูลพนักงาน \r\n';

-- ----------------------------
-- Records of employee
-- ----------------------------
INSERT INTO `employee` VALUES ('PR00001', 'นาย', 'สิทธิชัย ใจกล้า', 'แมน', 'บัญชี', 'แคชเชียร์', '12 ถ.เชียงใหม่ - ลำปาง ต.ท่าศาลา ', 'อ.เมือง จ.เชียงใหม่ 50000', '12 ถ.เชียงใหม่ - ลำปาง ต.ท่าศาลา ', 'อ.เมือง จ.เชียงใหม่ 50000', '', '', 0x882C0000004100720061006400);
INSERT INTO `employee` VALUES ('PR00002', 'นางสาว', 'พนาวรรณ  มาดี', 'ส้ม', 'บัญชี', 'แคชเชียร์', '122/5  ม.8 ต.บ้านแหวน อ.หางดง', 'จ.เชียงใหม่ 50000', '122/5  ม.8 ต.บ้านแหวน อ.หางดง', 'จ.เชียงใหม่ 50000', '', '', null);
INSERT INTO `employee` VALUES ('PR00003', 'นางสาว', 'อารยา ไชยวงษ์', 'เอ๋', 'บัญชี', 'ผู้จัดการ', '12/1  ม.3 ต.สุเทพ อ.เมือง', 'จ.เชียงใหม่ 50000', '12/1  ม.3 ต.สุเทพ อ.เมือง', 'จ.เชียงใหม่ 50000', '', '', null);

-- ----------------------------
-- Table structure for employeephone
-- ----------------------------
DROP TABLE IF EXISTS `employeephone`;
CREATE TABLE `employeephone` (
  `Personcode` varchar(30) DEFAULT NULL,
  `Personphonetype` varchar(1) DEFAULT NULL,
  `Personphoneno` varchar(50) DEFAULT NULL,
  `Personphoneext` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ตารางย่อยเก็บข้อมูลเบอร์โทรศัพท์ของพนักงาน \r\n';

-- ----------------------------
-- Records of employeephone
-- ----------------------------
INSERT INTO `employeephone` VALUES ('PR00001', '1', '0892583214', '');
INSERT INTO `employeephone` VALUES ('PR00003', '1', '0811588215', '');
INSERT INTO `employeephone` VALUES ('PR00002', '1', '0811588215', '');

-- ----------------------------
-- Table structure for errormsg
-- ----------------------------
DROP TABLE IF EXISTS `errormsg`;
CREATE TABLE `errormsg` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ErrorCode` varchar(30) NOT NULL,
  `ErrorMsg` text NOT NULL,
  `cBy` varchar(30) NOT NULL,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mBy` varchar(30) NOT NULL,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of errormsg
-- ----------------------------
INSERT INTO `errormsg` VALUES ('1', '2300', 'Error 2300 Please Contact Admin!', '', '2013-06-13 13:46:03', '', '2013-06-19 12:02:33');
INSERT INTO `errormsg` VALUES ('2', '60001', 'Can\'t Update/Delete anather one user it.', '', '2013-06-18 13:57:04', '', '2013-06-19 12:02:33');
INSERT INTO `errormsg` VALUES ('3', '60002', 'Can\'t get Doc ID ', '', '2013-06-18 16:17:11', '', '2013-06-19 12:02:34');
INSERT INTO `errormsg` VALUES ('4', '60003', 'Want Parametor \"userid\"', '', '2013-06-19 09:38:24', '', '2013-06-19 12:02:34');
INSERT INTO `errormsg` VALUES ('5', '60004', 'Want Parametor \"Doc No\"', '', '2013-06-19 12:02:28', '', '2013-06-19 12:02:56');
INSERT INTO `errormsg` VALUES ('19', '60005', 'No Row for Update', '', '2013-06-19 14:14:38', '', '2013-06-19 14:14:38');
INSERT INTO `errormsg` VALUES ('20', '60006', 'No Row for Delete', '', '2013-06-19 14:15:38', '', '2013-06-19 14:24:37');
INSERT INTO `errormsg` VALUES ('21', '60007', 'stcode is not null', '', '2013-06-20 11:34:42', '', '2013-06-20 11:34:42');

-- ----------------------------
-- Table structure for istab
-- ----------------------------
DROP TABLE IF EXISTS `istab`;
CREATE TABLE `istab` (
  `TABTYP` varchar(4) NOT NULL DEFAULT '',
  `TYPCOD` varchar(8) NOT NULL DEFAULT '',
  `TYPVAL` int(11) NOT NULL,
  `SHORTNAM` varchar(15) NOT NULL DEFAULT '',
  `SHORTNAM2` varchar(15) DEFAULT NULL,
  `TYPDES` varchar(50) DEFAULT NULL,
  `TYPDES2` varchar(50) DEFAULT NULL,
  `FLD01` varchar(1) DEFAULT NULL,
  `FLD02` double DEFAULT NULL,
  `DEPCOD` varchar(4) DEFAULT NULL,
  `STATUS` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`TABTYP`,`TYPCOD`,`SHORTNAM`),
  KEY `TYPCOD` (`TYPCOD`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ข้อมูลพื้นฐานของระบบ\r\n';

-- ----------------------------
-- Records of istab
-- ----------------------------
INSERT INTO `istab` VALUES ('01', '01', '0', 'BBL', 'BBL', 'ธ.กรุงเทพ จำกัด', 'Bangkok Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '02', '0', 'KTB', 'KTB', 'ธ.กรุงไทย จำกัด', 'Krungthai Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '03', '0', 'TFB', 'TFB', 'ธ.กสิกรไทย จำกัด', 'Thai Farmer Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '04', '0', 'SCB', 'SCB', 'ธ.ไทยพาณิชย์ จำกัด', 'Siam Commercial Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '05', '0', 'BAY', 'BAY', 'ธ.กรุงศรีอยุธยา จำกัด', 'Bank of Ayudhya', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '06', '0', 'TMB', 'TMB', 'ธ.ทหารไทย จำกัด', 'Thai Military Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '07', '0', 'SCIB', 'SCIB', 'ธ.นครหลวงไทย จำกัด', 'Siam City Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '08', '0', 'BOA', 'BOA', 'ธ.เอเชีย จำกัด', 'Bank of Asia', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '09', '0', 'BMB', 'BMB', 'ธ.ศรีนคร จำกัด', 'Bangkok Metropolitan Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '10', '0', 'SCNB', 'SCNB', 'ธ.สแตนดาร์ดชาร์เตอร์นครธน จำกัด', 'Standard Chartered Nakornthon Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '11', '0', 'DTDB', 'DTDB', 'ธ.ดีบีเอส ไทยทนุ จำกัด', 'DBS Thai Danu Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '12', '0', 'BT', 'BT', 'ธ.ไทยธนาคาร จำกัด', 'Thai Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '13', '0', 'UOBR', 'UOBR', 'ธ.ยูโอบี รัตนสิน จำกัด', 'UOB Radanasin Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '16', '0', 'CTB', 'CTB', 'ธ.ซิตี้แบงค์ จำกัด', 'City bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '17', '0', 'BOT', 'BOT', 'ธ.โตเกียว จำกัด', 'Bank of Tokyo', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '18', '0', 'HSBC', 'HSBC', 'ธ.ฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น', 'Hongkong and Shanghai Bank', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '51', '0', 'T-BBLs', 'T-BBLs', 'เงินโอนเข้าบัญชีออมทรัพย์ ธ.กรุงเทพฯ', 'Bank Transfer - BBL', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '61', '0', 'C-BBL', 'C-BBL', 'บัตรเครดิต ธ.กรุงเทพ', 'Credit Card - BBL', '', '0', '', '');
INSERT INTO `istab` VALUES ('01', '63', '0', 'C-TFB', 'C-TFB', 'บัตรเครดิต ธ.กสิกรไทย', 'Credit Card - TFB', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '00', '0', '', '', 'เช็คในมือ', 'Cheque on Hand', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '01', '0', '', '', 'รอเรียกเก็บ', 'Clearing Cheque', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '02', '0', '', '', 'เช็คคืนยื่นใหม่', 'Re-Clearing Cheque', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '03', '0', '', '', 'เช็คขายลด', 'Discount Cheque', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '05', '0', '', '', 'เช็คจ่าย', 'Cheque Paid', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '10', '0', '', '', 'เช็คผ่าน', 'Cheque Passed', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '20', '0', '', '', 'เช็คคืน', 'Return Cheque', '', '0', '', '');
INSERT INTO `istab` VALUES ('02', '21', '0', '', '', 'ตัดหนี้สูญ', 'Bad Debt', '', '0', '', '');
INSERT INTO `istab` VALUES ('10', '00', '0', 'ทั่วไป', 'GenJnl', 'สมุดรายวันทั่วไป', 'General Journal', '', '0', '', '');
INSERT INTO `istab` VALUES ('10', '01', '0', 'จ่าย', 'PayJnl', 'สมุดรายวันจ่าย', 'Payment Journal', '', '0', '', '');
INSERT INTO `istab` VALUES ('10', '02', '0', 'รับ', 'RcpJnl', 'สมุดรายวันรับเงิน', 'Receipt Journal', '', '0', '', '');
INSERT INTO `istab` VALUES ('10', '03', '0', 'ขาย', 'SalJnl', 'สมุดรายวันขาย', 'Sales Journal', '', '0', '', '');
INSERT INTO `istab` VALUES ('10', '04', '0', 'ซื้อ', 'PurJnl', 'สมุดรายวันซื้อ', 'Purchase Journal', '', '0', '', '');
INSERT INTO `istab` VALUES ('20', '01', '0', 'กล่อง', 'Box', 'กล่อง', 'Box', '', '0', '', '');
INSERT INTO `istab` VALUES ('20', '02', '0', 'ครั้ง', 'Time', 'ครั้ง', 'Time', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '03', '0', 'คร', 'Set', 'เครื่อง', 'Set', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '04', '0', 'ชุด', 'Set', 'ชุด', 'Set', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '05', '0', 'ชิ้น', 'Pcs.', 'ชิ้น', 'Pieces', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '06', '0', 'ตัว', 'Pcs.', 'ตัว', 'Pieces', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '07', '0', 'แผง', 'Pcs', 'แผง', 'Pcs', '', '1', '', '');
INSERT INTO `istab` VALUES ('20', '08', '0', 'หีบ', 'Carton', 'หีบ', 'Carton', '', '0', '', '');
INSERT INTO `istab` VALUES ('20', '09', '0', 'โหล', 'Doz.', 'โหล', 'Dozens', '', '12', '', '');
INSERT INTO `istab` VALUES ('20', '10', '0', 'ห่อ', 'Pack', 'ห่อ', 'Pack', '', '0', '', '');
INSERT INTO `istab` VALUES ('20', '11', '0', 'อัน', 'Pcs.', 'อัน', 'Pieces', '', '1', '', '');
INSERT INTO `istab` VALUES ('21', '01', '0', 'สนญ.', 'HO.', 'คลังสำนักงานใหญ่', 'Head Office', '', '0', '', '');
INSERT INTO `istab` VALUES ('21', '02', '0', 'ขาย', 'SAL', 'คลังสำนักงานขาย', 'Sale Office', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '01', '0', 'ซีพียู', 'CPU', 'ซีพียู', 'CPU', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '02', '0', 'เมนบอร์ด', 'Mainboard', 'เมนบอร์ด', 'Mainboard', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '03', '0', 'แรม', 'RAM', 'แรม', 'RAM', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '04', '0', 'ฮาร์ดดิสก์', 'Harddisk', 'ฮาร์ดดิสก์', 'Harddisk', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '05', '0', 'ซีดีรอม', 'CD-ROM', 'ซีดีรอม', 'CD-ROM', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '06', '0', 'ฟลอปปี้ไดร์ฟ', 'Floppy drive', 'ฟลอปปี้ไดร์ฟ', 'Floppy drive', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '07', '0', 'การ์ดจอ', 'Display card', 'การ์ดจอ', 'Display card', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '08', '0', 'จอภาพ', 'Monitor', 'จอภาพ', 'Monitor', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '09', '0', 'เครื่องพิมพ์', 'Printer', 'PRINTER', 'Printer', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '10', '0', 'การ์ดเสียง', 'Sound card', 'การ์ดเสียง', 'Sound card', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '11', '0', 'ลำโพง', 'Speaker', 'ลำโพง', 'Speaker', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '12', '0', 'โมเด็ม', 'Modem', 'โมเด็ม', 'Modem', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '13', '0', 'อุปกรณ์แลน', 'Network compont', 'อุปกรณ์เครือข่าย', 'Network component', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '14', '0', 'คีย์บอร์ด', 'Keyboard', 'คีย์บอร์ด', 'Keyboard', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '15', '0', 'เมาส์', 'Mouse', 'เมาส์', 'Mouse', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '16', '0', 'เคส', 'Case', 'เคส', 'Case', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '17', '0', 'พัดลม', 'Fan', 'พัดลม', 'Fan', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '18', '0', 'กล้อง', 'Camera', 'กล้อง', 'Camera', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '19', '0', 'ยูพีเอส', 'UPS', 'ยูพีเอส', 'UPS', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '20', '0', 'Accessories', 'Accessories', 'Accessories', 'Accessories', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '50', '0', 'ซอฟต์แวร์', 'Software', 'ซอฟต์แวร์', 'Original Software', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '88', '0', 'หมวดอื่น ๆ', 'OtherGroup', 'หมวดอื่นๆ', 'OtherGroup', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', '99', '0', 'สินค้าชุด', 'Component', 'สินค้าชุด', 'Component Set', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', 'คช', '0', 'คชจ.', 'Other expenses', 'ค่าใช้จ่ายอื่น ๆ', 'Other expenses', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', 'บก', '0', 'บริการ', 'Service goods', 'สินค้าบริการ', 'Service goods', '', '0', '', '');
INSERT INTO `istab` VALUES ('22', 'รด', '0', 'รายได้', 'Other incomes', 'รายได้อื่น ๆ', 'Other incomes', '', '0', '', '');
INSERT INTO `istab` VALUES ('23', '00', '0', 'วัตถุดิบ', 'RAW-MAT', 'วัตถุดิบ', 'Raw Material', '', '0', '', '');
INSERT INTO `istab` VALUES ('23', '11', '0', 'ระดับ1', 'Lev1', 'สินค้าประกอบ ระดับ 1', 'Component Level 1', '', '0', '', '');
INSERT INTO `istab` VALUES ('23', '12', '0', 'ระดับ2', 'Lev2', 'สินค้าประกอบ ระดับ 2', 'Component Level 2', '', '0', '', '');
INSERT INTO `istab` VALUES ('23', '20', '0', 'สินค้า', 'Product', 'สินค้าสำเร็จรูป', 'Finished Goods', '', '0', '', '');
INSERT INTO `istab` VALUES ('23', '50', '0', 'อื่น ๆ', 'Others', 'สินค้าอื่นๆ', 'Other Goods', '', '0', '', '');
INSERT INTO `istab` VALUES ('31', 'B1', '0', '', null, 'เบิกออกเพราะของเสียชำรุด', null, null, null, null, null);
INSERT INTO `istab` VALUES ('31', 'B2', '0', '', null, 'เบิกออกเพราะของหาย', null, null, null, null, null);
INSERT INTO `istab` VALUES ('31', 'B3', '0', '', null, 'เบิกใช้งาน', null, null, null, null, null);
INSERT INTO `istab` VALUES ('31', 'B4', '0', '', null, 'เบิกเพื่อผลิต', null, null, null, null, null);
INSERT INTO `istab` VALUES ('31', 'B5', '0', '', null, 'เบิกอื่นๆ', null, null, null, null, null);
INSERT INTO `istab` VALUES ('32', 'R1', '0', '', null, 'รับเข้าจากยอดยกมา', null, null, null, null, null);
INSERT INTO `istab` VALUES ('32', 'R2', '0', '', null, 'รับเข้าเพราะเป็นของแถม', null, null, null, null, null);
INSERT INTO `istab` VALUES ('32', 'R3', '0', '', null, 'รับอื่นๆ', null, null, null, null, null);
INSERT INTO `istab` VALUES ('40', 'กท', '0', 'กทม.', 'BKK', 'กรุงเทพฯ', 'Bangkok', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'กล', '0', 'กลาง', 'Middle', 'ภาคกลาง', 'Middle', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'ตก', '0', 'ตก', 'West', 'ภาคตะวันตก', 'West', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'ตต', '0', 'ใต้', 'South', 'ภาคใต้', 'South', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'หน', '0', 'เหนือ', 'North', 'ภาคเหนือ', 'North', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'อก', '0', 'ออก', 'East', 'ภาคตะวันออก', 'East', '', '0', '', '');
INSERT INTO `istab` VALUES ('40', 'อส', '0', 'อีสาน', 'NR-ET', 'ภาคอีสาน', 'North Eastern', '', '0', '', '');
INSERT INTO `istab` VALUES ('41', '01', '0', 'รับเอง', 'ByCust', 'ลูกค้ามารับเอง', 'By Customer', '', '0', '', '');
INSERT INTO `istab` VALUES ('41', '02', '0', 'รสพ.', 'ETO.', 'รสพ.', 'Express Transportation Organization', '', '0', '', '');
INSERT INTO `istab` VALUES ('41', 'บท', '0', 'บรรทุก', 'Truck', 'รถบรรทุก', 'Truck', '', '0', '', '');
INSERT INTO `istab` VALUES ('42', '00', '0', 'ผลิต', 'Late', 'ผลิตไม่ทัน', 'Late Build', '', '0', '', '');
INSERT INTO `istab` VALUES ('42', '01', '0', 'ของขาด', 'OutOfStock', 'ของขาดตลาด', 'Out of Stock', '', '0', '', '');
INSERT INTO `istab` VALUES ('43', '01', '0', 'ของขาด', 'OutOfStock', 'ของขาดตลาด', 'Out of Stock', '', '0', '', '');
INSERT INTO `istab` VALUES ('44', '10', '0', 'รอตัดสินใจ', 'Considerate', 'รอการตัดสินใจ', 'Under Consideration', '', '0', '', '');
INSERT INTO `istab` VALUES ('44', '20', '0', 'รอใบสั่งซื้อ', 'WaitForP/O', 'กำลังทำเรื่องจัดซื้อ', 'P/O in Process', '', '0', '', '');
INSERT INTO `istab` VALUES ('44', '๗๗', '0', 'เลยกำหนด', 'OutOfDate', 'เลยกำหนดยืนราคา', 'Out of date', '', '0', '', '');
INSERT INTO `istab` VALUES ('44', '๘๘', '0', 'ไม่ซื้อ', 'Calcelled', 'ลูกค้าไม่ซื้อแล้ว', 'Customer Cancel', '', '0', '', '');
INSERT INTO `istab` VALUES ('44', '๙๙', '0', 'ซื้อแล้ว', 'Closed', 'ลูกค้าซื้อไปแล้ว', 'Closed Sale', '', '0', '', '');
INSERT INTO `istab` VALUES ('45', '00', '0', 'ประจำ', 'Regular', 'ลูกค้าประจำ', 'Regular Customer', '', '0', '', '');
INSERT INTO `istab` VALUES ('45', '01', '0', 'ตัวแทน', 'Dealer', 'ตัวแทนจำหน่าย', 'Dealer', '', '0', '', '');
INSERT INTO `istab` VALUES ('45', '๙๙', '0', 'ล/ค จร', 'Temporary', 'ลูกค้าชั่วคราว', 'Temporary Customer', '', '0', '', '');
INSERT INTO `istab` VALUES ('46', '00', '0', 'ประจำ', 'Regular', 'ผู้จำหน่ายประจำ', 'Regular Supplier', '', '0', '', '');
INSERT INTO `istab` VALUES ('46', '01', '0', 'ตปท.', 'Foreign', 'ผู้จำหน่ายต่างประเทศ', 'Foreign Supplier', '', '0', '', '');
INSERT INTO `istab` VALUES ('46', '๙๙', '0', 'ชั่วคราว', 'Temp', 'ผู้จำหน่ายชั่วคราว', 'Temporary Supplier', '', '0', '', '');
INSERT INTO `istab` VALUES ('50', 'ขาย1', '0', 'สนญ', 'HO', 'แผนกขาย สนญ.', 'Head Office', '', '0', '', '');
INSERT INTO `istab` VALUES ('50', 'ขาย2', '0', 'ลาดพร้าว', 'Ladprao', 'แผนกขาย ลาดพร้าว', 'Ladprao Branch', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '06', '0', '00', '', 'บริษัท', '', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '06', '0', '01', '', 'หจก.', '', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '06', '0', '02', '', 'ร้าน', '', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '41', '0', '03', '', 'Payin', 'Payin', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '01', '', '01.เงินในบัญชีไม่พอจ่าย', '01.Insufficient funds', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '02', '', '02.โปรดติดต่อผู้สั่งจ่าย', '02.Refer to drawer', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '03', '', '03.ยังไม่มีการตกลงกับธนาคาร', '03.Not arranged for', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '04', '', '04.บัญชีปิดแล้ว', '04.Account closed', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '05', '', '05.สั่งจ่ายจากจำนวนที่มีตราสารรอเรียกเก็บเงินอยู่', '05.Drawn on the amount awaiting clearance', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '06', '', '06.เช็คลงวันที่ล่วงหน้า', '06.Post dated', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '07', '', '07.เช็คพ้นกำหนดการจ่ายเงิน', '07.Out of date', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '08', '', '08.จำนวนเงินตัวอักษรและตัวเลขไม่ตรงกัน', '08.Words and figures differ', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '09', '', '09.ให้ผู้สั่งจ่ายลงนามเต็มกำกับการแก้ไข', '09.Alteration requires drawer\'s full signature', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '10', '', '10.ลายมือผู้สั่งจ่ายไม่เหมือนตัวอย่าง', '10.Drawer\'s signature irregular', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '11', '', '11.ลายมือชื่อผู้สั่งจ่ายไม่สมบูรณ์', '11.Drawer\'s signature incomplete', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '12', '', '12.ลายมือชื่อผู้สั่งจ่ายไม่มี', '12.Drawer\'s signature required', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '13', '', '13.โปรดประทับตราของผู้สั่งจ่าย', '13.Drawer\'s seal required', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '14', '', '14.โปรดให้ผู้รับเงินสลักหลัง', '14.Payee\'s endorsement required', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '15', '', '15.การสลักหลังผิดปกติ', '15.Endorsement irregular', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '16', '', '16.การสลักหลังด้วยลายพิมพ์นิ้วมือไม่มีผล', '16.Finger print not acceptable as endorsement', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '17', '', '17.โปรดสลักหลังด้วยหมึก', '17.Please endorse in ink', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '18', '', '18.มีคำสั่งให้ระงับการจ่าย', '18.Payment stopped', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '19', '', '19.เช็คชำรุด', '19.Cheque mutilated', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '20', '', '20.เช็คสั่งจ่ายผิดปกติ', '20.Cheque irregularly drawn', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '21', '', '21.เช็ค ตจว.โปรดนำส่งเพื่อเรียกเก็บ', '21.Upcountry cheque, please send for collection', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '22', '', '22.ไม่มีบัญชี', '22.No account', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '23', '', '23.ผู้สั่งจ่ายมีที่อยู่ ตปท.ให้นำแบบ ธต.ประกอบด้วย', '23.Drawer is non-resident, FT.required', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '24', '', '24.โปรดรับรอง \"เข้าบัญชี....แล้ว\"', '24.Please confirm \"....\'s account credited\"', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '25', '', '25.เช็คปลอม/มิใช่แบบพิมพ์เข็คที่ตกลงไว้กับธ.', '25.Forged cheque/Irregular cheque', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '26', '', '26.ผู้สั่งจ่ายถึงแก่กรรม', '26.Drawer deceased', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '49', '0', '27', '', '27.เช็คขีดคร่อมเฉพาะให้แก่ธ. ให้ผู้สั่งจ่ายออกใหม่', '27.Cheque Specially crossed to more than on bank.', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '10', '10', '1.เงินเดือน  ;tS01,c1', '1.Salary  ;tS01,c1', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '11', '11', '1.ค่าจ้าง    ;tS01,c1', '1.Wages  ;tS01,c1', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '12', '12', '1.โบนัส      ;tS01,c1', '1.Bonus  ;tS01,c1', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '21', '21', '2.ค่านายหน้า ;tS01,c1,r3 จ่ายบุคคลธรรมดา', '2.Commission ;tS01,c1,r3 pay to person', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '22', '22', '2.ค่านายหน้า ;tS53,c1,r3 จ่ายนิติบุคคล', '2.Commission ;t53,c1,r3 paid to aJuristicPerson', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '40', '40', '4(ก).ค่าดอกเบี้ย', '4(ก).Interest', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '411', '41', '4(ข)1.1เงินปันผลกิจการ30%', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '412', '41', '4(ข)1.2เงินปันผลกิจการ25%', '4(ข)1.2 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '413', '41', '4(ข)1.3เงินปันผลกิจการ20%', '4(ข)1.2 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '421', '41', '4(ข)2.1เงินกำไรที่ได้รับยกเว้น', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '422', '41', '4(ข)2.2เงินปันผลหรือกำไรที่ได้รับยกเว้น', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '423', '41', '4(ข)2.3กำไรสุทธิที่หักผลขาดทุนแล้ว', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '424', '41', '4(ข)2.4กำไรที่รับรู้ทางบัญชี', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '425', '41', '4(ข)2.5อื่นๆ(..ป้อนตรงนี้เอง..)', '4(ข)1.1 Dividend', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '50', '50', '5.ค่าจ้างทำของ;tS03,c1,r3 จ่ายบุคคลธรรมดา', '5.Made to order charge;tS01,c1,r3 paid to person', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '51', '51', '5.ค่าจ้างทำของ;tS53,c1,r3 จ่ายนิติบุคคล', '5.Made to order charge;tS53;c1,r3 paid to aJuristi', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '52', '52', '5.ค่าโฆษณา  ;tS53,c1,r2 จ่ายนิติบุคคล', '5.Advertising', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '53', '53', '5.ค่าเช่า', '5.Rental', '', '0', '', '');
INSERT INTO `istab` VALUES ('51', '75', '0', '60', '60', '6.อื่นๆ(..ป้อนตรงนี้เอง...)', '6.Other(...input here...)', '', '0', '', '');
INSERT INTO `istab` VALUES ('52', 'CA', '0', 'รถ', 'Car', 'ยานพาหนะ', 'Vehicles', '', '0', '', '');
INSERT INTO `istab` VALUES ('52', 'CO', '0', 'คอมพิวเตอร์', 'Computer', 'คอมพิวเตอร์และอุปกรณ์', 'Computer & Equipment', '', '0', '', '');
INSERT INTO `istab` VALUES ('52', 'EQ', '0', 'อุปกรณ์', 'Equipment', 'อุปกรณ์สำนักงาน', 'Office Equipment', '', '0', '', '');
INSERT INTO `istab` VALUES ('52', 'FU', '0', 'เฟอร์นิเจอร์', 'Furniture', 'เฟอร์นิเจอร์', 'Furniture', '', '0', '', '');
INSERT INTO `istab` VALUES ('53', '00', '0', 'รอเคลียร์', 'Clearing', 'รอเคลียร์', 'Clearing', '', '0', '', '');
INSERT INTO `istab` VALUES ('53', '99', '0', 'เรียบร้อย', 'Complete', 'เรียบร้อย', 'Complete', '', '0', '', '');
INSERT INTO `istab` VALUES ('55', 'S03', '0', 'ภงด.3', 'Pnd.3', 'แบบยื่นภาษีหัก ณ ที่จ่าย (บุคคลธรรมดา)', 'Withholding Tax (PND.3)', '', '0', '', '');
INSERT INTO `istab` VALUES ('55', 'S53', '0', 'ภงด.53', 'Pnd.53', 'แบบยื่นภาษีหัก ณ ที่จ่าย (นิติบุคคล)', 'Withholding Tax (PND.53)', '', '0', '', '');
INSERT INTO `istab` VALUES ('55', 'Z03', '0', 'ถูกหัก(ไม่ยื่น)', 'ถูกหัก(ไม่ยื่น)', 'ภาษีถูกหัก ณ ที่จ่าย (บุคคลธรรมดา)', 'ภาษีถูกหัก ณ ที่จ่าย (บุคคลธรรมดา)', '', '0', '', '');
INSERT INTO `istab` VALUES ('55', 'Z53', '0', 'ถูกหัก(ไม่ยื่น)', 'ถูกหัก(ไม่ยื่น)', 'ภาษีถูกหัก ณ ที่จ่าย (นิติบุคคล)', 'ภาษีถูกหัก ณ ที่จ่าย (นิติบุคคล)', '', '0', '', '');
INSERT INTO `istab` VALUES ('97', '15', '0', 'digi', 'digi', 'ค่า default ของ จำนวนหลักในเลขที่เอกสาร', null, null, null, null, null);
INSERT INTO `istab` VALUES ('98', '5', '0', '00:05:00', null, 'Session Time Out ', null, null, null, null, null);
INSERT INTO `istab` VALUES ('99', 'A', '0', 'Active', null, 'Active', null, null, null, null, null);
INSERT INTO `istab` VALUES ('99', 'D', '0', 'DELETE', null, 'DELETE', null, null, null, null, null);
INSERT INTO `istab` VALUES ('99', 'I', '0', 'InActive', null, 'InActive', null, null, null, null, null);

-- ----------------------------
-- Table structure for location
-- ----------------------------
DROP TABLE IF EXISTS `location`;
CREATE TABLE `location` (
  `whid` int(11) NOT NULL AUTO_INCREMENT,
  `LocSN` varchar(30) DEFAULT NULL,
  `LocationName` varchar(200) DEFAULT NULL,
  `warehouseid` int(11) DEFAULT NULL,
  `status` char(1) DEFAULT NULL,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`whid`),
  KEY `FKWHSTA` (`status`),
  KEY `warehouseid` (`warehouseid`),
  CONSTRAINT `FKWHSTA` FOREIGN KEY (`status`) REFERENCES `istab` (`TYPCOD`),
  CONSTRAINT `location_ibfk_1` FOREIGN KEY (`warehouseid`) REFERENCES `warehouse` (`warehouseID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='ใช้เก็บสินค้า ';

-- ----------------------------
-- Records of location
-- ----------------------------
INSERT INTO `location` VALUES ('1', 'LD42', 'Ladprao42/ชั้น 1', '1', 'A', '2013-04-18 05:07:07', '2013-04-22 14:54:02', 'Admin', 's');
INSERT INTO `location` VALUES ('2', 'LD152', 'Ladprao15/ชั้น 1', '2', 'A', '2013-04-18 05:07:07', '2013-04-24 11:50:30', 'Admin', 's');
INSERT INTO `location` VALUES ('3', 'CM', 'ChangMai/ชั้น 1', '3', 'A', '2013-04-18 05:07:07', '2013-04-22 14:54:22', 'Admin', 's');
INSERT INTO `location` VALUES ('4', 'CB11', 'Chonburi/ชั้น 1', '4', 'A', '2013-04-18 05:07:07', '2013-04-24 11:50:38', 'Admin', 's');
INSERT INTO `location` VALUES ('5', 'CB12', 'Chonburi/ชั้น 2', '4', 'A', '2013-04-18 05:07:07', '2013-04-24 14:01:57', 'Admin', 's');

-- ----------------------------
-- Table structure for logstatus
-- ----------------------------
DROP TABLE IF EXISTS `logstatus`;
CREATE TABLE `logstatus` (
  `logstatusid` int(11) NOT NULL AUTO_INCREMENT,
  `value` varchar(255) DEFAULT NULL,
  `comment` varchar(300) DEFAULT NULL,
  PRIMARY KEY (`logstatusid`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of logstatus
-- ----------------------------
INSERT INTO `logstatus` VALUES ('1', 'ALL', 'ทั้งหมด');
INSERT INTO `logstatus` VALUES ('2', 'IN', 'Log IN');
INSERT INTO `logstatus` VALUES ('3', 'OUT', 'Log Out');
INSERT INTO `logstatus` VALUES ('4', 'NEW', 'New Record');
INSERT INTO `logstatus` VALUES ('5', 'DEL', 'Delete Record');
INSERT INTO `logstatus` VALUES ('6', 'UPDATE', 'Upate Record');

-- ----------------------------
-- Table structure for modules
-- ----------------------------
DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `Name` varchar(10) NOT NULL,
  `SHORNAME` varchar(15) DEFAULT NULL,
  `LNAME` varchar(30) DEFAULT NULL,
  `Notes` text,
  PRIMARY KEY (`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of modules
-- ----------------------------
INSERT INTO `modules` VALUES ('AP', 'AP', null, 'Account Payable');
INSERT INTO `modules` VALUES ('AR', 'AR', null, 'Account receivable');
INSERT INTO `modules` VALUES ('IN', 'IN', null, 'Stock IN');
INSERT INTO `modules` VALUES ('MV', 'MV', null, 'Stock Move ment');
INSERT INTO `modules` VALUES ('OUT', 'OUT', null, 'Stock OUT');
INSERT INTO `modules` VALUES ('ST', 'ST', null, 'Stock Management');

-- ----------------------------
-- Table structure for movewhdetail
-- ----------------------------
DROP TABLE IF EXISTS `movewhdetail`;
CREATE TABLE `movewhdetail` (
  `DocNo` varchar(30) NOT NULL,
  `No` int(11) NOT NULL,
  `item` varchar(30) NOT NULL,
  `description` varchar(80) NOT NULL,
  `qty` int(11) NOT NULL,
  `units` varchar(30) NOT NULL,
  PRIMARY KEY (`DocNo`,`No`),
  CONSTRAINT `movewhdetail_ibfk_1` FOREIGN KEY (`DocNo`) REFERENCES `movewhmaster` (`DocNo`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of movewhdetail
-- ----------------------------
INSERT INTO `movewhdetail` VALUES ('MV0000028', '4', '13', '13', '13', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000028', '5', '14', '14', '14', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000029', '1', '12312', '123123', '121', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000029', '2', '1231', '213123', '1233123', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000029', '3', '123', '1231', '78', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000030', '1', '1231', '1231', '12', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000031', '1', '123', '123', '12', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000032', '1', '123123', '32123', '1232', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000032', '2', '121211', '1212', '121', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000033', '1', '123', '123', '123', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000033', '2', '123', '1231', '12', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '1', '2131321231', '1231', '12', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '2', '222', '222', '22', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '3', '333', '333', '33', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '4', '444', '444', '444', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '5', '5555', '555', '55', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '6', '666', '666', '666', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '7', '777', '777', '77', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '8', '888', '888', '888', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '9', '799', '99', '999', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000034', '10', '0010', '101', '10', 'กล่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000036', '1', '222222222', 'BBBBB1111123123', '12', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000036', '2', '222222222', 'BBBBB1111', '2', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000036', '3', '111111111', 'AAAAA', '1', 'ชิ้น');
INSERT INTO `movewhdetail` VALUES ('MV0000036', '4', '444444444', 'DDDDD', '1', 'ชุด');
INSERT INTO `movewhdetail` VALUES ('MV0000036', '5', '111111111', 'AAAAA123123', '11', 'ชิ้น');
INSERT INTO `movewhdetail` VALUES ('MV0000037', '1', '111111111', 'AAAAA1231231', '1', 'ชิ้น');
INSERT INTO `movewhdetail` VALUES ('MV0000037', '2', '333333333', 'CCCCC', '1', 'เครื่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000037', '3', '333333333', 'CCCCC', '1', 'เครื่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000037', '4', '222222222', 'BBBBB1111', '1', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000037', '5', '222222222', '01231231', '2', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000038', '1', '111111111', 'AAAAA', '1', 'ชิ้น');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '1', '111111111', 'desc', '2', 'unit');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '2', '222222222', '5', '2', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '3', '222222222', 'test', '12', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '4', '111111111', 'desc', '2', 'unit');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '5', '222222222', '52132123', '12', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '6', '222222222', 'BBBBB1111', '1', 'ครั้ง');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '7', '333333333', '5', '1', 'เครื่อง');
INSERT INTO `movewhdetail` VALUES ('MV0000039', '8', '222222222', 'BBBBB1111', '1', 'ครั้ง');

-- ----------------------------
-- Table structure for movewhmaster
-- ----------------------------
DROP TABLE IF EXISTS `movewhmaster`;
CREATE TABLE `movewhmaster` (
  `DocNo` varchar(30) NOT NULL,
  `frmWH` varchar(30) NOT NULL,
  `toWH` varchar(30) NOT NULL,
  `DocDate` datetime NOT NULL,
  `Notes` text,
  `Employee` varchar(30) NOT NULL,
  `status` char(1) NOT NULL DEFAULT 'A',
  `cBy` varchar(30) NOT NULL,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mBy` varchar(30) NOT NULL,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`DocNo`,`status`),
  KEY `DocNo` (`DocNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of movewhmaster
-- ----------------------------
INSERT INTO `movewhmaster` VALUES ('MV000002', '2', '1', '2013-05-31 00:00:00', 'หมายเหตุ', 'PR00001', 'A', 's', '2013-05-31 09:28:51', 's', '2013-05-31 18:41:55');
INSERT INTO `movewhmaster` VALUES ('MV0000020', '3', '3', '2013-05-29 00:00:00', '23', 'PR00001', 'A', 's', '2013-05-31 10:53:49', 's', '2013-05-31 18:41:56');
INSERT INTO `movewhmaster` VALUES ('MV0000021', '3', '3', '2013-05-31 00:00:00', '123123', 'PR00001', 'A', 's', '2013-05-31 10:59:58', 's', '2013-05-31 18:41:54');
INSERT INTO `movewhmaster` VALUES ('MV0000022', '1', '3', '2013-05-29 00:00:00', '123132', 'PR00001', 'A', 's', '2013-05-31 11:17:02', 's', '2013-05-31 18:41:53');
INSERT INTO `movewhmaster` VALUES ('MV0000025', '3', '2', '2013-05-21 00:00:00', '', 'PR00001', 'A', 's', '2013-05-31 11:41:01', 's', '2013-05-31 18:43:14');
INSERT INTO `movewhmaster` VALUES ('MV0000027', '3', '4', '2013-05-26 00:00:00', '123', 'PR00001', 'A', 's', '2013-05-31 11:41:45', 's', '2013-06-03 14:07:48');
INSERT INTO `movewhmaster` VALUES ('MV0000028', '1', '2', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-05-31 11:42:20', 's', '2013-06-20 09:55:23');
INSERT INTO `movewhmaster` VALUES ('MV0000029', '3', '1', '2013-05-29 00:00:00', '292929', 'PR00002', 'A', 's', '2013-05-31 11:54:45', 's', '2013-06-04 18:08:18');
INSERT INTO `movewhmaster` VALUES ('MV0000030', '3', '2', '2013-05-21 00:00:00', 'test123456789', 'PR00003', 'A', 's', '2013-05-31 12:24:20', 's', '2013-06-04 18:07:51');
INSERT INTO `movewhmaster` VALUES ('MV0000031', '3', '1', '2013-05-31 00:00:00', 'test111', 'PR00003', 'C', 's', '2013-05-31 14:09:56', 's', '2013-06-04 16:11:51');
INSERT INTO `movewhmaster` VALUES ('MV0000032', '3', '4', '2013-05-22 00:00:00', '123123', 'PR00001', 'C', 's', '2013-05-31 15:33:34', 's', '2013-06-04 15:57:01');
INSERT INTO `movewhmaster` VALUES ('MV0000033', '3', '2', '2013-05-22 00:00:00', '12312', 'PR00002', 'C', 's', '2013-05-31 15:47:37', 's', '2013-06-04 15:56:42');
INSERT INTO `movewhmaster` VALUES ('MV0000034', '3', '1', '2013-05-08 00:00:00', 'sddd123', 'PR00001', 'I', 's', '2013-05-31 17:01:57', 's', '2013-06-04 16:12:07');
INSERT INTO `movewhmaster` VALUES ('MV0000036', '1', '2', '2013-06-15 00:00:00', '212312123', 'PR00002', 'I', 's', '2013-06-03 18:20:31', 's', '2013-06-04 14:11:36');
INSERT INTO `movewhmaster` VALUES ('MV0000037', '1', '2', '2013-06-18 00:00:00', '12345613123123111111ddd', 'PR00001', 'A', 's', '2013-06-04 18:12:22', 's', '2013-06-05 13:52:02');
INSERT INTO `movewhmaster` VALUES ('MV0000038', '2', '4', '2013-06-18 00:00:00', '1231231', 'PR00001', 'A', 's', '2013-06-05 13:54:18', 's', '2013-06-05 13:54:18');
INSERT INTO `movewhmaster` VALUES ('MV0000039', '1', '3', '2013-06-24 00:00:00', 'test', 'PR00002', 'A', 's', '2013-06-05 13:55:38', 's', '2013-06-05 13:55:38');
INSERT INTO `movewhmaster` VALUES ('MV2556045', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:26:26', 's', '2013-06-18 17:39:07');
INSERT INTO `movewhmaster` VALUES ('MV2556046', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:26:49', 's', '2013-06-18 17:38:58');
INSERT INTO `movewhmaster` VALUES ('MV2556047', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:27:29', 's', '2013-06-18 17:38:50');
INSERT INTO `movewhmaster` VALUES ('MV2556048', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:33:46', 's', '2013-06-18 17:38:43');
INSERT INTO `movewhmaster` VALUES ('MV2556049', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:34:06', 's', '2013-06-18 17:38:37');
INSERT INTO `movewhmaster` VALUES ('MV2556050', '1', '2', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-18 17:35:05', 's', '2013-06-18 18:28:06');
INSERT INTO `movewhmaster` VALUES ('MV2556052', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-19 11:11:51', 's', '2013-06-19 11:11:51');
INSERT INTO `movewhmaster` VALUES ('MV2556053', '2', '1', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-19 11:14:30', 's', '2013-06-19 11:14:30');
INSERT INTO `movewhmaster` VALUES ('MV2556054', '1', '4', '2013-05-31 00:00:00', 'notes', 'PR00001', 'A', 's', '2013-06-19 11:28:57', 's', '2013-06-25 14:26:08');

-- ----------------------------
-- Table structure for opencode
-- ----------------------------
DROP TABLE IF EXISTS `opencode`;
CREATE TABLE `opencode` (
  `Opencode` varchar(30) NOT NULL,
  `Opendes` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`Opencode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of opencode
-- ----------------------------
INSERT INTO `opencode` VALUES ('B1', 'เบิกออกเพราะของเสียชำรุด');
INSERT INTO `opencode` VALUES ('B2', 'เบิกออกเพราะของหาย');
INSERT INTO `opencode` VALUES ('B3', 'เบิกใช้งาน');
INSERT INTO `opencode` VALUES ('B4', 'เบิกเพื่อผลิต');
INSERT INTO `opencode` VALUES ('B5', 'เบิกอื่นๆ');
INSERT INTO `opencode` VALUES ('R1', 'รับเข้าจากยอดยกมา');
INSERT INTO `opencode` VALUES ('R2', 'รับเข้าเพราะเป็นของแถม');
INSERT INTO `opencode` VALUES ('R3', 'รับอื่นๆ');

-- ----------------------------
-- Table structure for opendetail
-- ----------------------------
DROP TABLE IF EXISTS `opendetail`;
CREATE TABLE `opendetail` (
  `Docno` varchar(30) NOT NULL DEFAULT '',
  `Item` int(11) NOT NULL DEFAULT '0',
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Locationcode` int(11) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`Docno`,`Item`),
  KEY `Stcode` (`Stcode`),
  KEY `Locationcode` (`Locationcode`),
  CONSTRAINT `opendetail_ibfk_1` FOREIGN KEY (`Docno`) REFERENCES `openmaster` (`Docno`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `opendetail_ibfk_2` FOREIGN KEY (`Stcode`) REFERENCES `stmas` (`stcode`),
  CONSTRAINT `opendetail_ibfk_3` FOREIGN KEY (`Locationcode`) REFERENCES `location` (`whid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of opendetail
-- ----------------------------
INSERT INTO `opendetail` VALUES ('OP0000001', '1', '111111111', 'AAAAA', '01', null, 'ชิ้น', '1.00', '1', 'Y', 'B', null, 'N', 'N', '2.00', '2.00', '200.0000', '200.0000', '200.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '2', '222222222', 'BBBBB', '01', null, 'กล่อง', '2.00', '1', 'Y', 'B', null, 'N', 'N', '2.00', '2.00', '200.0000', '200.0000', '200.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '3', '444444444', 'DDDDD', '', '0', 'กล่อง', '0.00', '1', '', '', '0', '', '', '0.00', '44.00', '2.0000', '0.0000', '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '4', '444444444', 'DDDDD', '', '0', 'กล่อง', '0.00', '1', '', '', '0', '', '', '0.00', '41.00', '2.0000', '0.0000', '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '5', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '3', null, null, null, null, null, null, '30.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '6', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '22.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '7', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', null, null, null, null, null, null, '11.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '8', '444444444', 'DDDDD', '', '0', '0', '0.00', '1', '', '', '0', '', '', '0.00', '44.00', '2.0000', '0.0000', '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '9', '333333333', 'CCCCC', '', '0', 'ชิ้น', '0.00', '1', '', '', '0', '', '', '0.00', '33.00', '2.0000', '0.0000', '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '10', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '33.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '11', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '21.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '12', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '33.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '13', '444444444', 'DDDDD', null, null, 'กล่อง', null, '1', null, null, null, null, null, null, '55.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '14', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', null, null, null, null, null, null, '22.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '15', '444444444', 'DDDDD', '', '0', '0', '0.00', '1', '', '', '0', '', '', '0.00', '0.00', '2.0000', '0.0000', '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '16', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '33.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000001', '17', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '33.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000008', '1', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '10.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000008', '2', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '30.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000012', '1', '444444444', 'DDDDD', null, null, 'กล่อง', null, '1', null, null, null, null, null, null, '10.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000012', '2', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', null, null, null, null, null, null, '12.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000012', '3', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', null, null, null, null, null, null, '33.00', '2.0000', null, '0.0000');
INSERT INTO `opendetail` VALUES ('OP0000012', '4', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', null, null, null, null, null, null, '1.00', '2.0000', null, '0.0000');

-- ----------------------------
-- Table structure for openmaster
-- ----------------------------
DROP TABLE IF EXISTS `openmaster`;
CREATE TABLE `openmaster` (
  `Docno` varchar(30) NOT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `docDate` datetime DEFAULT NULL,
  `Personcode` varchar(30) DEFAULT NULL,
  `Personname` varchar(100) DEFAULT NULL,
  `Projectcode` varchar(30) DEFAULT NULL,
  `Opencode` varchar(30) DEFAULT NULL,
  `Opendes` varchar(200) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  `cDate` datetime DEFAULT NULL,
  `mDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Docno`),
  KEY `Projectcode` (`Projectcode`),
  KEY `Opencode` (`Opencode`),
  KEY `openmaster_ibfk_3` (`Personcode`,`Personname`),
  CONSTRAINT `openmaster_ibfk_1` FOREIGN KEY (`Projectcode`) REFERENCES `projectcode` (`Projectcode`),
  CONSTRAINT `openmaster_ibfk_3` FOREIGN KEY (`Personcode`) REFERENCES `employee` (`Personcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of openmaster
-- ----------------------------
INSERT INTO `openmaster` VALUES ('OP0000001', 'SA0001', '2013-04-23 00:00:00', 'PR00003', 'อารยา ไชยวงษ์', 'A', 'B2', 'เบิกออกเพราะของหาย', '800.0000', 'หมายเหตุ', null, null, null, null, null);
INSERT INTO `openmaster` VALUES ('OP0000008', '12312', '2013-05-14 00:00:00', 'PR00003', 'อารยา ไชยวงษ์', null, 'B1', null, '80.0000', null, null, null, null, null, null);
INSERT INTO `openmaster` VALUES ('OP0000012', 'aadfas', '2013-05-14 00:00:00', 'PR00001', 'สิทธิชัย ใจกล้า', null, 'B3', null, '0.0000', null, null, null, null, null, null);

-- ----------------------------
-- Table structure for opensn
-- ----------------------------
DROP TABLE IF EXISTS `opensn`;
CREATE TABLE `opensn` (
  `Docno` varchar(30) NOT NULL DEFAULT '',
  `Item` int(11) NOT NULL DEFAULT '0',
  `SN` varchar(80) DEFAULT NULL,
  `SNLocation` varchar(30) DEFAULT NULL,
  `Stcarditem` int(11) DEFAULT NULL,
  PRIMARY KEY (`Docno`,`Item`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of opensn
-- ----------------------------

-- ----------------------------
-- Table structure for persons
-- ----------------------------
DROP TABLE IF EXISTS `persons`;
CREATE TABLE `persons` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Firstname` varchar(32) DEFAULT NULL,
  `Lastname` varchar(32) DEFAULT NULL,
  `Sex` char(1) DEFAULT NULL,
  `Age` tinyint(3) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of persons
-- ----------------------------
INSERT INTO `persons` VALUES ('1', 'Johny', 'Doe', 'M', '19');
INSERT INTO `persons` VALUES ('2', 'Bob', 'Black', 'M', '40');
INSERT INTO `persons` VALUES ('3', 'Zoe', 'Chan', 'F', '21');
INSERT INTO `persons` VALUES ('4', 'Kona', 'Khan', 'F', '32');
INSERT INTO `persons` VALUES ('5', 'Kader', 'Khan', 'M', '56');
INSERT INTO `persons` VALUES ('6', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('7', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('8', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('9', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('10', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('11', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('12', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('13', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('14', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('15', 'Kona', null, 'F', '20');
INSERT INTO `persons` VALUES ('16', 'Kona', null, 'F', '20');

-- ----------------------------
-- Table structure for podetail
-- ----------------------------
DROP TABLE IF EXISTS `podetail`;
CREATE TABLE `podetail` (
  `Docno` varchar(30) NOT NULL DEFAULT '',
  `Item` int(11) NOT NULL DEFAULT '0',
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,4) DEFAULT NULL,
  `Locationcode` varchar(30) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `Quan` decimal(18,4) DEFAULT NULL,
  `Stquan` decimal(18,4) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,4) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`Docno`,`Item`),
  KEY `Docno` (`Docno`),
  KEY `Stcode` (`Stcode`),
  CONSTRAINT `podetail_ibfk_1` FOREIGN KEY (`Docno`) REFERENCES `pohead` (`Docno`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `podetail_ibfk_2` FOREIGN KEY (`Stcode`) REFERENCES `stmas` (`stcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of podetail
-- ----------------------------
INSERT INTO `podetail` VALUES ('PO00001', '1', '111111111', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

-- ----------------------------
-- Table structure for pohead
-- ----------------------------
DROP TABLE IF EXISTS `pohead`;
CREATE TABLE `pohead` (
  `Docno` varchar(30) NOT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Buytype` varchar(1) DEFAULT NULL,
  `Sendday` datetime DEFAULT NULL,
  `Taxtype` varchar(1) DEFAULT NULL,
  `Taxrate` decimal(18,4) DEFAULT NULL,
  `Totalamount` decimal(19,4) DEFAULT NULL,
  `Totalreducepercent` decimal(18,4) DEFAULT NULL,
  `Totalreducemoney` decimal(19,4) DEFAULT NULL,
  `Refdeposit` varchar(30) DEFAULT NULL,
  `Totaldeposit` decimal(19,4) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Totaltrade` decimal(19,4) DEFAULT NULL,
  `Totaltax` decimal(19,4) DEFAULT NULL,
  `Totalremain` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`),
  KEY `Apcode` (`Apcode`),
  CONSTRAINT `pohead_ibfk_1` FOREIGN KEY (`Apcode`) REFERENCES `apcode` (`Apcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of pohead
-- ----------------------------
INSERT INTO `pohead` VALUES ('PO00001', null, '2013-04-22 17:14:41', null, 'AP00001', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

-- ----------------------------
-- Table structure for projectcode
-- ----------------------------
DROP TABLE IF EXISTS `projectcode`;
CREATE TABLE `projectcode` (
  `Projectcode` varchar(30) NOT NULL,
  `Projectdes` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`Projectcode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of projectcode
-- ----------------------------
INSERT INTO `projectcode` VALUES ('A', 'Project A');
INSERT INTO `projectcode` VALUES ('B', 'Project B');

-- ----------------------------
-- Table structure for recvdetail
-- ----------------------------
DROP TABLE IF EXISTS `recvdetail`;
CREATE TABLE `recvdetail` (
  `Docno` varchar(30) NOT NULL DEFAULT '',
  `Item` int(11) NOT NULL DEFAULT '0',
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL COMMENT 'รหัสหน่วยนับ ',
  `Usecount` varchar(150) DEFAULT NULL COMMENT 'ชื่อหน่วยนับ เช่น โหล ชิ้น ',
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Locationcode` varchar(30) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Reduceitempercent` decimal(18,2) DEFAULT NULL,
  `Reduceitemmoney` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`Docno`,`Item`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvdetail
-- ----------------------------

-- ----------------------------
-- Table structure for recvhead
-- ----------------------------
DROP TABLE IF EXISTS `recvhead`;
CREATE TABLE `recvhead` (
  `Docno` varchar(30) NOT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Podoc` varchar(30) DEFAULT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Apcode` varchar(30) DEFAULT NULL,
  `Aptitle` varchar(50) DEFAULT NULL,
  `Apname` varchar(150) DEFAULT NULL,
  `Apaddr1` varchar(100) DEFAULT NULL,
  `Apaddr2` varchar(100) DEFAULT NULL,
  `Apemail` varchar(150) DEFAULT NULL,
  `Aptel` varchar(100) DEFAULT NULL,
  `Apfax` varchar(100) DEFAULT NULL,
  `Buytype` varchar(1) DEFAULT NULL,
  `Dateline` datetime DEFAULT NULL,
  `Taxtype` varchar(1) DEFAULT NULL,
  `Taxrate` decimal(18,4) DEFAULT NULL,
  `Totalamount` decimal(19,4) DEFAULT NULL,
  `Totalreducepercent` decimal(18,4) DEFAULT NULL,
  `Totalreducemoney` decimal(19,4) DEFAULT NULL,
  `Refdeposit` varchar(30) DEFAULT NULL,
  `Totaldeposit` decimal(19,4) DEFAULT NULL,
  `Totalall` decimal(19,4) DEFAULT NULL,
  `Totaltrade` decimal(19,4) DEFAULT NULL,
  `Totaltax` decimal(19,4) DEFAULT NULL,
  `Totalremain` decimal(19,4) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Buystatus` varchar(1) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvhead
-- ----------------------------
INSERT INTO `recvhead` VALUES ('', '1', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
INSERT INTO `recvhead` VALUES ('00000002', 'a', '1', '0000-00-00 00:00:00', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

-- ----------------------------
-- Table structure for recvotherdetail
-- ----------------------------
DROP TABLE IF EXISTS `recvotherdetail`;
CREATE TABLE `recvotherdetail` (
  `Docno` varchar(30) NOT NULL DEFAULT '',
  `Item` int(11) NOT NULL,
  `Stcode` varchar(30) DEFAULT NULL,
  `Stdes` varchar(200) DEFAULT NULL,
  `Stgroupcode` varchar(30) DEFAULT NULL,
  `Stitem` int(11) DEFAULT NULL,
  `Usecount` varchar(150) DEFAULT NULL,
  `Stcut` decimal(18,2) DEFAULT NULL,
  `Lost` decimal(10,0) DEFAULT NULL,
  `Blame` decimal(10,0) DEFAULT NULL,
  `Dilapidated` decimal(10,0) DEFAULT NULL,
  `Complete` decimal(10,0) DEFAULT NULL,
  `Locationcode` varchar(30) DEFAULT NULL,
  `Cuttype` varchar(1) DEFAULT NULL,
  `Costtype` varchar(1) DEFAULT NULL,
  `Stminus` varchar(1) DEFAULT NULL,
  `SNtype` varchar(1) DEFAULT NULL,
  `SNshow` varchar(1) DEFAULT NULL,
  `Quan` decimal(18,2) DEFAULT NULL,
  `Stquan` decimal(18,2) DEFAULT NULL,
  `Cost` decimal(19,4) DEFAULT NULL,
  `Sumcost` decimal(19,4) DEFAULT NULL,
  `Amount` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`Docno`,`Item`),
  KEY `ItemKey` (`Item`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvotherdetail
-- ----------------------------
INSERT INTO `recvotherdetail` VALUES ('RO00001', '1', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', '1', '1', '27', '1', null, null, null, null, null, null, '30.00', '10.0000', null, '300.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00001', '2', '222222222', 'BBBBB', '01', '1', 'กระป๋อง', '1.00', '1', '1', '1', '97', 'LM', 'Y', '2', 'Y', 'N', '', '100.00', '100.00', '8.0000', '800.0000', '800.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00001', '3', '111111111', 'AAAAA', '01', '1', 'ถุง', '1.00', '1', '1', '1', '47', 'LM', 'Y', '2', 'Y', 'N', '', '50.00', '50.00', '150.0000', '7500.0000', '7500.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00001', '4', '333333333', 'CCCCC', '01', '1', 'ชิ้น', '1.00', '1', '1', '1', '97', 'LM', 'Y', '2', 'Y', 'N', '', '50.00', '100.00', '100.0000', '500.0000', '10000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00001', '5', '111111111', 'AAAAA', null, null, 'ตัว', null, '0', '0', '0', '0', '1', null, null, null, null, null, null, '0.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00002', '1', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', '0', '0', '19', '1', null, null, null, null, null, null, '20.00', '10.0000', null, '200.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00002', '2', '111111111', 'AAAAA', null, null, 'ตัว', null, '3', '0', '0', '297', '1', null, null, null, null, null, null, '300.00', '30.0000', null, '9000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00002', '3', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', '0', '0', '19', '1', null, null, null, null, null, null, '20.00', '10.0000', null, '200.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00002', '4', '444444444', 'DDDDD', null, null, 'กล่อง', null, '0', '0', '0', '200', '1', null, null, null, null, null, null, '200.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00003', '1', '111111111', 'AAAAA', null, null, 'ตัว', null, '1', '0', '0', '99', '1', null, null, null, null, null, null, '100.00', '10.0000', null, '1000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00003', '2', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', '0', '0', '19', '1', null, null, null, null, null, null, '20.00', '10.0000', null, '200.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00003', '3', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '0', '1', '1', '298', '1', null, null, null, null, null, null, '300.00', '20.0000', null, '6000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00004', '1', '111111111', 'AAAAA', null, null, 'ตัว', null, '0', '1', '0', '99', '1', null, null, null, null, null, null, '100.00', '100.0000', null, '10000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00005', '1', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '1', '1', '1', '97', '2', null, null, null, null, null, null, '100.00', '10.0000', null, '1000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00006', '1', '444444444', 'DDDDD', null, null, 'กล่อง', null, '0', '1', '0', '499', '1', null, null, null, null, null, null, '500.00', '10.0000', null, '5000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00007', '1', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '2', '0', '0', '198', '1', null, null, null, null, null, null, '200.00', '20.0000', null, '4000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00007', '2', '111111111', 'AAAAA', null, null, 'ตัว', null, '0', '0', '0', '0', '1', null, null, null, null, null, null, '0.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00007', '3', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '0', '0', '0', '20', '1', null, null, null, null, null, null, '20.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00007', '4', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '0', '0', '0', '0', '1', null, null, null, null, null, null, '0.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00008', '1', '444444444', 'DDDDD', null, null, 'กล่อง', null, '0', '0', '0', '500', '1', null, null, null, null, null, null, '500.00', '25.5000', null, '12750.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00009', '1', '333333333', 'CCCCC', null, null, 'ชิ้น', null, '1', '1', '1', '97', '2', null, null, null, null, null, null, '100.00', '10.0000', null, '1000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00009', '2', '222222222', 'BBBBB', null, null, 'ชิ้น', null, '0', '0', '0', '100', '1', null, null, null, null, null, null, '100.00', '120.0000', null, '12000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00009', '3', '444444444', 'DDDDD', null, null, 'กล่อง', null, '1', '0', '0', '9', '1', null, null, null, null, null, null, '10.00', '100.0000', null, '1000.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00037', '1', '100215', 'ทดสอบรายการ', null, null, '02', null, '1', '0', '0', '40', '1', null, null, null, null, null, null, '41.00', '0.0000', null, '0.0000');
INSERT INTO `recvotherdetail` VALUES ('RO00037', '2', '333333333', 'CCCCC', null, null, '03', null, '0', '0', '0', '30', '1', null, null, null, null, null, null, '30.00', '10.0000', null, '300.0000');

-- ----------------------------
-- Table structure for recvotherhead
-- ----------------------------
DROP TABLE IF EXISTS `recvotherhead`;
CREATE TABLE `recvotherhead` (
  `Docno` varchar(30) NOT NULL,
  `Refdoc` varchar(30) DEFAULT NULL,
  `Days` datetime DEFAULT NULL,
  `Times` varchar(8) DEFAULT NULL,
  `Personcode` varchar(30) DEFAULT NULL,
  `Personname` varchar(100) DEFAULT NULL,
  `Projectcode` varchar(30) DEFAULT NULL,
  `Opencode` varchar(30) DEFAULT NULL,
  `Opendes` varchar(200) DEFAULT NULL,
  `Totalall` decimal(10,2) DEFAULT NULL,
  `Comments` varchar(255) DEFAULT NULL,
  `Usercode` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Docno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvotherhead
-- ----------------------------
INSERT INTO `recvotherhead` VALUES ('RO00001', '54321', '2012-01-02 00:00:00', '12:26:26', 'PR00003', 'อารยา ไชยวงษ์', '', 'R1', 'รับเข้าจากยอดยกมา', '0.00', 'หมายเหตุ', 'a');
INSERT INTO `recvotherhead` VALUES ('RO00002', '456123', '2013-05-06 00:00:00', null, 'PR00003', 'อารยา ไชยวงษ์', null, 'R3', null, '9400.00', 'หมายเหตุ', 'b');
INSERT INTO `recvotherhead` VALUES ('RO00003', '789456123', '2013-05-31 00:00:00', null, 'PR00001', 'สิทธิชัย ใจกล้า', null, 'R1', null, '7200.00', 'หมายเหตุ', 'c');
INSERT INTO `recvotherhead` VALUES ('RO00004', '1243', '2013-05-08 00:00:00', null, 'PR00002', 'พนาวรรณ  มาดี', null, 'R2', null, '10000.00', 'หมายเหตุ', 'd');
INSERT INTO `recvotherhead` VALUES ('RO00005', '4444', '2013-05-08 00:00:00', null, 'PR00003', 'อารยา ไชยวงษ์', null, 'R1', null, '1000.00', 'หมายเหตุ', 'e');
INSERT INTO `recvotherhead` VALUES ('RO00006', '521', '2013-05-01 00:00:00', null, 'PR00001', 'สิทธิชัย ใจกล้า', null, 'R1', null, '5000.00', 'หมายเหตุ', 'f');
INSERT INTO `recvotherhead` VALUES ('RO00007', '456', '2013-05-29 00:00:00', null, 'PR00001', 'สิทธิชัย ใจกล้า', null, 'R2', null, '4000.00', 'หมายเหตุ', 'g');
INSERT INTO `recvotherhead` VALUES ('RO00008', '44565', '2013-05-06 00:00:00', null, 'PR00002', 'พนาวรรณ  มาดี', null, 'R1', null, '12750.00', 'หมายเหตุ', 'h');
INSERT INTO `recvotherhead` VALUES ('RO00009', '121321', '2013-05-13 00:00:00', null, 'PR00003', 'อารยา ไชยวงษ์', null, 'R3', null, '1000.00', 'หมายเหตุ', 'i');
INSERT INTO `recvotherhead` VALUES ('RO00025', '13123', '2013-05-14 00:00:00', null, 'PR00001', 'สิทธิชัย ใจกล้า', null, 'R2', null, '0.00', 'หมายเหตุ', 'j');
INSERT INTO `recvotherhead` VALUES ('RO00034', '1231', '2013-05-14 00:00:00', null, 'PR00001', 'สิทธิชัย ใจกล้า', null, 'R3', null, '0.00', 'หมายเหตุ', 'k');
INSERT INTO `recvotherhead` VALUES ('RO00037', '12312312', '2013-05-18 00:00:00', null, '-- Please Select --', '', null, null, null, '0.00', null, null);

-- ----------------------------
-- Table structure for recvothersn
-- ----------------------------
DROP TABLE IF EXISTS `recvothersn`;
CREATE TABLE `recvothersn` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `SN` varchar(80) DEFAULT NULL,
  `SNLocation` varchar(30) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvothersn
-- ----------------------------
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R01', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R02', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R03', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R04', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R05', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R06', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R07', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R08', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R09', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '8', 'R10', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H01', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H02', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H03', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H04', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H05', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H06', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H07', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H08', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H09', 'LM');
INSERT INTO `recvothersn` VALUES ('RO00001', '9', 'H10', 'LM');

-- ----------------------------
-- Table structure for recvsn
-- ----------------------------
DROP TABLE IF EXISTS `recvsn`;
CREATE TABLE `recvsn` (
  `Docno` varchar(30) DEFAULT NULL,
  `Item` int(11) DEFAULT NULL,
  `SN` varchar(80) DEFAULT NULL,
  `SNLocation` varchar(30) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recvsn
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles` (
  `ROLEID` int(10) NOT NULL AUTO_INCREMENT,
  `ROLECODE` varchar(50) NOT NULL,
  `STATUS` varchar(1) NOT NULL DEFAULT 'A',
  `DESCRIPTION` varchar(50) DEFAULT NULL,
  `CONTROL_VERSION` bigint(20) DEFAULT '1',
  `CREATED_DATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `CREATED_BY` varchar(20) NOT NULL,
  `MODIFIED_DATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `MODIFIED_BY` varchar(20) NOT NULL,
  PRIMARY KEY (`ROLEID`),
  UNIQUE KEY `ROLECODE` (`ROLECODE`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('1', 'superadmin', 'A', 'SuperAdmin', '1', '2012-01-30 00:00:00', 'SYSTEM', '2013-06-26 10:46:34', '000739');
INSERT INTO `roles` VALUES ('2', 'admin', 'A', 'Admin', '1', '2012-01-30 00:00:00', 'SYSTEM', '2013-06-26 10:46:36', '000739');
INSERT INTO `roles` VALUES ('3', 'user', 'A', 'User', '1', '2012-01-30 00:00:00', 'SYSTEM', '2013-06-26 10:46:38', '000739');

-- ----------------------------
-- Table structure for stcard
-- ----------------------------
DROP TABLE IF EXISTS `stcard`;
CREATE TABLE `stcard` (
  `stcarditem` int(11) NOT NULL AUTO_INCREMENT COMMENT 'item stock card',
  `Stcode` varchar(30) NOT NULL COMMENT 'stcode',
  `WareHouse` int(11) NOT NULL,
  `days` datetime NOT NULL COMMENT 'วันที่บันทึก',
  `SrcDoc` varchar(100) DEFAULT NULL COMMENT 'ที่มาของเอกสาร หรือ module',
  `RefDoc` varchar(30) NOT NULL COMMENT 'เอกสารอ้างอิง',
  `Part` varchar(100) DEFAULT NULL COMMENT 'คำอธิบายรายการ',
  `Instock` decimal(10,2) DEFAULT NULL COMMENT 'รายการเข้าทั้งหมด',
  `InCost` decimal(10,2) DEFAULT NULL COMMENT 'ต้นทุนต่อชิ้น',
  `Insumcost` decimal(10,2) DEFAULT NULL COMMENT 'ต้นทุนรวมต่อรายการ',
  `Lose` decimal(10,2) DEFAULT NULL COMMENT 'เสีย',
  `Blame` decimal(10,2) DEFAULT NULL COMMENT 'ตำหนิ',
  `Dilapidated` decimal(10,2) DEFAULT NULL COMMENT 'ชำรุด',
  `Complete` decimal(10,2) DEFAULT NULL COMMENT 'สมบููรณ์',
  `OutStock` decimal(10,2) DEFAULT NULL COMMENT 'จำนวนออก',
  `Outcost` decimal(10,2) DEFAULT NULL COMMENT 'ต้นทุนออก',
  `Outsumcost` decimal(10,2) DEFAULT NULL COMMENT 'ต้นทุกรวมออก',
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  `cDate` datetime DEFAULT NULL,
  `mDate` datetime DEFAULT NULL,
  PRIMARY KEY (`stcarditem`),
  KEY `FKStcode` (`Stcode`),
  KEY `FKWH` (`WareHouse`),
  CONSTRAINT `FKStcode` FOREIGN KEY (`Stcode`) REFERENCES `stmas` (`stcode`),
  CONSTRAINT `FKWH` FOREIGN KEY (`WareHouse`) REFERENCES `location` (`whid`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COMMENT='stock card ใช้เก็บการเคลือนไหวของสินค้า \r\n';

-- ----------------------------
-- Records of stcard
-- ----------------------------
INSERT INTO `stcard` VALUES ('1', '111111111', '1', '2013-03-19 10:00:13', null, 'R001', 'ซื้อสินค้าเข้า', '50.00', '100.00', '5000.00', '0.00', '0.00', '0.00', '50.00', '0.00', '0.00', '0.00', null, null, null, null);
INSERT INTO `stcard` VALUES ('2', '111111111', '1', '2013-04-01 10:01:56', null, 'R002', 'ซื้อสินค้าเข้า', '40.00', '100.00', '4000.00', '1.00', '0.00', '0.00', '39.00', null, null, null, null, null, null, null);
INSERT INTO `stcard` VALUES ('3', '111111111', '1', '2013-05-01 10:02:51', null, 'T001', 'โอนย้ายระหว่างคลัง', null, null, null, '0.00', '0.00', '0.00', '-39.00', '39.00', '100.00', '3900.00', null, null, null, null);
INSERT INTO `stcard` VALUES ('4', '111111111', '2', '2013-05-04 10:03:41', null, 'T001', 'โอนย้ายระหว่างคลัง', '39.00', '100.00', '4000.00', '0.00', '0.00', '0.00', '39.00', '0.00', '0.00', '0.00', '0', null, null, null);
INSERT INTO `stcard` VALUES ('5', '111111111', '1', '2013-05-07 10:24:30', null, 'S001', 'ขาย', null, null, null, null, null, null, '-20.00', '20.00', '100.00', '2000.00', null, null, null, null);
INSERT INTO `stcard` VALUES ('6', '222222222', '1', '2013-04-01 15:58:24', null, 'S002', null, '50.00', null, null, null, null, null, null, null, null, null, null, null, null, null);
INSERT INTO `stcard` VALUES ('11', '222222222', '1', '2013-05-07 15:58:31', null, 'S003', null, null, null, null, null, null, null, null, '800.00', null, null, null, null, null, null);
INSERT INTO `stcard` VALUES ('12', '333333333', '1', '2013-04-26 15:58:36', null, 'S004', null, '150.00', null, null, null, null, null, null, '0.00', null, null, null, null, null, null);
INSERT INTO `stcard` VALUES ('13', '333333333', '1', '2013-05-06 15:58:41', null, 'S005', null, null, null, null, null, null, null, null, '95.00', null, null, null, null, null, null);
INSERT INTO `stcard` VALUES ('14', '444444444', '1', '2013-05-05 15:58:59', null, 'S006', null, '50.00', null, null, null, null, null, null, '0.00', null, null, null, null, null, null);

-- ----------------------------
-- Table structure for stcost
-- ----------------------------
DROP TABLE IF EXISTS `stcost`;
CREATE TABLE `stcost` (
  `stockcostid` int(11) NOT NULL AUTO_INCREMENT,
  `refdoc` varchar(30) DEFAULT NULL,
  `instock` int(11) DEFAULT NULL,
  `lose` int(11) DEFAULT NULL,
  `blame` int(11) DEFAULT NULL,
  `dilapidate` int(11) DEFAULT NULL,
  `completet` int(11) DEFAULT NULL,
  `inCost` decimal(10,0) DEFAULT NULL,
  `avgcost` decimal(10,0) DEFAULT NULL,
  `sumcost` decimal(10,0) DEFAULT NULL,
  PRIMARY KEY (`stockcostid`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='เก็บรายละเอียดของ ต้นทุนสินค้า \r\n';

-- ----------------------------
-- Records of stcost
-- ----------------------------
INSERT INTO `stcost` VALUES ('1', 'R002', '40', '1', '1', '1', '37', '100', '0', '4000');
INSERT INTO `stcost` VALUES ('2', 'R002', null, null, '-1', null, '1', null, '50', null);
INSERT INTO `stcost` VALUES ('3', 'R002', null, null, null, '-1', '1', null, '0', null);
INSERT INTO `stcost` VALUES ('4', 'R001', '50', '0', '0', '0', '50', '100', '0', '5000');

-- ----------------------------
-- Table structure for stmas
-- ----------------------------
DROP TABLE IF EXISTS `stmas`;
CREATE TABLE `stmas` (
  `stcode` varchar(30) NOT NULL COMMENT 'รหัสสินค้า',
  `barcode` varchar(30) NOT NULL DEFAULT '' COMMENT 'barcode',
  `desc1` varchar(255) DEFAULT NULL COMMENT 'รายละเอียดสินค้า',
  `desc2` varchar(255) DEFAULT NULL COMMENT 'รายละเอียดสินค้า',
  `width` decimal(18,2) DEFAULT NULL COMMENT 'ความกว้าง',
  `height` decimal(18,2) DEFAULT NULL COMMENT 'สูง',
  `depth` decimal(18,2) DEFAULT NULL COMMENT 'ลึก',
  `weigth` decimal(18,2) DEFAULT NULL COMMENT 'น้ำหนัก',
  `Units` varchar(30) DEFAULT NULL COMMENT 'หน่วยนับ',
  `pdType` varchar(4) DEFAULT NULL COMMENT 'ประเภทสินค้า',
  `maxs` int(11) DEFAULT NULL COMMENT 'สินค้าสูงสุด',
  `mins` int(11) DEFAULT NULL COMMENT 'สินค้าต่ำสุด',
  `pdGroup` varchar(4) DEFAULT NULL COMMENT 'สินค้าทั่วไป สินค้าบริการ สินค้าอาหารสด ',
  `price` decimal(18,2) DEFAULT NULL COMMENT 'ราคาหลัก',
  `price1` decimal(18,2) DEFAULT NULL,
  `price2` decimal(18,2) DEFAULT NULL,
  `price3` decimal(18,2) DEFAULT NULL,
  `price4` decimal(18,2) DEFAULT NULL,
  `price5` decimal(18,2) DEFAULT NULL,
  `cuttype` int(11) DEFAULT NULL COMMENT 'สินค้าต้องตัด stock หรือ ไม่   เช่นสินค้า บริการ ไม่มี stock ',
  `costtype` int(11) DEFAULT NULL COMMENT 'ชนิดต้นทุน เช่น fifo lifo เฉลี่ยน ไม่คิดต้นทุน',
  `expiredate` varchar(11) DEFAULT NULL,
  `model` varchar(60) DEFAULT NULL COMMENT 'แบบ',
  `classcode` int(11) DEFAULT NULL COMMENT 'รหัสรุ่น (ยังไม่เปิดใช้)',
  `size` varchar(60) DEFAULT NULL COMMENT 'ขนาด',
  `stdcost` double(18,2) DEFAULT NULL COMMENT 'ต้นทุนมาตรฐาน',
  `status` char(1) DEFAULT NULL COMMENT 'สถานะสินค้า',
  `pictus` blob,
  `notes` text COMMENT 'หมายเหตุ',
  `stMins` int(11) DEFAULT NULL COMMENT 'สินค้าติดลบ',
  `sNtype` int(11) DEFAULT NULL COMMENT 'สินค้ามี Serial หรือ ไม่มี ',
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`stcode`),
  UNIQUE KEY `idxBarcode` (`barcode`),
  KEY `FKPDGROUP` (`pdGroup`),
  KEY `FKPDTYPE` (`pdType`),
  CONSTRAINT `FKPDGROUP` FOREIGN KEY (`pdGroup`) REFERENCES `istab` (`TYPCOD`),
  CONSTRAINT `FKPDTYPE` FOREIGN KEY (`pdType`) REFERENCES `istab` (`TYPCOD`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='สินค้าหลัก \r\n';

-- ----------------------------
-- Records of stmas
-- ----------------------------
INSERT INTO `stmas` VALUES ('111111111', '111111111', 'desc122', 'desc2', '100.00', '100.00', '100.00', '10.00', '02', '01', '10', '2', '01', '100.00', '105.00', '110.00', '115.00', '120.00', '125.00', '1', '1', '2013-05-31', '01', '12', '1', '80.00', 'A', null, 'notes', null, '1', 's', 'ss', '2013-04-19 12:16:37', '2013-06-20 17:23:38');
INSERT INTO `stmas` VALUES ('111111112', '111111112', 'desc1', 'desc2', '100.00', '100.00', '100.00', '10.00', '02', '01', '10', '2', '01', '100.00', '105.00', '110.00', '115.00', '120.00', '125.00', '1', '1', '2013-05-31', '01', '1', '1', '80.00', 'A', 0x74657374, 'notes', '1', '1', 's', 's', '2013-06-20 12:37:56', '2013-06-20 12:37:56');
INSERT INTO `stmas` VALUES ('111111113', '111111113', 'desc1', 'desc2', '100.00', '100.00', '100.00', '10.00', '02', '01', '10', '2', '01', '100.00', '105.00', '110.00', '115.00', '120.00', '125.00', '1', '1', '2013-05-31', '01', '1', '1', '80.00', 'A', 0x74657374, 'notes', '1', '1', 's', 's', '2013-06-20 12:39:12', '2013-06-20 12:39:12');
INSERT INTO `stmas` VALUES ('123123', '1213', '', '', '0.00', '0.00', '0.00', '0.00', '', '01', '0', '0', '01', '0.00', '0.00', '0.00', '0.00', '0.00', '0.00', '0', '0', '2013-06-20 ', '1', '0', '', '0.00', 'A', null, 'yyyyyyyzzzzz', '0', '0', 's', 'ss', '2013-05-21 18:10:33', '2013-06-20 18:50:41');
INSERT INTO `stmas` VALUES ('222222222', '222222222', 'BBBBB1111', 's111111', '20.00', '10.00', '20.00', '0.00', '02', '01', null, '70', '02', '2000.00', null, null, null, null, null, '1111', '1', null, null, null, null, '1000.00', 'A', null, null, '1', null, 'SYSTEM', 's', '2013-04-19 12:16:37', '2013-05-21 14:07:19');
INSERT INTO `stmas` VALUES ('333333333', '333333333', 'CCCCC', 's', '10.00', '5.00', '5.00', '0.00', '03', '00', null, '80', '03', '1000.00', null, null, null, null, null, '1', '1', null, null, null, null, '950.00', 'A', null, null, null, null, 'SYSTEM', 's', '2013-04-19 12:16:37', '2013-05-16 17:24:32');
INSERT INTO `stmas` VALUES ('444444444', '444444444', 'DDDDD', 's', '5.00', '5.00', '5.00', '0.00', '04', '50', null, '90', '01', '50.00', null, null, null, null, null, '1', '1', null, null, null, null, '30.00', 'A', null, null, null, null, 's', 's', '2013-04-19 14:50:10', '2013-05-16 17:24:33');
INSERT INTO `stmas` VALUES ('5555555555', '55555555555', '5555555555', '5555555555', '55.00', '55.00', '55.00', '55.00', '01', '12', null, null, null, '5555555555.00', null, null, null, null, null, '55', '55', null, null, null, null, '55.00', 'A', null, null, null, null, 's', 's', '2013-05-16 17:56:31', '2013-05-17 09:27:22');

-- ----------------------------
-- Table structure for systemlog
-- ----------------------------
DROP TABLE IF EXISTS `systemlog`;
CREATE TABLE `systemlog` (
  `log_id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `types` varchar(30) NOT NULL DEFAULT '',
  `userid` varchar(30) DEFAULT NULL,
  `message` text NOT NULL,
  `parametor` text,
  `module` varchar(10) DEFAULT NULL,
  `log_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`log_id`)
) ENGINE=MyISAM AUTO_INCREMENT=382 DEFAULT CHARSET=utf8 COMMENT='Logs';

-- ----------------------------
-- Records of systemlog
-- ----------------------------
INSERT INTO `systemlog` VALUES ('120', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'desctest1\');', '3', 'TEST', '2013-06-21 22:23:45');
INSERT INTO `systemlog` VALUES ('121', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'bbbbb\' WHERE idx = 1;', '1', 'TEST', '2013-06-21 22:35:07');
INSERT INTO `systemlog` VALUES ('122', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ccccc\' WHERE idx = 2;', '1', 'TEST', '2013-06-21 22:36:15');
INSERT INTO `systemlog` VALUES ('123', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'aaaa\');', '4', 'TEST', '2013-06-21 22:53:40');
INSERT INTO `systemlog` VALUES ('124', 'DEL', 's', 'delete from tbsingle where idx = 1', '1', 'TEST', '2013-06-21 23:01:17');
INSERT INTO `systemlog` VALUES ('125', 'DEL', 's', 'delete from tbsingle where idx = 2', '1', 'TEST', '2013-06-21 23:02:20');
INSERT INTO `systemlog` VALUES ('126', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'eeeeeee\');', '5', 'TEST', '2013-06-21 23:44:03');
INSERT INTO `systemlog` VALUES ('127', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'fffffff\');', '6', 'TEST', '2013-06-21 23:44:13');
INSERT INTO `systemlog` VALUES ('128', 'DEL', 's', 'delete from tbsingle where idx = 3', '1', 'TEST', '2013-06-22 00:35:49');
INSERT INTO `systemlog` VALUES ('129', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'aaaaa\');', '7', 'TEST', '2013-06-22 01:50:25');
INSERT INTO `systemlog` VALUES ('130', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '8', 'TEST', '2013-06-22 01:53:56');
INSERT INTO `systemlog` VALUES ('131', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'aaaaa\');', '9', 'TEST', '2013-06-22 01:54:11');
INSERT INTO `systemlog` VALUES ('132', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'yyyy\');', '10', 'TEST', '2013-06-22 01:55:09');
INSERT INTO `systemlog` VALUES ('133', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '11', 'TEST', '2013-06-22 01:55:14');
INSERT INTO `systemlog` VALUES ('134', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '12', 'TEST', '2013-06-22 01:55:40');
INSERT INTO `systemlog` VALUES ('135', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '13', 'TEST', '2013-06-22 01:55:46');
INSERT INTO `systemlog` VALUES ('136', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '14', 'TEST', '2013-06-22 01:56:43');
INSERT INTO `systemlog` VALUES ('137', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '15', 'TEST', '2013-06-22 01:56:46');
INSERT INTO `systemlog` VALUES ('138', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '16', 'TEST', '2013-06-22 01:56:46');
INSERT INTO `systemlog` VALUES ('139', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '17', 'TEST', '2013-06-22 01:56:46');
INSERT INTO `systemlog` VALUES ('140', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '18', 'TEST', '2013-06-22 01:56:47');
INSERT INTO `systemlog` VALUES ('141', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '19', 'TEST', '2013-06-22 01:56:47');
INSERT INTO `systemlog` VALUES ('142', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'qqqqqq\');', '20', 'TEST', '2013-06-22 01:59:06');
INSERT INTO `systemlog` VALUES ('143', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '21', 'TEST', '2013-06-22 01:59:11');
INSERT INTO `systemlog` VALUES ('144', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '22', 'TEST', '2013-06-22 01:59:12');
INSERT INTO `systemlog` VALUES ('145', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '23', 'TEST', '2013-06-22 01:59:26');
INSERT INTO `systemlog` VALUES ('146', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '24', 'TEST', '2013-06-22 01:59:33');
INSERT INTO `systemlog` VALUES ('147', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'uuuu\');', '25', 'TEST', '2013-06-22 02:00:49');
INSERT INTO `systemlog` VALUES ('148', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '26', 'TEST', '2013-06-22 02:03:04');
INSERT INTO `systemlog` VALUES ('149', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '27', 'TEST', '2013-06-22 02:03:11');
INSERT INTO `systemlog` VALUES ('150', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '28', 'TEST', '2013-06-22 02:03:53');
INSERT INTO `systemlog` VALUES ('151', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '29', 'TEST', '2013-06-22 02:04:06');
INSERT INTO `systemlog` VALUES ('152', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'qaz\' WHERE idx = 5;', '1', 'TEST', '2013-06-22 02:05:01');
INSERT INTO `systemlog` VALUES ('153', 'EDIT', '\'s\'', 'update tbsingle set tbsingle.`desc` = \'\\\'opq\\\'\' WHERE idx = 4;', '1', 'TEST', '2013-06-22 02:07:05');
INSERT INTO `systemlog` VALUES ('154', 'EDIT', '\'s\'', 'update tbsingle set tbsingle.`desc` = \'\\\'opq\\\'\' WHERE idx = 4;', '1', 'TEST', '2013-06-22 02:07:53');
INSERT INTO `systemlog` VALUES ('155', 'EDIT', '\'s\'', 'update tbsingle set tbsingle.`desc` = \'\\\'opq\\\'\' WHERE idx = 4;', '1', 'TEST', '2013-06-22 02:07:58');
INSERT INTO `systemlog` VALUES ('156', 'EDIT', '\'s\'', 'update tbsingle set tbsingle.`desc` = \'\\\'opq\\\'\' WHERE idx = 4;', '1', 'TEST', '2013-06-22 02:08:12');
INSERT INTO `systemlog` VALUES ('157', 'NEW', '\'s\'', 'insert into tbsingle(`desc`) VALUES(\'\\\'xxxxx\\\'\');', '30', 'TEST', '2013-06-22 02:08:53');
INSERT INTO `systemlog` VALUES ('158', 'DEL', 's', 'delete from tbsingle where idx = 4', '1', 'TEST', '2013-06-22 02:10:43');
INSERT INTO `systemlog` VALUES ('159', 'DEL', '\'s\'', 'delete from tbsingle where idx = 20', '1', 'TEST', '2013-06-22 02:11:36');
INSERT INTO `systemlog` VALUES ('160', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'test1\');', '31', 'TEST', '2013-06-24 10:51:54');
INSERT INTO `systemlog` VALUES ('161', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'aaaaaa\');', '32', 'TEST', '2013-06-24 10:53:57');
INSERT INTO `systemlog` VALUES ('162', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'dddddd\');', '33', 'TEST', '2013-06-24 10:54:41');
INSERT INTO `systemlog` VALUES ('163', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ttttttttttt\' WHERE idx = 32;', '1', 'TEST', '2013-06-24 11:27:35');
INSERT INTO `systemlog` VALUES ('164', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'qqqqqqqqqqqqqqqqqqqqqqqq\' WHERE idx = 32;', '1', 'TEST', '2013-06-24 11:35:37');
INSERT INTO `systemlog` VALUES ('165', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'uuuuu\' WHERE idx = 32;', '1', 'TEST', '2013-06-24 11:35:54');
INSERT INTO `systemlog` VALUES ('166', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'4444\');', '34', 'TEST', '2013-06-24 11:38:12');
INSERT INTO `systemlog` VALUES ('167', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'yyyydddd\' WHERE idx = 10;', '1', 'TEST', '2013-06-24 11:41:31');
INSERT INTO `systemlog` VALUES ('168', 'NEW', 's', '7', '35', 'TEST', '2013-06-24 11:59:29');
INSERT INTO `systemlog` VALUES ('169', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ddddssss\' WHERE idx = 35;', '1', 'TEST', '2013-06-24 11:59:50');
INSERT INTO `systemlog` VALUES ('170', 'DEL', 's', 'delete from tbsingle where idx = 35', '1', 'TEST', '2013-06-24 12:04:22');
INSERT INTO `systemlog` VALUES ('171', 'DEL', 's', 'delete from tbsingle where idx = 34', '1', 'TEST', '2013-06-24 12:04:34');
INSERT INTO `systemlog` VALUES ('172', 'DEL', 's', 'delete from tbsingle where idx = 33', '1', 'TEST', '2013-06-24 12:04:40');
INSERT INTO `systemlog` VALUES ('173', 'DEL', 's', 'delete from tbsingle where idx = 32', '1', 'TEST', '2013-06-24 12:06:00');
INSERT INTO `systemlog` VALUES ('174', 'DEL', 's', 'delete from tbsingle where idx = 31', '1', 'TEST', '2013-06-24 12:06:05');
INSERT INTO `systemlog` VALUES ('175', 'DEL', 's', 'delete from tbsingle where idx = 30', '1', 'TEST', '2013-06-24 12:06:12');
INSERT INTO `systemlog` VALUES ('176', 'DEL', 's', 'delete from tbsingle where idx = 29', '1', 'TEST', '2013-06-24 12:06:22');
INSERT INTO `systemlog` VALUES ('177', 'DEL', 's', 'delete from tbsingle where idx = 28', '1', 'TEST', '2013-06-24 12:07:12');
INSERT INTO `systemlog` VALUES ('178', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'\\\'xxxxx\\\'123\' WHERE idx = 27;', '1', 'TEST', '2013-06-24 12:08:18');
INSERT INTO `systemlog` VALUES ('179', 'DEL', 's', 'delete from tbsingle where idx = 27', '1', 'TEST', '2013-06-24 12:11:13');
INSERT INTO `systemlog` VALUES ('180', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'uuuu1223\' WHERE idx = 25;', '1', 'TEST', '2013-06-24 12:11:21');
INSERT INTO `systemlog` VALUES ('181', 'DEL', 's', 'delete from tbsingle where idx = 26', '1', 'TEST', '2013-06-24 12:12:50');
INSERT INTO `systemlog` VALUES ('182', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'uuu\' WHERE idx = 25;', '1', 'TEST', '2013-06-24 12:13:01');
INSERT INTO `systemlog` VALUES ('183', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'123\');', '36', 'TEST', '2013-06-24 12:13:10');
INSERT INTO `systemlog` VALUES ('184', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'\\\'xxxxx\\\'123\' WHERE idx = 23;', '1', 'TEST', '2013-06-24 12:17:06');
INSERT INTO `systemlog` VALUES ('185', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'456123\');', '37', 'TEST', '2013-06-24 12:17:16');
INSERT INTO `systemlog` VALUES ('186', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'789456\');', '38', 'TEST', '2013-06-24 12:18:01');
INSERT INTO `systemlog` VALUES ('187', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'ytruy\');', '39', 'TEST', '2013-06-24 12:20:59');
INSERT INTO `systemlog` VALUES ('188', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'eeeee\');', '40', 'TEST', '2013-06-24 12:22:22');
INSERT INTO `systemlog` VALUES ('189', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'123456\');', '41', 'TEST', '2013-06-24 12:24:31');
INSERT INTO `systemlog` VALUES ('190', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'123456\');', '42', 'TEST', '2013-06-24 12:24:50');
INSERT INTO `systemlog` VALUES ('191', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'123qwe\');', '43', 'TEST', '2013-06-24 12:27:25');
INSERT INTO `systemlog` VALUES ('192', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'safasdfa\');', '44', 'TEST', '2013-06-24 12:28:26');
INSERT INTO `systemlog` VALUES ('193', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ererererere\' WHERE idx = 12;', '1', 'TEST', '2013-06-24 12:28:51');
INSERT INTO `systemlog` VALUES ('194', 'DEL', 's', 'delete from tbsingle where idx = 44', '1', 'TEST', '2013-06-24 12:28:56');
INSERT INTO `systemlog` VALUES ('195', 'DEL', 's', 'delete from tbsingle where idx = 21', '1', 'TEST', '2013-06-24 12:29:05');
INSERT INTO `systemlog` VALUES ('196', 'DEL', 's', 'delete from tbsingle where idx = 43', '1', 'TEST', '2013-06-24 12:29:11');
INSERT INTO `systemlog` VALUES ('197', 'DEL', 's', 'delete from tbsingle where idx = 42', '1', 'TEST', '2013-06-24 12:29:17');
INSERT INTO `systemlog` VALUES ('198', 'DEL', 's', 'delete from tbsingle where idx = 25', '1', 'TEST', '2013-06-24 12:29:21');
INSERT INTO `systemlog` VALUES ('199', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'55555\');', '45', 'TEST', '2013-06-24 12:29:30');
INSERT INTO `systemlog` VALUES ('200', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'963\');', '46', 'TEST', '2013-06-24 12:34:34');
INSERT INTO `systemlog` VALUES ('201', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'9999\');', '47', 'TEST', '2013-06-24 12:36:32');
INSERT INTO `systemlog` VALUES ('202', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'9999\');', '48', 'TEST', '2013-06-24 12:36:58');
INSERT INTO `systemlog` VALUES ('203', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'789465\');', '49', 'TEST', '2013-06-24 12:38:47');
INSERT INTO `systemlog` VALUES ('204', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tttttt\');', '50', 'TEST', '2013-06-24 12:46:53');
INSERT INTO `systemlog` VALUES ('205', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'789465\');', '51', 'TEST', '2013-06-24 12:47:38');
INSERT INTO `systemlog` VALUES ('206', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'456\');', '52', 'TEST', '2013-06-24 13:28:26');
INSERT INTO `systemlog` VALUES ('207', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'yyyyyyyyyy\' WHERE idx = 9;', '1', 'TEST', '2013-06-24 13:29:21');
INSERT INTO `systemlog` VALUES ('208', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'qqqqqq\' WHERE idx = 51;', '1', 'TEST', '2013-06-24 13:29:32');
INSERT INTO `systemlog` VALUES ('209', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ttttt\' WHERE idx = 9;', '1', 'TEST', '2013-06-24 13:32:37');
INSERT INTO `systemlog` VALUES ('210', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'tttttttttttt\' WHERE idx = 39;', '1', 'TEST', '2013-06-24 13:32:52');
INSERT INTO `systemlog` VALUES ('211', 'DEL', 's', 'delete from tbsingle where idx = 39', '1', 'TEST', '2013-06-24 13:33:07');
INSERT INTO `systemlog` VALUES ('212', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'you\');', '53', 'TEST', '2013-06-24 13:48:55');
INSERT INTO `systemlog` VALUES ('213', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'pods\');', '54', 'TEST', '2013-06-24 13:50:25');
INSERT INTO `systemlog` VALUES ('214', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'error\');', '55', 'TEST', '2013-06-24 13:52:31');
INSERT INTO `systemlog` VALUES ('215', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'yrdy\');', '56', 'TEST', '2013-06-24 13:54:39');
INSERT INTO `systemlog` VALUES ('216', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'yrdy\');', '57', 'TEST', '2013-06-24 13:56:07');
INSERT INTO `systemlog` VALUES ('217', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tyu\');', '58', 'TEST', '2013-06-24 13:56:28');
INSERT INTO `systemlog` VALUES ('218', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'oooooo\');', '59', 'TEST', '2013-06-24 13:57:16');
INSERT INTO `systemlog` VALUES ('219', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'oooooo11\' WHERE idx = 59;', '1', 'TEST', '2013-06-24 13:58:03');
INSERT INTO `systemlog` VALUES ('220', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'ssfasd\');', '60', 'TEST', '2013-06-24 14:00:36');
INSERT INTO `systemlog` VALUES ('221', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'ssdsf\');', '61', 'TEST', '2013-06-24 14:06:10');
INSERT INTO `systemlog` VALUES ('222', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'dgsdfgsdf\');', '62', 'TEST', '2013-06-24 14:10:07');
INSERT INTO `systemlog` VALUES ('223', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'qwerqewrq\');', '63', 'TEST', '2013-06-24 14:12:13');
INSERT INTO `systemlog` VALUES ('224', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'qwerqewrq\');', '64', 'TEST', '2013-06-24 14:13:00');
INSERT INTO `systemlog` VALUES ('225', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'123\');', '65', 'TEST', '2013-06-24 14:14:10');
INSERT INTO `systemlog` VALUES ('226', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'sdfasdf\');', '66', 'TEST', '2013-06-24 14:15:47');
INSERT INTO `systemlog` VALUES ('227', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'sdfasdfhuuuu\' WHERE idx = 66;', '1', 'TEST', '2013-06-24 14:16:15');
INSERT INTO `systemlog` VALUES ('228', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'\\\'xxxxx\\\'555\' WHERE idx = 22;', '1', 'TEST', '2013-06-24 14:16:28');
INSERT INTO `systemlog` VALUES ('229', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'test\');', '67', 'TEST', '2013-06-24 14:17:21');
INSERT INTO `systemlog` VALUES ('230', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'test1\');', '68', 'TEST', '2013-06-24 14:17:27');
INSERT INTO `systemlog` VALUES ('231', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test122\' WHERE idx = 68;', '1', 'TEST', '2013-06-24 14:17:33');
INSERT INTO `systemlog` VALUES ('232', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test1\' WHERE idx = 67;', '1', 'TEST', '2013-06-24 14:17:38');
INSERT INTO `systemlog` VALUES ('233', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test2\' WHERE idx = 68;', '1', 'TEST', '2013-06-24 14:17:45');
INSERT INTO `systemlog` VALUES ('234', 'DEL', 's', 'delete from tbsingle where idx = 68', '1', 'TEST', '2013-06-24 14:17:48');
INSERT INTO `systemlog` VALUES ('235', 'DEL', 's', 'delete from tbsingle where idx = 67', '1', 'TEST', '2013-06-24 14:17:51');
INSERT INTO `systemlog` VALUES ('236', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'sfasdfas\');', '69', 'TEST', '2013-06-24 14:17:56');
INSERT INTO `systemlog` VALUES ('237', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'test\');', '70', 'TEST', '2013-06-24 14:18:19');
INSERT INTO `systemlog` VALUES ('238', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'45665\');', '71', 'TEST', '2013-06-24 14:23:36');
INSERT INTO `systemlog` VALUES ('239', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test71\' WHERE idx = 71;', '1', 'TEST', '2013-06-24 14:23:57');
INSERT INTO `systemlog` VALUES ('240', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test1\' WHERE idx = 70;', '1', 'TEST', '2013-06-24 15:25:14');
INSERT INTO `systemlog` VALUES ('241', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'test12\' WHERE idx = 70;', '1', 'TEST', '2013-06-24 15:25:21');
INSERT INTO `systemlog` VALUES ('242', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'dfasdfa\');', '72', 'TEST', '2013-06-24 15:25:27');
INSERT INTO `systemlog` VALUES ('243', 'DEL', 's', 'delete from tbsingle where idx = 72', '1', 'TEST', '2013-06-24 15:25:32');
INSERT INTO `systemlog` VALUES ('244', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'456\');', '73', 'TEST', '2013-06-24 15:27:38');
INSERT INTO `systemlog` VALUES ('245', 'DEL', 's', 'delete from tbsingle where idx = 69', '1', 'TEST', '2013-06-24 15:37:52');
INSERT INTO `systemlog` VALUES ('246', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'456222\' WHERE idx = 73;', '1', 'TEST', '2013-06-24 16:16:53');
INSERT INTO `systemlog` VALUES ('247', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'test\');', '74', 'TEST', '2013-06-24 16:17:11');
INSERT INTO `systemlog` VALUES ('248', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'testtest\' WHERE idx = 74;', '1', 'TEST', '2013-06-24 16:17:19');
INSERT INTO `systemlog` VALUES ('249', 'DEL', 'ss', 'delete from tbsingle where idx = 73', '1', 'TEST', '2013-06-24 17:02:18');
INSERT INTO `systemlog` VALUES ('250', 'DEL', 'ss', 'delete from tbsingle where idx = 74', '1', 'TEST', '2013-06-24 17:02:27');
INSERT INTO `systemlog` VALUES ('251', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '75', 'TEST', '2013-06-24 17:14:10');
INSERT INTO `systemlog` VALUES ('252', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '76', 'TEST', '2013-06-24 17:16:03');
INSERT INTO `systemlog` VALUES ('253', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '77', 'TEST', '2013-06-24 17:16:48');
INSERT INTO `systemlog` VALUES ('254', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '78', 'TEST', '2013-06-24 17:16:49');
INSERT INTO `systemlog` VALUES ('255', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '79', 'TEST', '2013-06-24 17:16:49');
INSERT INTO `systemlog` VALUES ('256', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '80', 'TEST', '2013-06-24 17:17:29');
INSERT INTO `systemlog` VALUES ('257', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '81', 'TEST', '2013-06-24 17:18:06');
INSERT INTO `systemlog` VALUES ('258', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '82', 'TEST', '2013-06-24 17:18:07');
INSERT INTO `systemlog` VALUES ('259', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '83', 'TEST', '2013-06-24 17:18:17');
INSERT INTO `systemlog` VALUES ('260', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '84', 'TEST', '2013-06-24 17:18:39');
INSERT INTO `systemlog` VALUES ('261', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '85', 'TEST', '2013-06-24 17:19:27');
INSERT INTO `systemlog` VALUES ('262', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '86', 'TEST', '2013-06-24 17:20:58');
INSERT INTO `systemlog` VALUES ('263', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '87', 'TEST', '2013-06-24 17:21:32');
INSERT INTO `systemlog` VALUES ('264', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '88', 'TEST', '2013-06-24 17:25:39');
INSERT INTO `systemlog` VALUES ('265', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '89', 'TEST', '2013-06-24 17:25:54');
INSERT INTO `systemlog` VALUES ('266', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ss\');', '90', 'TEST', '2013-06-24 17:25:59');
INSERT INTO `systemlog` VALUES ('267', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'sss\');', '91', 'TEST', '2013-06-24 17:26:21');
INSERT INTO `systemlog` VALUES ('268', 'DEL', 'ss', 'delete from tbsingle where idx = 71', '1', 'TEST', '2013-06-24 17:27:23');
INSERT INTO `systemlog` VALUES ('269', 'DEL', 'ss', 'delete from tbsingle where idx = 82', '1', 'TEST', '2013-06-24 17:27:40');
INSERT INTO `systemlog` VALUES ('270', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'sss\' WHERE idx = 84;', '1', 'TEST', '2013-06-24 17:27:53');
INSERT INTO `systemlog` VALUES ('271', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'test\');', '92', 'TEST', '2013-06-24 17:28:03');
INSERT INTO `systemlog` VALUES ('272', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'oooooo\');', '93', 'TEST', '2013-06-24 17:34:29');
INSERT INTO `systemlog` VALUES ('273', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ppppppppppppp\');', '94', 'TEST', '2013-06-24 17:35:10');
INSERT INTO `systemlog` VALUES ('274', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'sshhhhh\' WHERE idx = 81;', '1', 'TEST', '2013-06-24 17:35:21');
INSERT INTO `systemlog` VALUES ('275', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ssdd\' WHERE idx = 79;', '1', 'TEST', '2013-06-24 18:05:04');
INSERT INTO `systemlog` VALUES ('276', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ssddtttttt\' WHERE idx = 79;', '1', 'TEST', '2013-06-24 18:05:20');
INSERT INTO `systemlog` VALUES ('277', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ss1\' WHERE idx = 78;', '1', 'TEST', '2013-06-24 18:07:55');
INSERT INTO `systemlog` VALUES ('278', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ss11\' WHERE idx = 78;', '1', 'TEST', '2013-06-24 18:08:41');
INSERT INTO `systemlog` VALUES ('279', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ssss\' WHERE idx = 84;', '1', 'TEST', '2013-06-24 18:19:34');
INSERT INTO `systemlog` VALUES ('280', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'aaaaaa\' WHERE idx = 79;', '1', 'TEST', '2013-06-24 18:19:52');
INSERT INTO `systemlog` VALUES ('281', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'test\');', '95', 'TEST', '2013-06-24 18:19:59');
INSERT INTO `systemlog` VALUES ('282', 'DEL', 'ss', 'delete from tbsingle where idx = 95', '1', 'TEST', '2013-06-24 18:20:06');
INSERT INTO `systemlog` VALUES ('283', 'DEL', 'ss', 'delete from tbsingle where idx = 94', '1', 'TEST', '2013-06-24 18:23:20');
INSERT INTO `systemlog` VALUES ('284', 'DEL', 'ss', 'delete from tbsingle where idx = 86', '1', 'TEST', '2013-06-24 18:23:29');
INSERT INTO `systemlog` VALUES ('285', 'DEL', 'ss', 'delete from tbsingle where idx = 93', '1', 'TEST', '2013-06-24 18:23:49');
INSERT INTO `systemlog` VALUES ('286', 'DEL', 'ss', 'delete from tbsingle where idx = 92', '1', 'TEST', '2013-06-24 18:24:07');
INSERT INTO `systemlog` VALUES ('287', 'DEL', 'ss', 'delete from tbsingle where idx = 79', '1', 'TEST', '2013-06-24 18:27:51');
INSERT INTO `systemlog` VALUES ('288', 'DEL', 'ss', 'delete from tbsingle where idx = 80', '1', 'TEST', '2013-06-24 18:28:10');
INSERT INTO `systemlog` VALUES ('289', 'DEL', 'ss', 'delete from tbsingle where idx = 81', '1', 'TEST', '2013-06-24 18:28:19');
INSERT INTO `systemlog` VALUES ('290', 'DEL', 'ss', 'delete from tbsingle where idx = 85', '1', 'TEST', '2013-06-24 18:28:25');
INSERT INTO `systemlog` VALUES ('291', 'DEL', 'ss', 'delete from tbsingle where idx = 88', '1', 'TEST', '2013-06-24 18:28:30');
INSERT INTO `systemlog` VALUES ('292', 'DEL', 's', 'delete from tbsingle where idx = 78', '1', 'TEST', '2013-06-24 18:28:53');
INSERT INTO `systemlog` VALUES ('293', 'DEL', 's', 'delete from tbsingle where idx = 89', '1', 'TEST', '2013-06-24 18:28:59');
INSERT INTO `systemlog` VALUES ('294', 'DEL', 's', 'delete from tbsingle where idx = 87', '1', 'TEST', '2013-06-24 18:30:42');
INSERT INTO `systemlog` VALUES ('295', 'DEL', 'ss', 'delete from tbsingle where idx = 77', '1', 'TEST', '2013-06-24 18:30:55');
INSERT INTO `systemlog` VALUES ('296', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ddd\');', '96', 'TEST', '2013-06-24 18:34:12');
INSERT INTO `systemlog` VALUES ('297', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ddds\' WHERE idx = 96;', '1', 'TEST', '2013-06-24 18:34:27');
INSERT INTO `systemlog` VALUES ('298', 'DEL', 'ss', 'delete from tbsingle where idx = 96', '1', 'TEST', '2013-06-24 18:34:39');
INSERT INTO `systemlog` VALUES ('299', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ss\' WHERE idx = 76;', '1', 'TEST', '2013-06-24 18:45:49');
INSERT INTO `systemlog` VALUES ('300', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'sss\');', '97', 'TEST', '2013-06-24 18:49:02');
INSERT INTO `systemlog` VALUES ('301', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'ssss\' WHERE idx = 97;', '1', 'TEST', '2013-06-24 18:49:36');
INSERT INTO `systemlog` VALUES ('302', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'sssss\' WHERE idx = 84;', '1', 'TEST', '2013-06-25 09:53:06');
INSERT INTO `systemlog` VALUES ('303', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'test12s\' WHERE idx = 70;', '1', 'TEST', '2013-06-25 10:10:57');
INSERT INTO `systemlog` VALUES ('304', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'test12sssss\' WHERE idx = 70;', '1', 'TEST', '2013-06-25 10:11:07');
INSERT INTO `systemlog` VALUES ('305', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'sss\' WHERE idx = 76;', '1', 'TEST', '2013-06-25 10:12:00');
INSERT INTO `systemlog` VALUES ('306', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'ssss\');', '98', 'TEST', '2013-06-25 10:12:10');
INSERT INTO `systemlog` VALUES ('307', 'DEL', 'ss', 'delete from tbsingle where idx = 98', '1', 'TEST', '2013-06-25 10:12:22');
INSERT INTO `systemlog` VALUES ('308', 'DEL', 'ss', 'delete from tbsingle where idx = 97', '1', 'TEST', '2013-06-25 10:12:27');
INSERT INTO `systemlog` VALUES ('309', 'DEL', 'ss', 'delete from tbsingle where idx = 91', '1', 'TEST', '2013-06-25 10:12:32');
INSERT INTO `systemlog` VALUES ('310', 'DEL', 'ss', 'delete from tbsingle where idx = 90', '1', 'TEST', '2013-06-25 10:12:36');
INSERT INTO `systemlog` VALUES ('311', 'DEL', 'ss', 'delete from tbsingle where idx = 84', '1', 'TEST', '2013-06-25 10:12:44');
INSERT INTO `systemlog` VALUES ('312', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'abcdef\' WHERE idx = 70;', '1', 'TEST', '2013-06-25 11:52:00');
INSERT INTO `systemlog` VALUES ('313', 'EDIT', 'SS', 'update tbsingle set tbsingle.`desc` = \'sssD\' WHERE idx = 76;', '1', 'TEST', '2013-06-25 12:00:23');
INSERT INTO `systemlog` VALUES ('314', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'rrrrrrrrrrrrrr\');', '99', 'TEST', '2013-06-25 12:17:19');
INSERT INTO `systemlog` VALUES ('315', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'test\');', '100', 'TEST', '2013-06-25 13:32:23');
INSERT INTO `systemlog` VALUES ('316', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'sss\' WHERE idx = 75;', '1', 'TEST', '2013-06-25 14:20:22');
INSERT INTO `systemlog` VALUES ('317', 'DEL', 'ss', 'delete from tbsingle where idx = 100', '1', 'TEST', '2013-06-25 14:20:30');
INSERT INTO `systemlog` VALUES ('318', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'tttttt\');', '101', 'TEST', '2013-06-25 14:20:41');
INSERT INTO `systemlog` VALUES ('319', 'DEL', 'ss', 'delete from tbsingle where idx = 99', '1', 'TEST', '2013-06-25 14:20:58');
INSERT INTO `systemlog` VALUES ('320', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'abcdefssss\' WHERE idx = 70;', '1', 'TEST', '2013-06-25 14:23:12');
INSERT INTO `systemlog` VALUES ('321', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'aaaaaa\');', '102', 'TEST', '2013-06-25 14:23:27');
INSERT INTO `systemlog` VALUES ('322', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'bbbbbbbbb\');', '103', 'TEST', '2013-06-25 14:23:39');
INSERT INTO `systemlog` VALUES ('323', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'test\');', '104', 'TEST', '2013-06-25 14:24:35');
INSERT INTO `systemlog` VALUES ('324', 'NEW', 'ss', 'insert into tbsingle(`desc`) VALUES(\'thongchai\');', '302', 'TEST', '2013-06-26 10:24:03');
INSERT INTO `systemlog` VALUES ('325', 'DEL', 'ss', 'SELECT count(*) AS id FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', null, 'TEST', '2013-06-26 10:35:42');
INSERT INTO `systemlog` VALUES ('326', 'DEL', 'ss', 'SELECT count(*) INTO @auth  FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', '1', 'TEST', '2013-06-26 10:41:34');
INSERT INTO `systemlog` VALUES ('327', 'DEL', 'ss', 'SELECT count(*) INTO @auth  FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', '1', 'TEST', '2013-06-26 10:41:45');
INSERT INTO `systemlog` VALUES ('328', 'DEL', 'ss', 'SELECT count(*) INTO @auth  FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', '1', 'TEST', '2013-06-26 10:41:55');
INSERT INTO `systemlog` VALUES ('329', 'AUTH', 'ss', 'SELECT count(*) INTO @auth  FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', '1', 'TEST', '2013-06-26 10:42:49');
INSERT INTO `systemlog` VALUES ('330', 'AUTH', 'ss', 'SELECT count(*) INTO @auth  FROM `user` AS u LEFT JOIN tbauthoriz AS a ON a.userid = u.userid 	WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'s\' AND a.modulName =  \'TEST\'  AND a.funcName = \'DEL\'', '0', 'TEST', '2013-06-26 10:43:04');
INSERT INTO `systemlog` VALUES ('331', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'newtest\' WHERE idx = 101;', '1', 'TEST', '2013-06-26 11:39:16');
INSERT INTO `systemlog` VALUES ('332', 'AUTH', 'ss', 'SELECT count(*) FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', null, 'TEST', '2013-06-26 11:51:47');
INSERT INTO `systemlog` VALUES ('333', 'AUTH', 'ss', 'SELECT count(*) FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', null, 'TEST', '2013-06-26 11:51:51');
INSERT INTO `systemlog` VALUES ('334', 'AUTH', 'ss', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', '1', 'TEST', '2013-06-26 11:52:58');
INSERT INTO `systemlog` VALUES ('335', 'AUTH', 'ss', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'ss\' AND u. PASSWORD = \'ss\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'NEW\'', '1', 'TEST', '2013-06-26 14:19:10');
INSERT INTO `systemlog` VALUES ('336', 'EDIT', 'ss', 'update tbsingle set tbsingle.`desc` = \'TTTT\' WHERE idx = 76;', '1', 'TEST', '2013-06-26 14:30:34');
INSERT INTO `systemlog` VALUES ('337', 'AUTH', 'SS', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'SS\' AND u. PASSWORD = \'SS\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'EDIT\'', '1', 'TEST', '2013-06-26 14:30:46');
INSERT INTO `systemlog` VALUES ('338', 'EDIT', 'SS', 'update tbsingle set tbsingle.`desc` = \'YYYYY\' WHERE idx = 76;', '1', 'TEST', '2013-06-26 14:30:55');
INSERT INTO `systemlog` VALUES ('339', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:29:36');
INSERT INTO `systemlog` VALUES ('340', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:30:14');
INSERT INTO `systemlog` VALUES ('341', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:39:57');
INSERT INTO `systemlog` VALUES ('342', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:41:54');
INSERT INTO `systemlog` VALUES ('343', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:44:23');
INSERT INTO `systemlog` VALUES ('344', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 15:46:57');
INSERT INTO `systemlog` VALUES ('345', 'LOGIN', 's', 'LOGIN', '1', 'SYS', '2013-06-26 15:53:03');
INSERT INTO `systemlog` VALUES ('346', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:53:41');
INSERT INTO `systemlog` VALUES ('347', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:54:03');
INSERT INTO `systemlog` VALUES ('348', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:54:35');
INSERT INTO `systemlog` VALUES ('349', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:55:21');
INSERT INTO `systemlog` VALUES ('350', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:55:35');
INSERT INTO `systemlog` VALUES ('351', 'LOGOUT', 'ss', 'LOGOUT', '1', 'SYS', '2013-06-26 15:55:42');
INSERT INTO `systemlog` VALUES ('352', 'LOGOUT', 'ss', 'LOGOUT', '1', 'SYS', '2013-06-26 15:55:46');
INSERT INTO `systemlog` VALUES ('353', 'LOGOUT', 'ss', 'LOGOUT', '1', 'SYS', '2013-06-26 15:56:16');
INSERT INTO `systemlog` VALUES ('354', 'LOGOUT', 'ss', 'LOGOUT', '1', 'SYS', '2013-06-26 15:56:19');
INSERT INTO `systemlog` VALUES ('355', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 15:59:59');
INSERT INTO `systemlog` VALUES ('356', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:00:08');
INSERT INTO `systemlog` VALUES ('357', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:00:41');
INSERT INTO `systemlog` VALUES ('358', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:01:02');
INSERT INTO `systemlog` VALUES ('359', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:01:30');
INSERT INTO `systemlog` VALUES ('360', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 16:01:58');
INSERT INTO `systemlog` VALUES ('361', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:02:01');
INSERT INTO `systemlog` VALUES ('362', 'LOGIN', 's', 'LOGIN', '2', 'SYS', '2013-06-26 16:02:53');
INSERT INTO `systemlog` VALUES ('363', 'LOGOUT', 's', 'LOGOUT', '1', 'SYS', '2013-06-26 16:03:51');
INSERT INTO `systemlog` VALUES ('364', 'AUTH', 's', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'s\' AND u. PASSWORD = \'s\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', '1', 'TEST', '2013-06-27 17:26:18');
INSERT INTO `systemlog` VALUES ('365', 'AUTH', 's', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'s\' AND u. PASSWORD = \'s\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', '1', 'TEST', '2013-06-27 17:26:19');
INSERT INTO `systemlog` VALUES ('366', 'AUTH', 's', 'SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = \'A\' AND u.userid =  \'s\' AND u. PASSWORD = \'s\'  AND a.modulname =  \'TEST\'  AND a.functionname = \'LIST\'', '1', 'TEST', '2013-06-27 17:26:20');
INSERT INTO `systemlog` VALUES ('367', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ssss\' WHERE idx = 150;', '1', 'TEST', '2013-06-27 17:30:15');
INSERT INTO `systemlog` VALUES ('368', 'EDIT', 's', 'update tbsingle set tbsingle.`desc` = \'ssss\' WHERE idx = 150;', '1', 'TEST', '2013-06-27 17:30:22');
INSERT INTO `systemlog` VALUES ('369', 'DEL', 's', 'delete from tbsingle where idx = 70', '1', 'TEST', '2013-06-27 17:32:42');
INSERT INTO `systemlog` VALUES ('370', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '303', 'TEST', '2013-06-27 17:35:25');
INSERT INTO `systemlog` VALUES ('371', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '304', 'TEST', '2013-06-27 17:36:10');
INSERT INTO `systemlog` VALUES ('372', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '305', 'TEST', '2013-06-27 17:37:03');
INSERT INTO `systemlog` VALUES ('373', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '306', 'TEST', '2013-06-27 17:37:18');
INSERT INTO `systemlog` VALUES ('374', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '307', 'TEST', '2013-06-27 17:37:37');
INSERT INTO `systemlog` VALUES ('375', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '308', 'TEST', '2013-06-27 17:40:46');
INSERT INTO `systemlog` VALUES ('376', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '309', 'TEST', '2013-06-27 17:40:47');
INSERT INTO `systemlog` VALUES ('377', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '310', 'TEST', '2013-06-27 17:40:48');
INSERT INTO `systemlog` VALUES ('378', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '311', 'TEST', '2013-06-27 17:40:48');
INSERT INTO `systemlog` VALUES ('379', 'NEW', 's', 'insert into tbsingle(`desc`) VALUES(\'tytytytyt\');', '312', 'TEST', '2013-06-27 17:40:49');
INSERT INTO `systemlog` VALUES ('380', 'NEW', 's', 'insert into Tbsingle(`idx` ,`desc` ,`createDate` ) VALUES(4,\'2222\',\'2013-05-15 00:00:00\')', '0', 'TEST', '2013-06-27 19:03:10');
INSERT INTO `systemlog` VALUES ('381', 'NEW', 's', 'insert into Tbsingle(`idx` ,`desc` ,`createDate` ) VALUES(5,\'2222\',\'2013-05-15 00:00:00\')', '380', 'TEST', '2013-06-27 19:03:57');

-- ----------------------------
-- Table structure for t
-- ----------------------------
DROP TABLE IF EXISTS `t`;
CREATE TABLE `t` (
  `i` int(11) NOT NULL AUTO_INCREMENT,
  `j` int(11) DEFAULT NULL,
  `v` int(11) DEFAULT '0',
  `stat` char(1) NOT NULL DEFAULT 'N',
  `times` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `version_control` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`i`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t
-- ----------------------------
INSERT INTO `t` VALUES ('1', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('2', '2', '2', 'N', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('3', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('4', '0', '0', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('6', '6', '6', '6', '0000-00-00 00:00:00', '6');
INSERT INTO `t` VALUES ('7', '7', '7', '7', '0000-00-00 00:00:00', '7');
INSERT INTO `t` VALUES ('8', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('9', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('10', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('11', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('12', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('14', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('43', '7', '1', '1', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('44', '1', '0', 'n', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('45', '1', '0', 'n', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('46', '1', '0', 'n', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('47', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('48', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('49', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('50', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('51', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('52', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('53', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('54', '1', '0', '', '0000-00-00 00:00:00', '1');
INSERT INTO `t` VALUES ('55', '2', '3', '', '0000-00-00 00:00:00', '0');
INSERT INTO `t` VALUES ('56', '2', '3', '', '0000-00-00 00:00:00', '0');

-- ----------------------------
-- Table structure for tbauthoriz
-- ----------------------------
DROP TABLE IF EXISTS `tbauthoriz`;
CREATE TABLE `tbauthoriz` (
  `modulname` varchar(30) NOT NULL DEFAULT '0',
  `functionname` varchar(30) NOT NULL DEFAULT '0',
  `role` int(30) NOT NULL DEFAULT '0',
  PRIMARY KEY (`modulname`,`functionname`,`role`),
  KEY `role` (`role`),
  KEY `functionname` (`functionname`),
  CONSTRAINT `tbauthoriz_ibfk_1` FOREIGN KEY (`role`) REFERENCES `roles` (`ROLEID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `tbauthoriz_ibfk_2` FOREIGN KEY (`modulname`) REFERENCES `tbmodule` (`module`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `tbauthoriz_ibfk_3` FOREIGN KEY (`functionname`) REFERENCES `tbfunc` (`funcName`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbauthoriz
-- ----------------------------
INSERT INTO `tbauthoriz` VALUES ('AZ', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('DB', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('MV', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('PD', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('RP', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('SI', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('SO', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'DEL', '1');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'EDIT', '1');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'NEW', '1');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'VOID', '1');
INSERT INTO `tbauthoriz` VALUES ('TS', 'LIST', '1');
INSERT INTO `tbauthoriz` VALUES ('AZ', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('DB', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('MV', 'DEl', '2');
INSERT INTO `tbauthoriz` VALUES ('MV', 'EDIT', '2');
INSERT INTO `tbauthoriz` VALUES ('MV', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('MV', 'NEW', '2');
INSERT INTO `tbauthoriz` VALUES ('MV', 'VOID', '2');
INSERT INTO `tbauthoriz` VALUES ('PD', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('RP', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('SI', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('SO', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('ST', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'DEL', '2');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'EDIT', '2');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'NEW', '2');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'VOID', '2');
INSERT INTO `tbauthoriz` VALUES ('TS', 'LIST', '2');
INSERT INTO `tbauthoriz` VALUES ('AZ', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('DB', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('MV', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('PD', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('RP', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('SI', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('SO', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'DEL', '3');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'EDIT', '3');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'LIST', '3');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'NEW', '3');
INSERT INTO `tbauthoriz` VALUES ('TEST', 'VOID', '3');
INSERT INTO `tbauthoriz` VALUES ('TS', 'LIST', '3');

-- ----------------------------
-- Table structure for tbdetail
-- ----------------------------
DROP TABLE IF EXISTS `tbdetail`;
CREATE TABLE `tbdetail` (
  `idx` varchar(30) NOT NULL DEFAULT '',
  `idNo` int(11) NOT NULL DEFAULT '0',
  `desc` varchar(80) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  PRIMARY KEY (`idx`,`idNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbdetail
-- ----------------------------

-- ----------------------------
-- Table structure for tbfunc
-- ----------------------------
DROP TABLE IF EXISTS `tbfunc`;
CREATE TABLE `tbfunc` (
  `funcidx` int(255) NOT NULL AUTO_INCREMENT,
  `funcName` varchar(30) DEFAULT NULL,
  `funcDesc` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`funcidx`),
  UNIQUE KEY `funcName` (`funcName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbfunc
-- ----------------------------
INSERT INTO `tbfunc` VALUES ('1', 'LIST', 'List or BrowData');
INSERT INTO `tbfunc` VALUES ('2', 'NEW', 'Insert Into Database');
INSERT INTO `tbfunc` VALUES ('3', 'EDIT', 'Edit Database');
INSERT INTO `tbfunc` VALUES ('4', 'DEL', 'Delte Item');
INSERT INTO `tbfunc` VALUES ('5', 'VOID', 'Void or Cancel Item');

-- ----------------------------
-- Table structure for tbmaster
-- ----------------------------
DROP TABLE IF EXISTS `tbmaster`;
CREATE TABLE `tbmaster` (
  `idx` varchar(30) NOT NULL,
  `name` varchar(200) DEFAULT NULL,
  `docDate` date DEFAULT NULL,
  `total` decimal(10,0) DEFAULT NULL,
  PRIMARY KEY (`idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbmaster
-- ----------------------------

-- ----------------------------
-- Table structure for tbmodule
-- ----------------------------
DROP TABLE IF EXISTS `tbmodule`;
CREATE TABLE `tbmodule` (
  `modidx` int(11) NOT NULL AUTO_INCREMENT,
  `module` varchar(30) DEFAULT NULL,
  `description` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`modidx`),
  UNIQUE KEY `module` (`module`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbmodule
-- ----------------------------
INSERT INTO `tbmodule` VALUES ('1', 'TEST', 'TEST');
INSERT INTO `tbmodule` VALUES ('2', 'PD', 'Product');
INSERT INTO `tbmodule` VALUES ('3', 'MV', 'Move WareHouse');
INSERT INTO `tbmodule` VALUES ('4', 'SI', 'StockIn');
INSERT INTO `tbmodule` VALUES ('5', 'SO', 'StockOut');
INSERT INTO `tbmodule` VALUES ('6', 'DB', 'DashBoard');
INSERT INTO `tbmodule` VALUES ('7', 'ST', 'SETTING');
INSERT INTO `tbmodule` VALUES ('8', 'TS', 'TBSINGLE');
INSERT INTO `tbmodule` VALUES ('9', 'RP', 'PEPORT');
INSERT INTO `tbmodule` VALUES ('10', 'AZ', 'Analyze');

-- ----------------------------
-- Table structure for tbsingle
-- ----------------------------
DROP TABLE IF EXISTS `tbsingle`;
CREATE TABLE `tbsingle` (
  `idx` int(11) NOT NULL AUTO_INCREMENT,
  `desc` varchar(80) DEFAULT NULL,
  `createDate` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idx`)
) ENGINE=InnoDB AUTO_INCREMENT=335 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbsingle
-- ----------------------------
INSERT INTO `tbsingle` VALUES ('333', 'desc', '0000-00-00 00:00:00');
INSERT INTO `tbsingle` VALUES ('334', 'desc', '2013-06-06 00:00:00');

-- ----------------------------
-- Table structure for testtable
-- ----------------------------
DROP TABLE IF EXISTS `testtable`;
CREATE TABLE `testtable` (
  `no` int(11) NOT NULL AUTO_INCREMENT,
  `item` varchar(30) DEFAULT NULL,
  `desc` varchar(200) DEFAULT NULL,
  `wh` varchar(30) DEFAULT NULL,
  `qty` decimal(10,0) DEFAULT NULL,
  `unit` varchar(20) DEFAULT NULL,
  `unitPrice` decimal(10,2) DEFAULT NULL,
  `disc` decimal(10,2) DEFAULT NULL,
  `etc` varchar(10) DEFAULT NULL,
  `total` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`no`)
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of testtable
-- ----------------------------
INSERT INTO `testtable` VALUES ('22', '2312312', '2312312312313', '3', '222', 'ชุด', '0.20', '1.00', null, '43.40');
INSERT INTO `testtable` VALUES ('25', '12312', '23123', '3', '123', 'ครั้ง', '123.00', '1.00', null, '15128.00');
INSERT INTO `testtable` VALUES ('26', '123123', '23123', '3', '120', 'ชุด', '121.00', '21.00', null, '14499.00');
INSERT INTO `testtable` VALUES ('27', '12313', '231231', '3', '2', 'ชุด', '231.00', '3.00', null, '459.00');
INSERT INTO `testtable` VALUES ('28', '2312312', '23123', '3', '32', 'กล่อง', '212.00', '212.00', null, '6572.00');
INSERT INTO `testtable` VALUES ('29', '333333', '3333', '3', '333', 'กล่อง', '333.00', '33.00', null, '110856.00');
INSERT INTO `testtable` VALUES ('30', '4444', '444', '3', '444', 'กล่อง', '44.00', '44.00', null, '19492.00');
INSERT INTO `testtable` VALUES ('31', '555', '555', '3', '55', 'ชุด', '55.00', '55.00', null, '2970.00');
INSERT INTO `testtable` VALUES ('32', '4444', '4444', '3', '444', 'กล่อง', '444.00', '444.00', null, '196692.00');
INSERT INTO `testtable` VALUES ('33', '5555', '555', '3', '555', 'กล่อง', '555.00', '55.00', null, '307970.00');
INSERT INTO `testtable` VALUES ('34', '555', '555', '3', '555', 'กล่อง', '555.00', '0.00', null, '308025.00');
INSERT INTO `testtable` VALUES ('35', '666', '666', '3', '666', 'กล่อง', '666.00', '66.00', null, '443490.00');

-- ----------------------------
-- Table structure for tutorials
-- ----------------------------
DROP TABLE IF EXISTS `tutorials`;
CREATE TABLE `tutorials` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `author` varchar(255) NOT NULL,
  `rating` double NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tutorials
-- ----------------------------

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `userid` varchar(30) NOT NULL DEFAULT '',
  `password` varchar(255) DEFAULT NULL,
  `status` char(1) DEFAULT NULL,
  `wh` int(11) DEFAULT NULL,
  `roll` varchar(41) DEFAULT NULL,
  `cDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `cBy` varchar(30) DEFAULT NULL,
  `mBy` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`userid`),
  KEY `FKWHUSER` (`wh`),
  CONSTRAINT `FKWHUSER` FOREIGN KEY (`wh`) REFERENCES `location` (`whid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ข้อมูล User ที่ใช้ในการ login เข้าระบบ\r\n';

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('a', 'a', 'A', '2', '1', '2013-04-19 14:40:05', '2013-06-26 10:53:55', 'admin', 'admin');
INSERT INTO `user` VALUES ('aaa', 'aaa', 'A', '1', '2', '2013-04-17 12:42:30', '2013-06-26 10:54:20', 'admin', 'admin');
INSERT INTO `user` VALUES ('admin', 'admin', 'A', '1', '3', '2013-04-17 12:42:30', '2013-06-26 10:54:21', 'SYSTEM', 'SYSTEM');
INSERT INTO `user` VALUES ('b', 'b', 'A', '1', '1', '2013-04-19 14:43:26', '2013-06-26 10:53:55', 'test', 'test');
INSERT INTO `user` VALUES ('bbb', 'bbb', 'A', '1', '2', '2013-04-17 12:42:30', '2013-06-26 10:54:24', 'admin', 'admin');
INSERT INTO `user` VALUES ('c', 'c', 'D', '1', '3', '2013-04-19 14:47:41', '2013-06-26 10:54:25', 'system', 'sytem');
INSERT INTO `user` VALUES ('ccc', 'ccc', 'A', '2', '1', '2013-04-17 12:42:30', '2013-06-26 10:53:55', 'admin', 'admin');
INSERT INTO `user` VALUES ('s', 's', 'A', '1', '2', '2013-04-17 12:42:30', '2013-06-26 10:54:26', 'admin', 'admin');
INSERT INTO `user` VALUES ('sadmin', 'sadmin', 'A', '1', '3', '2013-04-17 12:42:30', '2013-06-26 10:54:29', 'admin', 'admin');
INSERT INTO `user` VALUES ('ss', 'ss', 'A', '1', '1', '2013-06-24 17:16:34', '2013-06-26 10:53:55', 'admin', 'admin');
INSERT INTO `user` VALUES ('TL', 'TL', 'A', '1', '2', '2013-04-19 15:28:04', '2013-06-26 10:54:30', 'tlen', 'tlen');

-- ----------------------------
-- Table structure for userlogs
-- ----------------------------
DROP TABLE IF EXISTS `userlogs`;
CREATE TABLE `userlogs` (
  `logid` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `userid` varchar(30) NOT NULL,
  `times` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'เวลาเข้าออก / เวลาทีกำรายการ',
  `status` varchar(30) DEFAULT NULL COMMENT 'สถานะ IN OUT UPDATE DEL',
  `comments` varchar(200) DEFAULT NULL COMMENT 'หมายเหตุ',
  PRIMARY KEY (`logid`)
) ENGINE=InnoDB AUTO_INCREMENT=1195 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of userlogs
-- ----------------------------
INSERT INTO `userlogs` VALUES ('1191', 's', '2013-06-19 16:17:08', 'IN', 'login');
INSERT INTO `userlogs` VALUES ('1192', 's', '2013-06-19 16:17:15', 'OUT', 'logout');
INSERT INTO `userlogs` VALUES ('1193', 's', '2013-06-19 16:23:27', 'IN', 'comment');
INSERT INTO `userlogs` VALUES ('1194', 's', '2013-06-19 16:23:56', 'OUT', 'comment');

-- ----------------------------
-- Table structure for warehouse
-- ----------------------------
DROP TABLE IF EXISTS `warehouse`;
CREATE TABLE `warehouse` (
  `warehouseID` int(11) NOT NULL DEFAULT '0',
  `warehouseSN` varchar(30) DEFAULT NULL,
  `warehouseName` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`warehouseID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='คลังสินค้า\r\n';

-- ----------------------------
-- Records of warehouse
-- ----------------------------
INSERT INTO `warehouse` VALUES ('1', 'LD42', 'ลาดพร้าว 42');
INSERT INTO `warehouse` VALUES ('2', 'LD15', 'ลาดพร้าว 15');
INSERT INTO `warehouse` VALUES ('3', 'CM', 'เชียงใหม่');
INSERT INTO `warehouse` VALUES ('4', 'CB', 'ชลบุรี');

-- ----------------------------
-- View structure for v_productgroup
-- ----------------------------
DROP VIEW IF EXISTS `v_productgroup`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_productgroup` AS select `istab`.`TYPCOD` AS `TYPCOD`,`istab`.`SHORTNAM` AS `SHORTNAM`,`istab`.`SHORTNAM2` AS `SHORTNAM2` from `istab` where (`istab`.`TABTYP` = 22) ;

-- ----------------------------
-- View structure for v_status
-- ----------------------------
DROP VIEW IF EXISTS `v_status`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_status` AS select `istab`.`TYPCOD` AS `TYPCOD`,`istab`.`SHORTNAM` AS `SHORTNAM`,`istab`.`SHORTNAM2` AS `SHORTNAM2` from `istab` where (`istab`.`TABTYP` = 99) ;

-- ----------------------------
-- View structure for v_stcost
-- ----------------------------
DROP VIEW IF EXISTS `v_stcost`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_stcost` AS select `stcost`.`stockcostid` AS `stockcostid`,`stcost`.`refdoc` AS `refdoc`,`stcost`.`instock` AS `instock`,sum(`stcost`.`lose`) AS `lose`,sum(`stcost`.`blame`) AS `blame`,sum(`stcost`.`dilapidate`) AS `dilapidate`,sum(`stcost`.`completet`) AS `completet`,`stcost`.`inCost` AS `inCost`,((sum((`stcost`.`instock` * `stcost`.`inCost`)) + sum(`stcost`.`avgcost`)) / sum(`stcost`.`completet`)) AS `(sum(instock*inCost)+sum(avgcost))/sum(completet)`,((sum(`stcost`.`instock`) * sum(`stcost`.`inCost`)) + sum(`stcost`.`avgcost`)) AS `sum(instock)*sum(inCost)+ sum(avgcost)` from `stcost` group by `stcost`.`refdoc` ;

-- ----------------------------
-- View structure for v_stock
-- ----------------------------
DROP VIEW IF EXISTS `v_stock`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_stock` AS SELECT
stcard.Stcode AS stcode,
(sum(`stcard`.`Instock`) - sum(`stcard`.`OutStock`)) AS stock,
stcard.WareHouse AS WareHouse
from `stcard`
group by `stcard`.`Stcode`,`stcard`.`WareHouse` ;

-- ----------------------------
-- View structure for v_stockmins
-- ----------------------------
DROP VIEW IF EXISTS `v_stockmins`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_stockmins` AS select sum(`stcard`.`Instock`) AS `stockin`,sum(`stcard`.`OutStock`) AS `stockout`,(sum(`stcard`.`Instock`) - sum(`stcard`.`OutStock`)) AS `stocktotal`,`stcard`.`Stcode` AS `Stcode`,`stmas`.`desc1` AS `desc1`,`stmas`.`barcode` AS `barcode`,`stmas`.`mins` AS `mins`,((sum(`stcard`.`Instock`) - sum(`stcard`.`OutStock`)) >= `stmas`.`mins`) AS `yn` from (`stcard` join `stmas` on((`stmas`.`stcode` = `stcard`.`Stcode`))) group by `stcard`.`Stcode` ;

-- ----------------------------
-- View structure for v_warehouselocation
-- ----------------------------
DROP VIEW IF EXISTS `v_warehouselocation`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `v_warehouselocation` AS select `location`.`whid` AS `whid`,`location`.`LocSN` AS `LocSN`,`location`.`LocationName` AS `LocationName`,`warehouse`.`warehouseSN` AS `warehouseSN`,`warehouse`.`warehouseName` AS `warehouseName`,`location`.`warehouseid` AS `warehouseid`,`location`.`status` AS `status`,`location`.`cDate` AS `cDate`,`location`.`mDate` AS `mDate`,`location`.`cBy` AS `cBy`,`location`.`mBy` AS `mBy` from (`location` left join `warehouse` on((`location`.`warehouseid` = `warehouse`.`warehouseID`))) ;

-- ----------------------------
-- Procedure structure for customer_config
-- ----------------------------
DROP PROCEDURE IF EXISTS `customer_config`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `customer_config`(
   IN in_id_customer INT,
   IN in_string_array VARCHAR(1000),
   IN in_array_count INT
)
BEGIN
DECLARE cr_stack_depth INTEGER DEFAULT cr_debug.ENTER_MODULE2('customer_config', 'crm', 7, 100410)/*[cr_debug.1]*/; 
-- temporary variables for the SP
-- more details in the following
DECLARE tmp_id_customer_key VARCHAR(255);
DECLARE tmp_stored_date DATE;
DECLARE tmp_key_value_pair VARCHAR(255);
DECLARE tmp_date VARCHAR(255);
DECLARE tmp_result TEXT;
DECLARE counter INT DEFAULT 0;

CALL cr_debug.UPDATE_WATCH3('in_id_customer', in_id_customer, 'INT', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('in_string_array', in_string_array, 'VARCHAR(1000)', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('in_array_count', in_array_count, 'INT', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_id_customer_key', tmp_id_customer_key, 'VARCHAR(255)', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_stored_date', tmp_stored_date, 'DATE', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_key_value_pair', tmp_key_value_pair, 'VARCHAR(255)', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_date', tmp_date, 'VARCHAR(255)', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_result', tmp_result, 'TEXT', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.UPDATE_WATCH3('counter', counter, 'INT', cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.TRACE(6, 6, 0, 5, cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.TRACE(16, 16, 0, 20, cr_stack_depth)/*[cr_debug.2]*/;
SET tmp_result = "";
CALL cr_debug.UPDATE_WATCH3('tmp_result', tmp_result, '', cr_stack_depth)/*[cr_debug.1]*/;
CALL cr_debug.TRACE(17, 85, 0, 21, cr_stack_depth)/*[cr_debug.2]*/;
simple_loop: LOOP
   -- increment the loop counter each iteration
   CALL cr_debug.TRACE(19, 19, 3, 29, cr_stack_depth)/*[cr_debug.2]*/;
SET counter = counter + 1;
CALL cr_debug.UPDATE_WATCH3('counter', counter, '', cr_stack_depth)/*[cr_debug.1]*/;
   -- set tmp_stored_date variable as null string
   -- this will stored the updated_date 
   -- from the database record
   CALL cr_debug.TRACE(23, 23, 3, 30, cr_stack_depth)/*[cr_debug.2]*/;
SET tmp_stored_date = NULL;
CALL cr_debug.UPDATE_WATCH3('tmp_stored_date', tmp_stored_date, '', cr_stack_depth)/*[cr_debug.1]*/;
         
   CALL cr_debug.TRACE(25, 26, 3, 30, cr_stack_depth)/*[cr_debug.2]*/;
SELECT strSplit(in_string_array, '|', counter) 
      INTO tmp_key_value_pair;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101)/*[cr_debug.1]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_key_value_pair', tmp_key_value_pair, '', cr_stack_depth)/*[cr_debug.1]*/;
   -- IN simple_loop 1st time, 
   -- var tmp_key_value_pair will store "var1:1000=2010-03-15"
   -- when runing strSplit function
   -- you can run the following in mysql console to see the output
   -- be sure to create the function first see Listing 4
   -- SELECT customer.strSplit('var1:1000=2010-03-15|var2:2000=2010-04-11', 
   --	'|', 1); 
   -- simple_loop 2, var tmp_key_value_pair will store "var2:2000=2010-04-11"

   CALL cr_debug.TRACE(36, 37, 3, 31, cr_stack_depth)/*[cr_debug.2]*/;
SELECT strSplit(tmp_key_value_pair, '=', 1) 
      INTO tmp_id_customer_key;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101)/*[cr_debug.1]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_id_customer_key', tmp_id_customer_key, '', cr_stack_depth)/*[cr_debug.1]*/;
      -- simple_loop 1, var tmp_id_customer_key will store "var1:1000"
      -- simple_loop 2, var tmp_id_customer_key will store "var2:2000"

   CALL cr_debug.TRACE(41, 41, 3, 61, cr_stack_depth)/*[cr_debug.2]*/;
SELECT strSplit(tmp_key_value_pair, '=', 2) INTO tmp_date;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101)/*[cr_debug.1]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_date', tmp_date, '', cr_stack_depth)/*[cr_debug.1]*/;
   -- simple_loop 1, var tmp_date will store "2010-03-15"
   -- simple_loop 1, var tmp_date will store "2010-04-11"

   CALL cr_debug.TRACE(45, 47, 3, 68, cr_stack_depth)/*[cr_debug.2]*/;
SELECT last_updated FROM customer_records 
      WHERE id_customer = in_id_customer AND 
         id_customer_key = tmp_id_customer_key INTO tmp_stored_date;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101)/*[cr_debug.1]*/;
CALL cr_debug.UPDATE_WATCH3('tmp_stored_date', tmp_stored_date, '', cr_stack_depth)/*[cr_debug.1]*/;

   -- beginning of control structure
       
   CALL cr_debug.TRACE(51, 76, 3, 10, cr_stack_depth)/*[cr_debug.2]*/;
IF tmp_stored_date is NULL THEN
      -- INSERT, since we don't find the record
		
      CALL cr_debug.TRACE(54, 56, 6, 57, cr_stack_depth)/*[cr_debug.2]*/;
INSERT INTO customer_records 
         (`id_customer`, `id_customer_key`, `last_updated`) VALUES 
         (in_id_customer, tmp_id_customer_key, tmp_date);
CALL cr_debug.UPDATE_SYSTEM_CALLS(102)/*[cr_debug.1]*/;

      -- we set the result as 1 indicating INSERT
      CALL cr_debug.TRACE(59, 59, 6, 48, cr_stack_depth)/*[cr_debug.2]*/;
SET tmp_result = CONCAT(tmp_result, "1=");
CALL cr_debug.UPDATE_WATCH3('tmp_result', tmp_result, '', cr_stack_depth)/*[cr_debug.1]*/;

   ELSEIF tmp_stored_date = tmp_date THEN
      -- we don't do another thing here since
      -- the last updated_date for the record = the passed-in date
      CALL cr_debug.TRACE(64, 64, 6, 48, cr_stack_depth)/*[cr_debug.2]*/;
SET tmp_result = CONCAT(tmp_result, "0=");
CALL cr_debug.UPDATE_WATCH3('tmp_result', tmp_result, '', cr_stack_depth)/*[cr_debug.1]*/;

   ELSE
      -- UPDATE HERE, since the updated_date != the passed-in date
		
      CALL cr_debug.TRACE(69, 71, 6, 50, cr_stack_depth)/*[cr_debug.2]*/;
UPDATE customer_records SET last_updated = tmp_date 
         WHERE id_customer = in_id_customer AND 
            id_customer_key = tmp_id_customer_key;
CALL cr_debug.UPDATE_SYSTEM_CALLS(104)/*[cr_debug.1]*/;
         -- we set the element result as 2 in this case
         -- to tell it is an update
	  CALL cr_debug.TRACE(74, 74, 3, 45, cr_stack_depth)/*[cr_debug.2]*/;
SET tmp_result = CONCAT(tmp_result, "2=");
CALL cr_debug.UPDATE_WATCH3('tmp_result', tmp_result, '', cr_stack_depth)/*[cr_debug.1]*/;
	
   END if;
	 

   CALL cr_debug.TRACE(79, 83, 3, 10, cr_stack_depth)/*[cr_debug.2]*/;
IF counter = in_array_count THEN
      -- break out since we have done parsing
      -- the 2 elements in our example
       CALL cr_debug.TRACE(82, 82, 7, 25, cr_stack_depth)/*[cr_debug.2]*/;
LEAVE simple_loop;
   END IF;
  
END LOOP simple_loop;
  
-- now returns the result 
CALL cr_debug.TRACE(88, 88, 0, 18, cr_stack_depth)/*[cr_debug.2]*/;
SELECT tmp_result;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101)/*[cr_debug.1]*/;
	-- the stored procedure returns the result here
	-- via the variable tmp_result
	-- if 1=1= means 2 inserts
	-- if 1=2= means 1st INSERT, 2nd UPDATE
	-- if 1=0= means 1st INSERT, 2nd is ignored
CALL cr_debug.TRACE(94, 94, 0, 3, cr_stack_depth)/*[cr_debug.2]*/;
CALL cr_debug.LEAVE_MODULE(cr_stack_depth - 1)/*[cr_debug.2]*/;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for getErrMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `getErrMsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `getErrMsg`(`errno` BIGINT UNSIGNED)
BEGIN
  DECLARE _msg VARCHAR(255);
  select ErrorMsg INTO _msg from errormsg WHERE ErrorCode = `errno`;
  IF ISNULL(_msg) THEN 
		set _msg = CONCAT('Plese Define Error Message & Error No:' , `errno` ) ; 
		insert into errormsg(errormsg,errorcode) values('Plese Define Error Message',`errno`);


	END IF;
	SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = _msg,   MYSQL_ERRNO = `errno`;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Managepersons
-- ----------------------------
DROP PROCEDURE IF EXISTS `Managepersons`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Managepersons`(
_Id int(11) ,
_Firstname text ,
_Lastname text ,
_Sex text ,
_Age int(11) 
)
BEGIN

IF _Id = 0 THEN
INSERT INTO persons (Firstname,Lastname,Sex,Age) VALUES ( _Firstname, _Lastname, _Sex, _Age);
ELSE
UPDATE persons SET Id= _Id, Firstname= _Firstname, Lastname= _Lastname, Sex= _Sex, Age= _Age WHERE Id=_Id; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Managerecvotherhead
-- ----------------------------
DROP PROCEDURE IF EXISTS `Managerecvotherhead`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Managerecvotherhead`(
_Docno text ,
_Refdoc text ,
_Days datetime ,
_Times text ,
_Personcode text ,
_Personname text ,
_Projectcode text ,
_Opencode text ,
_Opendes text ,
_Totalall real ,
_Comments text ,
_Usercode text 
)
BEGIN

IF _Docno = 0 THEN
INSERT INTO recvotherhead (Refdoc,Days,Times,Personcode,Personname,Projectcode,Opencode,Opendes,Totalall,Comments,Usercode) VALUES ( _Refdoc, _Days, _Times, _Personcode, _Personname, _Projectcode, _Opencode, _Opendes, _Totalall, _Comments, _Usercode);
ELSE
UPDATE recvotherhead SET Docno= _Docno, Refdoc= _Refdoc, Days= _Days, Times= _Times, Personcode= _Personcode, Personname= _Personname, Projectcode= _Projectcode, Opencode= _Opencode, Opendes= _Opendes, Totalall= _Totalall, Comments= _Comments, Usercode= _Usercode WHERE Docno=_Docno; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Managetesttable
-- ----------------------------
DROP PROCEDURE IF EXISTS `Managetesttable`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Managetesttable`(
_no int(11) ,
_item text ,
_desc text ,
_wh text ,
_qty real ,
_unit text ,
_unitPrice real ,
_disc real ,
_etc text ,
_total real
)
BEGIN
IF _no = 0 THEN
INSERT INTO testtable (item,`desc`,wh,qty,unit,unitPrice,disc,etc,total) VALUES ( _item, _desc, _wh, _qty, _unit, _unitPrice, _disc, _etc, _total);
ELSE
UPDATE testtable SET no= _no, item= _item, `desc`= _desc, wh= _wh, qty= _qty, unit= _unit, unitPrice= _unitPrice, disc= _disc, etc= _etc, total= _total WHERE no=_no; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for procedure1
-- ----------------------------
DROP PROCEDURE IF EXISTS `procedure1`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `procedure1`(IN Param1 VARCHAR(255), IN Param2 VARCHAR(255), IN Param3 VARCHAR(255))
BEGIN

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Readpersons
-- ----------------------------
DROP PROCEDURE IF EXISTS `Readpersons`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Readpersons`(_id int(11))
BEGIN

IF _id = 0 THEN
SELECT * FROM persons;
ELSE
SELECT * FROM persons WHERE Id=_id; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Readrecvotherhead
-- ----------------------------
DROP PROCEDURE IF EXISTS `Readrecvotherhead`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Readrecvotherhead`(IN `_id` text)
BEGIN

IF _id = '0' THEN
SELECT * FROM recvotherhead;
ELSE
SELECT * FROM recvotherhead WHERE Docno = _id; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Readtesttable
-- ----------------------------
DROP PROCEDURE IF EXISTS `Readtesttable`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Readtesttable`(_id int(11))
BEGIN

IF _id = 0 THEN
SELECT * FROM testtable;
ELSE
SELECT * FROM testtable WHERE no=_id; 
END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for showLogs
-- ----------------------------
DROP PROCEDURE IF EXISTS `showLogs`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `showLogs`(_userid varchar(30),_types varchar(30),_module varchar(30),_parametor varchar(30))
BEGIN

select * from  systemlog  WHERE 1=1 
and userid = _userid
-- and types = _types
-- and module = _module
-- and parametor = _parametor
ORDER BY  log_id DESC;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPcreateDetai
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPcreateDetai`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPcreateDetai`(_userid varchar(30), _docNo varchar(30),_item  varchar(30),_desc  varchar(80),_qty INT,_unit  varchar(30))
BEGIN
	/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');

	*********/
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @TO = 1 THEN 
		START TRANSACTION;
		-- get No for Item Document
		select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
		IF ISNULL(@No) THEN SET @No = 1; END IF;
		-- INSERT into movewhDetail
		set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;

		-- Insert into stcard ---

		-- Insert into  GL
		
		-- Insert into  etc
		-- Insert Loging
		call sp_InsertLog('NEW',_userid,@sql,null,'AP');
	
		COMMIT;
  ELSE 
		call getErrMsg(60001);
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPcreateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPcreateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPcreateMaster`(_userid varchar(30),_frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1))
BEGIN
   /****
		Ext: call spARcreateMaster('s','2','1','2013-05-31 00:00:00','notes','PR00001','A');
					@para		_userid varchar(30),
					@para		_frmWH varchar(30),
					@para		_toWH varchar(30), 
					@para		_docDate datetime ,
					@para		Notes text,
					@para		Employee varchar(30),
					@para		status char(1)
		*****/
	 -- Clear All session
   call spClearAllsessionforUserAndTimeout(_userid);
	
   START TRANSACTION;
	 -- get DocID
   call spGetSystemDocId('MV',@docNo);
   -- SELECT @docNo;
	 IF @docNo = '' THEN
			call getErrMsg(60002);
			ROLLBACK;
	 ELSE
		set @TO = fcControlUpdateTable(_userid,@docNo);
		set @sql = CONCAT("INSERT INTO movewhmaster(DocNo,frmWH,toWH,DocDate,Notes,Employee,`status`,cBy,mBy) VALUES( '",@docNo,"','",_frmWH,"','",_toWH,"','",_docDate,"','",Notes,"','",Employee,"','",`status`,"','",_userid,"','",_userid,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		-- insert loging ---
		call sp_InsertLog('NEW',_userid,@sql,null,'AP');

		COMMIT;
   END IF; 
/******
 _userid varchar(30), _docNo varchar(30),frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1)
 ******/ 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPdeleteDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPdeleteDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPdeleteDetail`(_userid varchar(30), _docid varchar(30),_No INT)
BEGIN
	/**********
	  EXT:  call spARdeleteDetail('s','MV2556050',1);
	***************/	
 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		-- call getErrMsg(2300);
	END;
  
  SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;

  IF @TF = 1 THEN 
			-- get number row for delete 
		  select count(*) INTO @rownum from movewhdetail WHERE DocNo = _docid and `No` = _No;
			
			IF @rownum > 0 THEN
					START TRANSACTION;
					-- Delete Detail
						 -- select * from movewhdetail md WHERE md.DocNo = _docid and md.`No` = _No;
					DELETE FROM movewhdetail WHERE DocNo = _docid and `No` = _No;

					set @sql = concat('DELETE FROM movewhdetail WHERE DocNo = ',quote(_docid),' and `No` = ',_No,';');
					prepare query from @sql;
					execute query;
					deallocate prepare query;
					-- SELECT ROW_COUNT();

					-- delete from stcard 

					-- delete from GL

					-- delete from etc
					
					-- Insert Logging ---
					call sp_InsertLog('DEL',_userid,@sql,@rownum,'AP'); 	
					COMMIT;
				  SELECT @rownum;
			ELSE
					select @rownum;
					call getErrMsg(60006);
			END IF;
  ELSE
		  call getErrMsg(60001);
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPdeleteMasterDetailbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPdeleteMasterDetailbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPdeleteMasterDetailbyID`(_userid varchar(30), _docid varchar(30))
BEGIN
  /*********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
  *********/	

/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
 */ 
	SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;
  IF @TF = 1 THEN 
			SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ;
			SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ;
			IF @rownum > 0 THEN 
					START TRANSACTION;
					-- Delete Detail
							SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql;
							execute query;
							deallocate prepare query;
					-- SELECT ROW_COUNT();
					-- Delete Master
							SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql1;
							execute query;
							deallocate prepare query;
						 
					-- SELECT ROW_COUNT();

							-- delete from stcard 

							-- delete from GL

							-- delete from etc

							-- insert Loging ----	
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'AP');
							call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'AP');

					COMMIT;
					SELECT @rownum;
			ELSE
					call getErrMsg(60006);
			END IF;
	
	SET @TF = fcCompleteUpdateTable(_userid);  -- End.	
  ELSE 
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPgetAllMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPgetAllMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPgetAllMaster`(_sort varchar(4),_start INT,_stop INT)
BEGIN

SET @input = _sort;

if @input="asc" then
    SET @sort = " ORDER BY movewhmaster.DocNo ASC ";
elseif @input = "desc" then
    SET @sort = " ORDER BY movewhmaster.DocNo DESC ";
else
    SET @sort ="";
end if;
#select _start,_stop,_sort;
if( _start <= 0  and _stop <= 0 ) THEN
	set @limits = "";
ELSE 
  set @limits =  CONCAT(' LIMIT ',_start,',',_stop);
end if;



SET @query = CONCAT(" SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I' ",IFNULL(@sort,' '), IFNULL(@limits,' ') );
# select @query;
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPgetMasterbyCitiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPgetMasterbyCitiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPgetMasterbyCitiria`(`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30))
BEGIN
					/*********
						Ext: call spARgetMasterbyCitiria('mv2','1','2','PR00001','2013-01-01','2013-05-31');
						`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30)
					**********/
	
						IF _docNo = '' or ISNULL(_docNo) THEN SET @docno = '';  ELSE SET @docno = CONCAT("	and DocNo LIKE '%",_docNo,"%'"); END IF;
				
					-- 	and frmWH = '2'
					IF _frmwh = '' or ISNULL(_frmwh) THEN set @frmwh = '';  ELSE set @frmwh = CONCAT('	and frmWH = ',QUOTE(_frmwh)); END IF;
		
					-- 	and toWH = '1'
					IF _towh = '' or ISNULL(_towh) THEN set @towh = '';  ELSE set @towh = CONCAT('	and toWH = ',QUOTE(_towh)); END IF;

					-- 	and Employee = 'PR00001'
					IF _emp = '' or ISNULL(_emp) THEN  set @emp = '';  ELSE set @emp = concat('	and Employee = ',QUOTE(_emp)); END IF;

					IF (_startDate = '' or ISNULL(_startDate) ) and ( _endDate = '' or ISNULL(_endDate)) THEN
							 set @docdate = '';
					ELSEIF !ISNULL(_startDate) and  ( ISNULL(_endDate) or _endDate = '' ) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_startDate));
					ELSEIF (_startDate = '' or ISNULL(_startDate)) and  !ISNULL(_endDate) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_endDate));
					ELSE
								-- 	and DocDate BETWEEN '2013-06-01' and '2013-06-31';
							 set @docdate = CONCAT(' and DocDate BETWEEN ',QUOTE(_startDate),' and ',QUOTE(_endDate));
					END IF;

					SET @sql = CONCAT("SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I'",
											@docno,@frmwh,@towh,@emp,@docdate); 
					-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPgetMasterDetailById
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPgetMasterDetailById`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPgetMasterDetailById`(_docid varchar(30))
BEGIN
  /*
	  Example: call spARgetMasterDetailById('MV000001');
		master  movewhmaster 
		detail  movewhdetail
		pk = fk = DocNo
	*/
	DECLARE _docno VARCHAR(30) DEFAULT '';
	IF ISNULL(_docid) THEN 
			select ms.DocNo INTO _docno from movewhmaster ms where 1=1 and status !='I' order by DocNo DESC limit 1;
			IF !ISNULL(_docno) THEN
					select * from movewhmaster where 1=1 and status !='I' order by DocNo Desc limit 1;
					select * from movewhdetail where 1=1 and DocNo= _docno; #Detail Multi Records\
			END IF;
  ELSE
		select * from movewhmaster where 1=1  and status !='I'  and DocNo= _docid;  #Master 1 Record
		select * from movewhdetail where 1=1 and DocNo= _docid; #Detail Multi Records
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPListProductForSale
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPListProductForSale`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPListProductForSale`(_userid varchar(30),_min INT,_wh varchar(30))
BEGIN
				/*******
							Ext: call spARListProductForSale('s',1,'2');
									 @para string  username
									 @para int  stmin 0 = > 0   and 1 = ALL
									 @para string wh  warehouse = '1'
				*******/

				IF _userid = '' or ISNULL(_userid) THEN  call getErrMsg(60003); END IF;
				IF _wh = '' or ISNULL(_wh ) THEN  SET @wh = '';  ELSE  SET @wh = CONCAT(" and WareHouse = '",_wh,"'"); END IF;
				IF _min = 0 THEN SET @min = CONCAT(" and  ISNULL(stMins) "); ELSE SET  @min = ''; END IF;
				-- select @wh,@min;

				set @sql = CONCAT(" SELECT
						stcard.Stcode,
						stcard.WareHouse,
						sum(stcard.Instock) - sum(stcard.OutStock) AS stock,
						stmas.barcode,
						stmas.desc1,
						stmas.desc2,
						stmas.width,
						stmas.height,
						stmas.depth,
						stmas.weigth,
						stmas.Units,
						stmas.pdType,
						stmas.maxs,
						stmas.mins,
						stmas.pdGroup,
						stmas.price,
						stmas.price1,
						stmas.price2,
						stmas.price3,
						stmas.price4,
						stmas.price5,
						stmas.cuttype,
						stmas.costtype,
						stmas.expiredate,
						stmas.model,
						stmas.classcode,
						stmas.size,
						stmas.stdcost,
						stmas.`status`,
						stmas.pictus,
						stmas.notes,
						stmas.stMins,
						stmas.sNtype,
						stmas.cBy,
						stmas.mBy,
						stmas.cDate,
						stmas.mDate
						FROM
						stcard
						INNER JOIN stmas ON stmas.stcode = stcard.Stcode
						WHERE 1=1
						and stmas.`status` = 'A' ",
						@min,@wh,"
						GROUP BY stcard.Stcode,stcard.WareHouse
						");
						-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPupdateDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPupdateDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPupdateDetail`(_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30))
    MODIFIES SQL DATA
BEGIN
	/*****
				_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30)
				Ext: call spARupdateDetail('s','MV0000039',4,'111111111','desc',2,'unit');
	******/


	SET @TF = fcControlUpdateTable(_userid,_docNo);
	-- select @TF;
  IF @TF = 1 THEN 
	   START TRANSACTION;
			
			select count(*) into @rownum from movewhdetail md WHERE md.DocNo = _docNo and md.`No` = _No;
			IF @rownum > 0 THEN

			set @sql = concat('UPDATE movewhdetail md  SET  md.item = ',QUOTE(_item),',  md.description = ',QUOTE(_desc),',  md.qty = ',_qty,',  md.units = ',QUOTE(_units),' WHERE md.DocNo = ',QUOTE(_docNo),' and md.`No` =',_No);
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			
		  
		 	-- SELECT * from movewhdetail  where `No` = _No and DocNo = _docNo;

			-- UPDATE from stcard 

			-- UPDATE from GL

			-- UPDATE from etc
				
			-- Insert loging
			call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AP');
		 COMMIT;
			SELECT @rownum;
		 ELSE 
			 call getErrMsg(60005);
		 END IF; 

  ELSE 
		-- Error message;
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPupdateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPupdateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPupdateMaster`(_userid varchar(30),_docNo varchar(30),_frmWH  varchar(30),_toWH varchar(30),_docDate datetime,_notes text,_emp  varchar(30),_status char(1))
BEGIN
	/*****
		Ext: call spARupdateMaster(_userid,_docNo_frmWH,_toWH,_docDate,_notes,_emp,_status)
				 call spARupdateMaster('s','MV0000028','1','2','2013-05-31','notes','PR00001','A');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT('UPDATE movewhmaster SET frmWH = ',QUOTE(_frmWH),' ,toWH = ',QUOTE(_toWH),', DocDate = ',QUOTE(_docDate),' ,Notes = ',QUOTE(_notes),' ,Employee = ',QUOTE(_emp),',`status` = ',QUOTE(_status),', mBy = ',QUOTE(_userid),' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AP');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spAPvoidMasterDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spAPvoidMasterDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spAPvoidMasterDetail`(_userid varchar(30),_docNo varchar(30))
BEGIN
		/*****
		Ext: call spAPvoidMasterDetail(_userid,_docNo)
				 call spAPvoidMasterDetail('s','MV0000028');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT("UPDATE movewhmaster SET `status` = 'C'",' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AP');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARcreateDetai
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARcreateDetai`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARcreateDetai`(_userid varchar(30), _docNo varchar(30),_item  varchar(30),_desc  varchar(80),_qty INT,_unit  varchar(30))
BEGIN
	/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');

	*********/
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @TO = 1 THEN 
		START TRANSACTION;
		-- get No for Item Document
		select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
		IF ISNULL(@No) THEN SET @No = 1; END IF;
		-- INSERT into movewhDetail
		set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;

		-- Insert into stcard ---

		-- Insert into  GL
		
		-- Insert into  etc
		-- Insert Loging
		call sp_InsertLog('NEW',_userid,@sql,null,'AR');
	
		COMMIT;
  ELSE 
		call getErrMsg(60001);
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARcreateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARcreateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARcreateMaster`(_userid varchar(30),_frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1))
BEGIN
   /****
		Ext: call spARcreateMaster('s','2','1','2013-05-31 00:00:00','notes','PR00001','A');
					@para		_userid varchar(30),
					@para		_frmWH varchar(30),
					@para		_toWH varchar(30), 
					@para		_docDate datetime ,
					@para		Notes text,
					@para		Employee varchar(30),
					@para		status char(1)
		*****/
	 -- Clear All session
   call spClearAllsessionforUserAndTimeout(_userid);
	
   START TRANSACTION;
	 -- get DocID
   call spGetSystemDocId('MV',@docNo);
   -- SELECT @docNo;
	 IF @docNo = '' THEN
			call getErrMsg(60002);
			ROLLBACK;
	 ELSE
		set @TO = fcControlUpdateTable(_userid,@docNo);
		set @sql = CONCAT("INSERT INTO movewhmaster(DocNo,frmWH,toWH,DocDate,Notes,Employee,`status`,cBy,mBy) VALUES( '",@docNo,"','",_frmWH,"','",_toWH,"','",_docDate,"','",Notes,"','",Employee,"','",`status`,"','",_userid,"','",_userid,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		-- insert loging ---
		call sp_InsertLog('NEW',_userid,@sql,null,'AR');

		COMMIT;
   END IF; 
/******
 _userid varchar(30), _docNo varchar(30),frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1)
 ******/ 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARdeleteDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARdeleteDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARdeleteDetail`(_userid varchar(30), _docid varchar(30),_No INT)
BEGIN
	/**********
	  EXT:  call spARdeleteDetail('s','MV2556050',1);
	***************/	
 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		-- call getErrMsg(2300);
	END;
  
  SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;

  IF @TF = 1 THEN 
			-- get number row for delete 
		  select count(*) INTO @rownum from movewhdetail WHERE DocNo = _docid and `No` = _No;
			
			IF @rownum > 0 THEN
					START TRANSACTION;
					-- Delete Detail
						 -- select * from movewhdetail md WHERE md.DocNo = _docid and md.`No` = _No;
					DELETE FROM movewhdetail WHERE DocNo = _docid and `No` = _No;

					set @sql = concat('DELETE FROM movewhdetail WHERE DocNo = ',quote(_docid),' and `No` = ',_No,';');
					prepare query from @sql;
					execute query;
					deallocate prepare query;
					-- SELECT ROW_COUNT();

					-- delete from stcard 

					-- delete from GL

					-- delete from etc
					
					-- Insert Logging ---
					call sp_InsertLog('DEL',_userid,@sql,@rownum,'AR'); 	
					COMMIT;
				  SELECT @rownum;
			ELSE
					select @rownum;
					call getErrMsg(60006);
			END IF;
  ELSE
		  call getErrMsg(60001);
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARdeleteMasterDetailbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARdeleteMasterDetailbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARdeleteMasterDetailbyID`(_userid varchar(30), _docid varchar(30))
BEGIN
  /*********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
  *********/	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
  
	SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;
  IF @TF = 1 THEN 
			SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ;
			SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ;
			IF @rownum > 0 THEN 
					START TRANSACTION;
					-- Delete Detail
							SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql;
							execute query;
							deallocate prepare query;
					-- SELECT ROW_COUNT();
					-- Delete Master
							SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql1;
							execute query;
							deallocate prepare query;
						 
					-- SELECT ROW_COUNT();

							-- delete from stcard 

							-- delete from GL

							-- delete from etc

							-- insert Loging ----	
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'AR');
							call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'AR');

					COMMIT;
					SELECT @rownum;
			ELSE
					call getErrMsg(60006);
			END IF;
	
	SET @TF = fcCompleteUpdateTable(_userid);  -- End.	
  ELSE 
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARgetAllMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARgetAllMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARgetAllMaster`(_sort varchar(4),_start INT,_stop INT)
BEGIN

SET @input = _sort;

if @input="asc" then
    SET @sort = " ORDER BY movewhmaster.DocNo ASC ";
elseif @input = "desc" then
    SET @sort = " ORDER BY movewhmaster.DocNo DESC ";
else
    SET @sort ="";
end if;
#select _start,_stop,_sort;
if( _start <= 0  and _stop <= 0 ) THEN
	set @limits = "";
ELSE 
  set @limits =  CONCAT(' LIMIT ',_start,',',_stop);
end if;



SET @query = CONCAT(" SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I' ",IFNULL(@sort,' '), IFNULL(@limits,' ') );
# select @query;
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARgetMasterbyCitiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARgetMasterbyCitiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARgetMasterbyCitiria`(`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30))
BEGIN
					/*********
						Ext: call spARgetMasterbyCitiria('mv2','1','2','PR00001','2013-01-01','2013-05-31');
						`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30)
					**********/
	
						IF _docNo = '' or ISNULL(_docNo) THEN SET @docno = '';  ELSE SET @docno = CONCAT("	and DocNo LIKE '%",_docNo,"%'"); END IF;
				
					-- 	and frmWH = '2'
					IF _frmwh = '' or ISNULL(_frmwh) THEN set @frmwh = '';  ELSE set @frmwh = CONCAT('	and frmWH = ',QUOTE(_frmwh)); END IF;
		
					-- 	and toWH = '1'
					IF _towh = '' or ISNULL(_towh) THEN set @towh = '';  ELSE set @towh = CONCAT('	and toWH = ',QUOTE(_towh)); END IF;

					-- 	and Employee = 'PR00001'
					IF _emp = '' or ISNULL(_emp) THEN  set @emp = '';  ELSE set @emp = concat('	and Employee = ',QUOTE(_emp)); END IF;

					IF (_startDate = '' or ISNULL(_startDate) ) and ( _endDate = '' or ISNULL(_endDate)) THEN
							 set @docdate = '';
					ELSEIF !ISNULL(_startDate) and  ( ISNULL(_endDate) or _endDate = '' ) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_startDate));
					ELSEIF (_startDate = '' or ISNULL(_startDate)) and  !ISNULL(_endDate) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_endDate));
					ELSE
								-- 	and DocDate BETWEEN '2013-06-01' and '2013-06-31';
							 set @docdate = CONCAT(' and DocDate BETWEEN ',QUOTE(_startDate),' and ',QUOTE(_endDate));
					END IF;

					SET @sql = CONCAT("SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I'",
											@docno,@frmwh,@towh,@emp,@docdate); 
					-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARgetMasterDetailById
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARgetMasterDetailById`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARgetMasterDetailById`(_docid varchar(30))
BEGIN
  /*
	  Example: call spARgetMasterDetailById('MV000001');
		master  movewhmaster 
		detail  movewhdetail
		pk = fk = DocNo
	*/
	DECLARE _docno VARCHAR(30) DEFAULT '';
	IF ISNULL(_docid) THEN 
			select ms.DocNo INTO _docno from movewhmaster ms where 1=1 and status !='I' order by DocNo DESC limit 1;
			IF !ISNULL(_docno) THEN
					select * from movewhmaster where 1=1 and status !='I' order by DocNo Desc limit 1;
					select * from movewhdetail where 1=1 and DocNo= _docno; #Detail Multi Records\
			END IF;
  ELSE
		select * from movewhmaster where 1=1  and status !='I'  and DocNo= _docid;  #Master 1 Record
		select * from movewhdetail where 1=1 and DocNo= _docid; #Detail Multi Records
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARListProductForSale
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARListProductForSale`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARListProductForSale`(_userid varchar(30),_min INT,_wh varchar(30))
BEGIN
				/*******
							Ext: call spARListProductForSale('s',1,'2');
									 @para string  username
									 @para int  stmin 0 = > 0   and 1 = ALL
									 @para string wh  warehouse = '1'
				*******/

				IF _userid = '' or ISNULL(_userid) THEN  call getErrMsg(60003); END IF;
				IF _wh = '' or ISNULL(_wh ) THEN  SET @wh = '';  ELSE  SET @wh = CONCAT(" and WareHouse = '",_wh,"'"); END IF;
				IF _min = 0 THEN SET @min = CONCAT(" and  ISNULL(stMins) "); ELSE SET  @min = ''; END IF;
				-- select @wh,@min;

				set @sql = CONCAT(" SELECT
						stcard.Stcode,
						stcard.WareHouse,
						sum(stcard.Instock) - sum(stcard.OutStock) AS stock,
						stmas.barcode,
						stmas.desc1,
						stmas.desc2,
						stmas.width,
						stmas.height,
						stmas.depth,
						stmas.weigth,
						stmas.Units,
						stmas.pdType,
						stmas.maxs,
						stmas.mins,
						stmas.pdGroup,
						stmas.price,
						stmas.price1,
						stmas.price2,
						stmas.price3,
						stmas.price4,
						stmas.price5,
						stmas.cuttype,
						stmas.costtype,
						stmas.expiredate,
						stmas.model,
						stmas.classcode,
						stmas.size,
						stmas.stdcost,
						stmas.`status`,
						stmas.pictus,
						stmas.notes,
						stmas.stMins,
						stmas.sNtype,
						stmas.cBy,
						stmas.mBy,
						stmas.cDate,
						stmas.mDate
						FROM
						stcard
						INNER JOIN stmas ON stmas.stcode = stcard.Stcode
						WHERE 1=1
						and stmas.`status` = 'A' ",
						@min,@wh,"
						GROUP BY stcard.Stcode,stcard.WareHouse
						");
						-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARupdateDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARupdateDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARupdateDetail`(_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30))
    MODIFIES SQL DATA
BEGIN
	/*****
				_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30)
				Ext: call spARupdateDetail('s','MV0000039',4,'111111111','desc',2,'unit');
	******/


	SET @TF = fcControlUpdateTable(_userid,_docNo);
	-- select @TF;
  IF @TF = 1 THEN 
	   START TRANSACTION;
			
			select count(*) into @rownum from movewhdetail md WHERE md.DocNo = _docNo and md.`No` = _No;
			IF @rownum > 0 THEN

			set @sql = concat('UPDATE movewhdetail md  SET  md.item = ',QUOTE(_item),',  md.description = ',QUOTE(_desc),',  md.qty = ',_qty,',  md.units = ',QUOTE(_units),' WHERE md.DocNo = ',QUOTE(_docNo),' and md.`No` =',_No);
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			
		  
		 	-- SELECT * from movewhdetail  where `No` = _No and DocNo = _docNo;

			-- UPDATE from stcard 

			-- UPDATE from GL

			-- UPDATE from etc
				
			-- Insert loging
			call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AR');
		 COMMIT;
			SELECT @rownum;
		 ELSE 
			 call getErrMsg(60005);
		 END IF; 

  ELSE 
		-- Error message;
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARupdateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARupdateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARupdateMaster`(_userid varchar(30),_docNo varchar(30),_frmWH  varchar(30),_toWH varchar(30),_docDate datetime,_notes text,_emp  varchar(30),_status char(1))
BEGIN
	/*****
		Ext: call spARupdateMaster(_userid,_docNo_frmWH,_toWH,_docDate,_notes,_emp,_status)
				 call spARupdateMaster('s','MV0000028','1','2','2013-05-31','notes','PR00001','A');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT('UPDATE movewhmaster SET frmWH = ',QUOTE(_frmWH),' ,toWH = ',QUOTE(_toWH),', DocDate = ',QUOTE(_docDate),' ,Notes = ',QUOTE(_notes),' ,Employee = ',QUOTE(_emp),',`status` = ',QUOTE(_status),', mBy = ',QUOTE(_userid),' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AR');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spARvoidMasterDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spARvoidMasterDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spARvoidMasterDetail`(_userid varchar(30),_docNo varchar(30))
BEGIN
	/*****
		Ext: call spAPvoidMasterDetail(_userid,_docNo)
				 call spAPvoidMasterDetail('s','MV0000028');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT("UPDATE movewhmaster SET `status` = 'C'",' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'AR');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spChkAuth
-- ----------------------------
DROP PROCEDURE IF EXISTS `spChkAuth`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spChkAuth`(_userid varchar(30),_module varchar(30),_function varchar(30))
BEGIN
		/******
			call spChkAuth('s','TEST','EDIT');
		*******/
		IF( (_userid  = '' OR ISNULL(_userid)) OR (_module = '' or ISNULL(_module)) OR (_function = '' OR ISNULL(_function)) )  THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
	SET @auth = spAuthroize_usrid_module_func(_userid,_module,_function);	
		IF @auth = 1 THEN
				select @auth as id;
	  ELSE
				SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz',   MYSQL_ERRNO = '40001';
		END IF;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spClearAllsessionforUserAndTimeout
-- ----------------------------
DROP PROCEDURE IF EXISTS `spClearAllsessionforUserAndTimeout`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spClearAllsessionforUserAndTimeout`(_userid varchar(30))
BEGIN
		  -- delete all record from user
			DELETE FROM `controlUpdateTable` where 1=1 and userid = _userid ;

			-- delete all timeout 
			SELECT i.SHORTNAM into @dt from istab i WHERE i.TABTYP = 98;
			DELETE FROM controlupdatetable WHERE TIMEDIFF(NOW(),sTime) > @dt;
			

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spCreate
-- ----------------------------
DROP PROCEDURE IF EXISTS `spCreate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spCreate`(_userid varchar(30),_docNo varchar(30))
BEGIN
		/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');
		******/

	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;

	-- valicate 
	IF  1 != 1 AND  ISNULL(1) THEN
		call getErrMsg(2300);	
	ELSE
				-- CHECK session --
				set @TO = fcControlUpdateTable(_userid,_docNo);
				IF @TO = 1 THEN 
					START TRANSACTION;
					-- get No for Item Document
					select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
					IF ISNULL(@No) THEN SET @No = 1; END IF;
					-- INSERT into movewhDetail
					set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
					prepare query from @sql;
					execute query;
					deallocate prepare query;

					-- Insert into stcard ---

					-- Insert into  GL
					
					-- Insert into  etc

					-- Insert Loging
					-- call sp_InsertLog('NEW',_userid,@sql,null,'AR');
					call sp_InsertLog('NEW',_userid,@sql,null,'AR');
					COMMIT;
					SELECT _docNo;
				ELSE 
					call getErrMsg(60001);
				END IF; -- session
 END IF; -- validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spDelete
-- ----------------------------
DROP PROCEDURE IF EXISTS `spDelete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spDelete`()
BEGIN
	/********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
	********/

	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
	
	-- validate --
	IF 1= 1 THEN
			-- check session 
			-- SET @TF = fcControlUpdateTable(_userid,_docid);
			-- SET @TF = fcCtrlUpdateTableSingle(_userid,PK,tbname;
			SET @TF = fcControlUpdateTable(_userid,_docid);
			IF @TF > 1 THEN
					-- check @rownum
					-- SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ; -- master
					-- SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ; -- detail
					-- SELECT count(*) INTO @rownum from  tbname where xx = 'xx' ;

				  IF @rownum > 0  THEN
							START TRANSACTION;
								-- Delete Detail
								SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
								prepare query from @sql;
								execute query;
								deallocate prepare query;
								-- Delete Master
								SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
								prepare query from @sql1;
								execute query;
								deallocate prepare query;

								-- delete from stcard 

								-- delete from GL

								-- delete from etc

								-- insert Loging ----	
								call sp_InsertLog('DEL',_userid,@sql,@rownum,'AR'); -- detail
								call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'AR'); -- master
							COMMIT;
							SELECT @rownum;
					ELSE
						 call getErrMsg(60006);
					END IF; -- @rownum
			ELSE
				call getErrMsg(60001); -- Can't edit / update /delete
			END IF; -- check session
  END IF; -- validate 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spGetSystemDocId
-- ----------------------------
DROP PROCEDURE IF EXISTS `spGetSystemDocId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spGetSystemDocId`(_docid varchar(2),OUT id varchar(30))
    READS SQL DATA
BEGIN
	DECLARE max VARCHAR(30) DEFAULT  '';
	DECLARE _digi INT DEFAULT 15;
	DECLARE int_digi INT DEFAULT 0;
	DECLARE prefexS varchar(30);
	DECLARE _prefexleng INT; 
	DECLARE a INT Default 1 ;
	DECLARE int_val INT DEFAULT 0;
	DECLARE vchar_DOCNUM VARCHAR(30) DEFAULT '';
	DECLARE _c int;
	DECLARE Docno VARCHAR(255);
/*
DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
		BEGIN
	#		ROLLBACK;
	#		call getErrMsg(2300);
		END;
*/
	SET _c = 0;
	select count(*)  into _c  from  docscontrol where docid =  UPPER(_docid);
	SELECT TYPCOD INTO _digi FROM `istab` WHERE TABTYP = 97;

	START TRANSACTION;
  IF _c = 0 THEN
	  # digi get from isTab 
 		INSERT INTO docscontrol(docid,docnum,digi) VALUES(UPPER(_docid),1,_digi);
    #select 'insert';
 	ELSE 
 		UPDATE docscontrol set docnum = docnum + 1  WHERE docid = UPPER(_docid) ;
		#select 'update';
  END IF;
	COMMIT;
     #select 'after commit';
	select CONCAT(docid,IFNULL(prefix,'')) INTO prefexS from docscontrol where docid = UPPER(_docid);
	   #select prefexS;
	select CONCAT(dc.docnum) INTO vchar_DOCNUM from docscontrol dc where docid = UPPER(_docid);
     #select vchar_DOCNUM;

	set _prefexleng = LENGTH(prefexS);

	#   select _prefexleng;
	select dc.digi into int_digi from docscontrol dc where  dc.docid = UPPER(_docid);
  #select int_digi;
	
  set _prefexleng = int_digi - _prefexleng;
	#select _prefexleng;
	#select int_val,_prefexleng;
  getMax : LOOP
  IF int_val = _prefexleng  THEN
    LEAVE getMax;
  END IF;
     SET int_val = int_val +1;
     SET max = CONCAT(max,'9');
  END LOOP; 
  
  #select 'max',max,CONVERT(max,DECIMAL(30));
	IF (CONVERT(max,DECIMAL(30)) >= CONVERT(vchar_DOCNUM,DECIMAL(30))) THEN
		select CONCAT(prefexS,RIGHT(vchar_DOCNUM,_prefexleng)) INTO id;
	ELSE
		#select 'error1';
		call getErrMsg(2300);
	END IF; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINcreateDetai
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINcreateDetai`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINcreateDetai`(_userid varchar(30), _docNo varchar(30),_item  varchar(30),_desc  varchar(80),_qty INT,_unit  varchar(30))
BEGIN
	/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');

	*********/
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @TO = 1 THEN 
		START TRANSACTION;
		-- get No for Item Document
		select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
		IF ISNULL(@No) THEN SET @No = 1; END IF;
		-- INSERT into movewhDetail
		set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;

		-- Insert into stcard ---

		-- Insert into  GL
		
		-- Insert into  etc
		-- Insert Loging
		call sp_InsertLog('NEW',_userid,@sql,null,'IN');
	
		COMMIT;
  ELSE 
		call getErrMsg(60001);
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINcreateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINcreateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINcreateMaster`(_userid varchar(30),_frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1))
BEGIN
   /****
		Ext: call spARcreateMaster('s','2','1','2013-05-31 00:00:00','notes','PR00001','A');
					@para		_userid varchar(30),
					@para		_frmWH varchar(30),
					@para		_toWH varchar(30), 
					@para		_docDate datetime ,
					@para		Notes text,
					@para		Employee varchar(30),
					@para		status char(1)
		*****/
	 -- Clear All session
   call spClearAllsessionforUserAndTimeout(_userid);
	
   START TRANSACTION;
	 -- get DocID
   call spGetSystemDocId('MV',@docNo);
   -- SELECT @docNo;
	 IF @docNo = '' THEN
			call getErrMsg(60002);
			ROLLBACK;
	 ELSE
		set @TO = fcControlUpdateTable(_userid,@docNo);
		set @sql = CONCAT("INSERT INTO movewhmaster(DocNo,frmWH,toWH,DocDate,Notes,Employee,`status`,cBy,mBy) VALUES( '",@docNo,"','",_frmWH,"','",_toWH,"','",_docDate,"','",Notes,"','",Employee,"','",`status`,"','",_userid,"','",_userid,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		-- insert loging ---
		call sp_InsertLog('NEW',_userid,@sql,null,'IN');

		COMMIT;
   END IF; 
/******
 _userid varchar(30), _docNo varchar(30),frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1)
 ******/ 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINdeleteDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINdeleteDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINdeleteDetail`(_userid varchar(30), _docid varchar(30),_No INT)
BEGIN
	/**********
	  EXT:  call spARdeleteDetail('s','MV2556050',1);
	***************/	
 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		-- call getErrMsg(2300);
	END;
  
  SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;

  IF @TF = 1 THEN 
			-- get number row for delete 
		  select count(*) INTO @rownum from movewhdetail WHERE DocNo = _docid and `No` = _No;
			
			IF @rownum > 0 THEN
					START TRANSACTION;
					-- Delete Detail
						 -- select * from movewhdetail md WHERE md.DocNo = _docid and md.`No` = _No;
					DELETE FROM movewhdetail WHERE DocNo = _docid and `No` = _No;

					set @sql = concat('DELETE FROM movewhdetail WHERE DocNo = ',quote(_docid),' and `No` = ',_No,';');
					prepare query from @sql;
					execute query;
					deallocate prepare query;
					-- SELECT ROW_COUNT();

					-- delete from stcard 

					-- delete from GL

					-- delete from etc
					
					-- Insert Logging ---
					call sp_InsertLog('DEL',_userid,@sql,@rownum,'IN'); 	
					COMMIT;
				  SELECT @rownum;
			ELSE
					select @rownum;
					call getErrMsg(60006);
			END IF;
  ELSE
		  call getErrMsg(60001);
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINdeleteMasterDetailbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINdeleteMasterDetailbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINdeleteMasterDetailbyID`(_userid varchar(30), _docid varchar(30))
BEGIN
  /*********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
  *********/	

/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
 */ 
	SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;
  IF @TF = 1 THEN 
			SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ;
			SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ;
			IF @rownum > 0 THEN 
					START TRANSACTION;
					-- Delete Detail
							SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql;
							execute query;
							deallocate prepare query;
					-- SELECT ROW_COUNT();
					-- Delete Master
							SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql1;
							execute query;
							deallocate prepare query;
						 
					-- SELECT ROW_COUNT();

							-- delete from stcard 

							-- delete from GL

							-- delete from etc

							-- insert Loging ----	
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'IN');
							call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'IN');

					COMMIT;
					SELECT @rownum;
			ELSE
					call getErrMsg(60006);
			END IF;
	
	SET @TF = fcCompleteUpdateTable(_userid);  -- End.	
  ELSE 
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINgetAllMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINgetAllMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINgetAllMaster`(_sort varchar(4),_start INT,_stop INT)
BEGIN

SET @input = _sort;

if @input="asc" then
    SET @sort = " ORDER BY movewhmaster.DocNo ASC ";
elseif @input = "desc" then
    SET @sort = " ORDER BY movewhmaster.DocNo DESC ";
else
    SET @sort ="";
end if;
#select _start,_stop,_sort;
if( _start <= 0  and _stop <= 0 ) THEN
	set @limits = "";
ELSE 
  set @limits =  CONCAT(' LIMIT ',_start,',',_stop);
end if;



SET @query = CONCAT(" SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I' ",IFNULL(@sort,' '), IFNULL(@limits,' ') );
# select @query;
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINgetMasterbyCitiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINgetMasterbyCitiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINgetMasterbyCitiria`(`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30))
BEGIN
					/*********
						Ext: call spARgetMasterbyCitiria('mv2','1','2','PR00001','2013-01-01','2013-05-31');
						`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30)
					**********/
	
						IF _docNo = '' or ISNULL(_docNo) THEN SET @docno = '';  ELSE SET @docno = CONCAT("	and DocNo LIKE '%",_docNo,"%'"); END IF;
				
					-- 	and frmWH = '2'
					IF _frmwh = '' or ISNULL(_frmwh) THEN set @frmwh = '';  ELSE set @frmwh = CONCAT('	and frmWH = ',QUOTE(_frmwh)); END IF;
		
					-- 	and toWH = '1'
					IF _towh = '' or ISNULL(_towh) THEN set @towh = '';  ELSE set @towh = CONCAT('	and toWH = ',QUOTE(_towh)); END IF;

					-- 	and Employee = 'PR00001'
					IF _emp = '' or ISNULL(_emp) THEN  set @emp = '';  ELSE set @emp = concat('	and Employee = ',QUOTE(_emp)); END IF;

					IF (_startDate = '' or ISNULL(_startDate) ) and ( _endDate = '' or ISNULL(_endDate)) THEN
							 set @docdate = '';
					ELSEIF !ISNULL(_startDate) and  ( ISNULL(_endDate) or _endDate = '' ) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_startDate));
					ELSEIF (_startDate = '' or ISNULL(_startDate)) and  !ISNULL(_endDate) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_endDate));
					ELSE
								-- 	and DocDate BETWEEN '2013-06-01' and '2013-06-31';
							 set @docdate = CONCAT(' and DocDate BETWEEN ',QUOTE(_startDate),' and ',QUOTE(_endDate));
					END IF;

					SET @sql = CONCAT("SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I'",
											@docno,@frmwh,@towh,@emp,@docdate); 
					-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINgetMasterDetailById
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINgetMasterDetailById`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINgetMasterDetailById`(_docid varchar(30))
BEGIN
  /*
	  Example: call spARgetMasterDetailById('MV000001');
		master  movewhmaster 
		detail  movewhdetail
		pk = fk = DocNo
	*/
	DECLARE _docno VARCHAR(30) DEFAULT '';
	IF ISNULL(_docid) THEN 
			select ms.DocNo INTO _docno from movewhmaster ms where 1=1 and status !='I' order by DocNo DESC limit 1;
			IF !ISNULL(_docno) THEN
					select * from movewhmaster where 1=1 and status !='I' order by DocNo Desc limit 1;
					select * from movewhdetail where 1=1 and DocNo= _docno; #Detail Multi Records\
			END IF;
  ELSE
		select * from movewhmaster where 1=1  and status !='I'  and DocNo= _docid;  #Master 1 Record
		select * from movewhdetail where 1=1 and DocNo= _docid; #Detail Multi Records
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINListProductForSale
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINListProductForSale`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINListProductForSale`(_userid varchar(30),_min INT,_wh varchar(30))
BEGIN
				/*******
							Ext: call spARListProductForSale('s',1,'2');
									 @para string  username
									 @para int  stmin 0 = > 0   and 1 = ALL
									 @para string wh  warehouse = '1'
				*******/

				IF _userid = '' or ISNULL(_userid) THEN  call getErrMsg(60003); END IF;
				IF _wh = '' or ISNULL(_wh ) THEN  SET @wh = '';  ELSE  SET @wh = CONCAT(" and WareHouse = '",_wh,"'"); END IF;
				IF _min = 0 THEN SET @min = CONCAT(" and  ISNULL(stMins) "); ELSE SET  @min = ''; END IF;
				-- select @wh,@min;

				set @sql = CONCAT(" SELECT
						stcard.Stcode,
						stcard.WareHouse,
						sum(stcard.Instock) - sum(stcard.OutStock) AS stock,
						stmas.barcode,
						stmas.desc1,
						stmas.desc2,
						stmas.width,
						stmas.height,
						stmas.depth,
						stmas.weigth,
						stmas.Units,
						stmas.pdType,
						stmas.maxs,
						stmas.mins,
						stmas.pdGroup,
						stmas.price,
						stmas.price1,
						stmas.price2,
						stmas.price3,
						stmas.price4,
						stmas.price5,
						stmas.cuttype,
						stmas.costtype,
						stmas.expiredate,
						stmas.model,
						stmas.classcode,
						stmas.size,
						stmas.stdcost,
						stmas.`status`,
						stmas.pictus,
						stmas.notes,
						stmas.stMins,
						stmas.sNtype,
						stmas.cBy,
						stmas.mBy,
						stmas.cDate,
						stmas.mDate
						FROM
						stcard
						INNER JOIN stmas ON stmas.stcode = stcard.Stcode
						WHERE 1=1
						and stmas.`status` = 'A' ",
						@min,@wh,"
						GROUP BY stcard.Stcode,stcard.WareHouse
						");
						-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINupdateDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINupdateDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINupdateDetail`(_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30))
    MODIFIES SQL DATA
BEGIN
	/*****
				_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30)
				Ext: call spARupdateDetail('s','MV0000039',4,'111111111','desc',2,'unit');
	******/


	SET @TF = fcControlUpdateTable(_userid,_docNo);
	-- select @TF;
  IF @TF = 1 THEN 
	   START TRANSACTION;
			
			select count(*) into @rownum from movewhdetail md WHERE md.DocNo = _docNo and md.`No` = _No;
			IF @rownum > 0 THEN

			set @sql = concat('UPDATE movewhdetail md  SET  md.item = ',QUOTE(_item),',  md.description = ',QUOTE(_desc),',  md.qty = ',_qty,',  md.units = ',QUOTE(_units),' WHERE md.DocNo = ',QUOTE(_docNo),' and md.`No` =',_No);
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			
		  
		 	-- SELECT * from movewhdetail  where `No` = _No and DocNo = _docNo;

			-- UPDATE from stcard 

			-- UPDATE from GL

			-- UPDATE from etc
				
			-- Insert loging
			call sp_InsertLog('EDIT',_userid,@sql,@rownum,'IN');
		 COMMIT;
			SELECT @rownum;
		 ELSE 
			 call getErrMsg(60005);
		 END IF; 

  ELSE 
		-- Error message;
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINupdateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINupdateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINupdateMaster`(_userid varchar(30),_docNo varchar(30),_frmWH  varchar(30),_toWH varchar(30),_docDate datetime,_notes text,_emp  varchar(30),_status char(1))
BEGIN
	/*****
		Ext: call spARupdateMaster(_userid,_docNo_frmWH,_toWH,_docDate,_notes,_emp,_status)
				 call spARupdateMaster('s','MV0000028','1','2','2013-05-31','notes','PR00001','A');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT('UPDATE movewhmaster SET frmWH = ',QUOTE(_frmWH),' ,toWH = ',QUOTE(_toWH),', DocDate = ',QUOTE(_docDate),' ,Notes = ',QUOTE(_notes),' ,Employee = ',QUOTE(_emp),',`status` = ',QUOTE(_status),', mBy = ',QUOTE(_userid),' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'IN');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spINvoidMasterDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spINvoidMasterDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spINvoidMasterDetail`(_userid varchar(30),_docNo varchar(30))
BEGIN
			/*****
		Ext: call spAPvoidMasterDetail(_userid,_docNo)
				 call spAPvoidMasterDetail('s','MV0000028');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT("UPDATE movewhmaster SET `status` = 'C'",' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'IN');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVcreateDetai
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVcreateDetai`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVcreateDetai`(_userid varchar(30), _docNo varchar(30),_item  varchar(30),_desc  varchar(80),_qty INT,_unit  varchar(30))
BEGIN
	/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');

	*********/
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @TO = 1 THEN 
		START TRANSACTION;
		-- get No for Item Document
		select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
		IF ISNULL(@No) THEN SET @No = 1; END IF;
		-- INSERT into movewhDetail
		set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;

		-- Insert into stcard ---

		-- Insert into  GL
		
		-- Insert into  etc
		-- Insert Loging
		call sp_InsertLog('NEW',_userid,@sql,null,'MV');
	
		COMMIT;
  ELSE 
		call getErrMsg(60001);
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVcreateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVcreateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVcreateMaster`(_userid varchar(30),_frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1))
BEGIN
   /****
		Ext: call spARcreateMaster('s','2','1','2013-05-31 00:00:00','notes','PR00001','A');
					@para		_userid varchar(30),
					@para		_frmWH varchar(30),
					@para		_toWH varchar(30), 
					@para		_docDate datetime ,
					@para		Notes text,
					@para		Employee varchar(30),
					@para		status char(1)
		*****/
	 -- Clear All session
   call spClearAllsessionforUserAndTimeout(_userid);
	
   START TRANSACTION;
	 -- get DocID
   call spGetSystemDocId('MV',@docNo);
   -- SELECT @docNo;
	 IF @docNo = '' THEN
			call getErrMsg(60002);
			ROLLBACK;
	 ELSE
		set @TO = fcControlUpdateTable(_userid,@docNo);
		set @sql = CONCAT("INSERT INTO movewhmaster(DocNo,frmWH,toWH,DocDate,Notes,Employee,`status`,cBy,mBy) VALUES( '",@docNo,"','",_frmWH,"','",_toWH,"','",_docDate,"','",Notes,"','",Employee,"','",`status`,"','",_userid,"','",_userid,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		-- insert loging ---
		call sp_InsertLog('NEW',_userid,@sql,null,'MV');

		COMMIT;
   END IF; 
/******
 _userid varchar(30), _docNo varchar(30),frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1)
 ******/ 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVdeleteDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVdeleteDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVdeleteDetail`(_userid varchar(30), _docid varchar(30),_No INT)
BEGIN
	/**********
	  EXT:  call spARdeleteDetail('s','MV2556050',1);
	***************/	
 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		-- call getErrMsg(2300);
	END;
  
  SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;

  IF @TF = 1 THEN 
			-- get number row for delete 
		  select count(*) INTO @rownum from movewhdetail WHERE DocNo = _docid and `No` = _No;
			
			IF @rownum > 0 THEN
					START TRANSACTION;
					-- Delete Detail
						 -- select * from movewhdetail md WHERE md.DocNo = _docid and md.`No` = _No;
					DELETE FROM movewhdetail WHERE DocNo = _docid and `No` = _No;

					set @sql = concat('DELETE FROM movewhdetail WHERE DocNo = ',quote(_docid),' and `No` = ',_No,';');
					prepare query from @sql;
					execute query;
					deallocate prepare query;
					-- SELECT ROW_COUNT();

					-- delete from stcard 

					-- delete from GL

					-- delete from etc
					
					-- Insert Logging ---
					call sp_InsertLog('DEL',_userid,@sql,@rownum,'MV'); 	
					COMMIT;
				  SELECT @rownum;
			ELSE
					select @rownum;
					call getErrMsg(60006);
			END IF;
  ELSE
		  call getErrMsg(60001);
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVdeleteMasterDetailbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVdeleteMasterDetailbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVdeleteMasterDetailbyID`(_userid varchar(30), _docid varchar(30))
BEGIN
  /*********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
  *********/	

/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
 */ 
	SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;
  IF @TF = 1 THEN 
			SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ;
			SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ;
			IF @rownum > 0 THEN 
					START TRANSACTION;
					-- Delete Detail
							SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql;
							execute query;
							deallocate prepare query;
					-- SELECT ROW_COUNT();
					-- Delete Master
							SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql1;
							execute query;
							deallocate prepare query;
						 
					-- SELECT ROW_COUNT();

							-- delete from stcard 

							-- delete from GL

							-- delete from etc

							-- insert Loging ----	
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'MV');
							call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'MV');

					COMMIT;
					SELECT @rownum;
			ELSE
					call getErrMsg(60006);
			END IF;
	
	SET @TF = fcCompleteUpdateTable(_userid);  -- End.	
  ELSE 
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVgetAllMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVgetAllMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVgetAllMaster`(_sort varchar(4),_start INT,_stop INT)
BEGIN

SET @input = _sort;

if @input="asc" then
    SET @sort = " ORDER BY movewhmaster.DocNo ASC ";
elseif @input = "desc" then
    SET @sort = " ORDER BY movewhmaster.DocNo DESC ";
else
    SET @sort ="";
end if;
#select _start,_stop,_sort;
if( _start <= 0  and _stop <= 0 ) THEN
	set @limits = "";
ELSE 
  set @limits =  CONCAT(' LIMIT ',_start,',',_stop);
end if;



SET @query = CONCAT(" SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I' ",IFNULL(@sort,' '), IFNULL(@limits,' ') );
# select @query;
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVgetMasterbyCitiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVgetMasterbyCitiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVgetMasterbyCitiria`(`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30))
BEGIN
					/*********
						Ext: call spARgetMasterbyCitiria('mv2','1','2','PR00001','2013-01-01','2013-05-31');
						`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30)
					**********/
	
						IF _docNo = '' or ISNULL(_docNo) THEN SET @docno = '';  ELSE SET @docno = CONCAT("	and DocNo LIKE '%",_docNo,"%'"); END IF;
				
					-- 	and frmWH = '2'
					IF _frmwh = '' or ISNULL(_frmwh) THEN set @frmwh = '';  ELSE set @frmwh = CONCAT('	and frmWH = ',QUOTE(_frmwh)); END IF;
		
					-- 	and toWH = '1'
					IF _towh = '' or ISNULL(_towh) THEN set @towh = '';  ELSE set @towh = CONCAT('	and toWH = ',QUOTE(_towh)); END IF;

					-- 	and Employee = 'PR00001'
					IF _emp = '' or ISNULL(_emp) THEN  set @emp = '';  ELSE set @emp = concat('	and Employee = ',QUOTE(_emp)); END IF;

					IF (_startDate = '' or ISNULL(_startDate) ) and ( _endDate = '' or ISNULL(_endDate)) THEN
							 set @docdate = '';
					ELSEIF !ISNULL(_startDate) and  ( ISNULL(_endDate) or _endDate = '' ) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_startDate));
					ELSEIF (_startDate = '' or ISNULL(_startDate)) and  !ISNULL(_endDate) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_endDate));
					ELSE
								-- 	and DocDate BETWEEN '2013-06-01' and '2013-06-31';
							 set @docdate = CONCAT(' and DocDate BETWEEN ',QUOTE(_startDate),' and ',QUOTE(_endDate));
					END IF;

					SET @sql = CONCAT("SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I'",
											@docno,@frmwh,@towh,@emp,@docdate); 
					-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVgetMasterDetailById
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVgetMasterDetailById`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVgetMasterDetailById`(_docid varchar(30))
BEGIN
  /*
	  Example: call spARgetMasterDetailById('MV000001');
		master  movewhmaster 
		detail  movewhdetail
		pk = fk = DocNo
	*/
	DECLARE _docno VARCHAR(30) DEFAULT '';
	IF ISNULL(_docid) THEN 
			select ms.DocNo INTO _docno from movewhmaster ms where 1=1 and status !='I' order by DocNo DESC limit 1;
			IF !ISNULL(_docno) THEN
					select * from movewhmaster where 1=1 and status !='I' order by DocNo Desc limit 1;
					select * from movewhdetail where 1=1 and DocNo= _docno; #Detail Multi Records\
			END IF;
  ELSE
		select * from movewhmaster where 1=1  and status !='I'  and DocNo= _docid;  #Master 1 Record
		select * from movewhdetail where 1=1 and DocNo= _docid; #Detail Multi Records
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVListProductForSale
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVListProductForSale`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVListProductForSale`(_userid varchar(30),_min INT,_wh varchar(30))
BEGIN
				/*******
							Ext: call spARListProductForSale('s',1,'2');
									 @para string  username
									 @para int  stmin 0 = > 0   and 1 = ALL
									 @para string wh  warehouse = '1'
				*******/

				IF _userid = '' or ISNULL(_userid) THEN  call getErrMsg(60003); END IF;
				IF _wh = '' or ISNULL(_wh ) THEN  SET @wh = '';  ELSE  SET @wh = CONCAT(" and WareHouse = '",_wh,"'"); END IF;
				IF _min = 0 THEN SET @min = CONCAT(" and  ISNULL(stMins) "); ELSE SET  @min = ''; END IF;
				-- select @wh,@min;

				set @sql = CONCAT(" SELECT
						stcard.Stcode,
						stcard.WareHouse,
						sum(stcard.Instock) - sum(stcard.OutStock) AS stock,
						stmas.barcode,
						stmas.desc1,
						stmas.desc2,
						stmas.width,
						stmas.height,
						stmas.depth,
						stmas.weigth,
						stmas.Units,
						stmas.pdType,
						stmas.maxs,
						stmas.mins,
						stmas.pdGroup,
						stmas.price,
						stmas.price1,
						stmas.price2,
						stmas.price3,
						stmas.price4,
						stmas.price5,
						stmas.cuttype,
						stmas.costtype,
						stmas.expiredate,
						stmas.model,
						stmas.classcode,
						stmas.size,
						stmas.stdcost,
						stmas.`status`,
						stmas.pictus,
						stmas.notes,
						stmas.stMins,
						stmas.sNtype,
						stmas.cBy,
						stmas.mBy,
						stmas.cDate,
						stmas.mDate
						FROM
						stcard
						INNER JOIN stmas ON stmas.stcode = stcard.Stcode
						WHERE 1=1
						and stmas.`status` = 'A' ",
						@min,@wh,"
						GROUP BY stcard.Stcode,stcard.WareHouse
						");
						-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVupdateDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVupdateDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVupdateDetail`(_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30))
    MODIFIES SQL DATA
BEGIN
	/*****
				_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30)
				Ext: call spARupdateDetail('s','MV0000039',4,'111111111','desc',2,'unit');
	******/


	SET @TF = fcControlUpdateTable(_userid,_docNo);
	-- select @TF;
  IF @TF = 1 THEN 
	   START TRANSACTION;
			
			select count(*) into @rownum from movewhdetail md WHERE md.DocNo = _docNo and md.`No` = _No;
			IF @rownum > 0 THEN

			set @sql = concat('UPDATE movewhdetail md  SET  md.item = ',QUOTE(_item),',  md.description = ',QUOTE(_desc),',  md.qty = ',_qty,',  md.units = ',QUOTE(_units),' WHERE md.DocNo = ',QUOTE(_docNo),' and md.`No` =',_No);
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			
		  
		 	-- SELECT * from movewhdetail  where `No` = _No and DocNo = _docNo;

			-- UPDATE from stcard 

			-- UPDATE from GL

			-- UPDATE from etc
				
			-- Insert loging
			call sp_InsertLog('EDIT',_userid,@sql,@rownum,'MV');
		 COMMIT;
			SELECT @rownum;
		 ELSE 
			 call getErrMsg(60005);
		 END IF; 

  ELSE 
		-- Error message;
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVupdateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVupdateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVupdateMaster`(_userid varchar(30),_docNo varchar(30),_frmWH  varchar(30),_toWH varchar(30),_docDate datetime,_notes text,_emp  varchar(30),_status char(1))
BEGIN
	/*****
		Ext: call spARupdateMaster(_userid,_docNo_frmWH,_toWH,_docDate,_notes,_emp,_status)
				 call spARupdateMaster('s','MV0000028','1','2','2013-05-31','notes','PR00001','A');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT('UPDATE movewhmaster SET frmWH = ',QUOTE(_frmWH),' ,toWH = ',QUOTE(_toWH),', DocDate = ',QUOTE(_docDate),' ,Notes = ',QUOTE(_notes),' ,Employee = ',QUOTE(_emp),',`status` = ',QUOTE(_status),', mBy = ',QUOTE(_userid),' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'MV');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spMVvoidMasterDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spMVvoidMasterDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spMVvoidMasterDetail`(_userid varchar(30),_docNo varchar(30))
BEGIN
		/*****
		Ext: call spAPvoidMasterDetail(_userid,_docNo)
				 call spAPvoidMasterDetail('s','MV0000028');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT("UPDATE movewhmaster SET `status` = 'C'",' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'MV');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTcreateDetai
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTcreateDetai`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTcreateDetai`(_userid varchar(30), _docNo varchar(30),_item  varchar(30),_desc  varchar(80),_qty INT,_unit  varchar(30))
BEGIN
	/******
	 Ext:  call spArcreateDetail('s','MV2556050','111111111','desc',9,'ชิ้น');

	*********/
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @TO = 1 THEN 
		START TRANSACTION;
		-- get No for Item Document
		select MAX(No)+1 INTO @No from Movewhdetail where docno= _docNo;
		IF ISNULL(@No) THEN SET @No = 1; END IF;
		-- INSERT into movewhDetail
		set @sql = CONCAT("INSERT INTO movewhdetail(DocNo,`No`,item,description,qty,units ) VALUES('",_docNo,"',",@No,",'",_item,"','",_desc,"',",_qty,",'",_unit,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;

		-- Insert into stcard ---

		-- Insert into  GL
		
		-- Insert into  etc
		-- Insert Loging
		call sp_InsertLog('NEW',_userid,@sql,null,'OUT');
	
		COMMIT;
  ELSE 
		call getErrMsg(60001);
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTcreateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTcreateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTcreateMaster`(_userid varchar(30),_frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1))
BEGIN
   /****
		Ext: call spARcreateMaster('s','2','1','2013-05-31 00:00:00','notes','PR00001','A');
					@para		_userid varchar(30),
					@para		_frmWH varchar(30),
					@para		_toWH varchar(30), 
					@para		_docDate datetime ,
					@para		Notes text,
					@para		Employee varchar(30),
					@para		status char(1)
		*****/
	 -- Clear All session
   call spClearAllsessionforUserAndTimeout(_userid);
	
   START TRANSACTION;
	 -- get DocID
   call spGetSystemDocId('MV',@docNo);
   -- SELECT @docNo;
	 IF @docNo = '' THEN
			call getErrMsg(60002);
			ROLLBACK;
	 ELSE
		set @TO = fcControlUpdateTable(_userid,@docNo);
		set @sql = CONCAT("INSERT INTO movewhmaster(DocNo,frmWH,toWH,DocDate,Notes,Employee,`status`,cBy,mBy) VALUES( '",@docNo,"','",_frmWH,"','",_toWH,"','",_docDate,"','",Notes,"','",Employee,"','",`status`,"','",_userid,"','",_userid,"')");
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		-- insert loging ---
		call sp_InsertLog('NEW',_userid,@sql,null,'OUT');

		COMMIT;
   END IF; 
/******
 _userid varchar(30), _docNo varchar(30),frmWH varchar(30),_toWH varchar(30), _docDate datetime ,Notes text,Employee varchar(30),status char(1)
 ******/ 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTdeleteDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTdeleteDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTdeleteDetail`(_userid varchar(30), _docid varchar(30),_No INT)
BEGIN
	/**********
	  EXT:  call spARdeleteDetail('s','MV2556050',1);
	***************/	
 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		-- call getErrMsg(2300);
	END;
  
  SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;

  IF @TF = 1 THEN 
			-- get number row for delete 
		  select count(*) INTO @rownum from movewhdetail WHERE DocNo = _docid and `No` = _No;
			
			IF @rownum > 0 THEN
					START TRANSACTION;
					-- Delete Detail
						 -- select * from movewhdetail md WHERE md.DocNo = _docid and md.`No` = _No;
					DELETE FROM movewhdetail WHERE DocNo = _docid and `No` = _No;

					set @sql = concat('DELETE FROM movewhdetail WHERE DocNo = ',quote(_docid),' and `No` = ',_No,';');
					prepare query from @sql;
					execute query;
					deallocate prepare query;
					-- SELECT ROW_COUNT();

					-- delete from stcard 

					-- delete from GL

					-- delete from etc
					
					-- Insert Logging ---
					call sp_InsertLog('DEL',_userid,@sql,@rownum,'OUT'); 	
					COMMIT;
				  SELECT @rownum;
			ELSE
					select @rownum;
					call getErrMsg(60006);
			END IF;
  ELSE
		  call getErrMsg(60001);
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTdeleteMasterDetailbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTdeleteMasterDetailbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTdeleteMasterDetailbyID`(_userid varchar(30), _docid varchar(30))
BEGIN
  /*********
     This function no check  Statuc is C = Cancel or Void  It check for can't edit or not and do samthing if true
  *********/	

/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
 */ 
	SET @TF = fcControlUpdateTable(_userid,_docid);
	 -- select @TF;
  IF @TF = 1 THEN 
			SELECT count(*) INTO @rownum from movewhmaster WHERE DocNo =  _docid ;
			SELECT count(*) INTO @rownumd from movewhdetail WHERE DocNo = _docid ;
			IF @rownum > 0 THEN 
					START TRANSACTION;
					-- Delete Detail
							SET @sql = CONCAT('DELETE FROM movewhdetail WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql;
							execute query;
							deallocate prepare query;
					-- SELECT ROW_COUNT();
					-- Delete Master
							SET @sql1 = CONCAT('DELETE FROM movewhmaster WHERE DocNo = ',QUOTE(_docid));
							prepare query from @sql1;
							execute query;
							deallocate prepare query;
						 
					-- SELECT ROW_COUNT();

							-- delete from stcard 

							-- delete from GL

							-- delete from etc

							-- insert Loging ----	
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'OUT');
							call sp_InsertLog('DEL',_userid,@sql1,@rownumd,'OUT');

					COMMIT;
					SELECT @rownum;
			ELSE
					call getErrMsg(60006);
			END IF;
	
	SET @TF = fcCompleteUpdateTable(_userid);  -- End.	
  ELSE 
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTgetAllMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTgetAllMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTgetAllMaster`(_sort varchar(4),_start INT,_stop INT)
BEGIN

SET @input = _sort;

if @input="asc" then
    SET @sort = " ORDER BY movewhmaster.DocNo ASC ";
elseif @input = "desc" then
    SET @sort = " ORDER BY movewhmaster.DocNo DESC ";
else
    SET @sort ="";
end if;
#select _start,_stop,_sort;
if( _start <= 0  and _stop <= 0 ) THEN
	set @limits = "";
ELSE 
  set @limits =  CONCAT(' LIMIT ',_start,',',_stop);
end if;



SET @query = CONCAT(" SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I' ",IFNULL(@sort,' '), IFNULL(@limits,' ') );
# select @query;
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTgetMasterbyCitiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTgetMasterbyCitiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTgetMasterbyCitiria`(`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30))
BEGIN
					/*********
						Ext: call spARgetMasterbyCitiria('mv2','1','2','PR00001','2013-01-01','2013-05-31');
						`_docNo` varchar(30),`_frmwh` varchar(30),`_towh` varchar(30),`_emp` varchar(30),`_startDate` varchar(30),`_endDate` varchar(30)
					**********/
	
						IF _docNo = '' or ISNULL(_docNo) THEN SET @docno = '';  ELSE SET @docno = CONCAT("	and DocNo LIKE '%",_docNo,"%'"); END IF;
				
					-- 	and frmWH = '2'
					IF _frmwh = '' or ISNULL(_frmwh) THEN set @frmwh = '';  ELSE set @frmwh = CONCAT('	and frmWH = ',QUOTE(_frmwh)); END IF;
		
					-- 	and toWH = '1'
					IF _towh = '' or ISNULL(_towh) THEN set @towh = '';  ELSE set @towh = CONCAT('	and toWH = ',QUOTE(_towh)); END IF;

					-- 	and Employee = 'PR00001'
					IF _emp = '' or ISNULL(_emp) THEN  set @emp = '';  ELSE set @emp = concat('	and Employee = ',QUOTE(_emp)); END IF;

					IF (_startDate = '' or ISNULL(_startDate) ) and ( _endDate = '' or ISNULL(_endDate)) THEN
							 set @docdate = '';
					ELSEIF !ISNULL(_startDate) and  ( ISNULL(_endDate) or _endDate = '' ) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_startDate));
					ELSEIF (_startDate = '' or ISNULL(_startDate)) and  !ISNULL(_endDate) THEN
								-- 	and DocDate = '2013-05-31'
							 set @docdate = CONCAT('	and DocDate = ',QUOTE(_endDate));
					ELSE
								-- 	and DocDate BETWEEN '2013-06-01' and '2013-06-31';
							 set @docdate = CONCAT(' and DocDate BETWEEN ',QUOTE(_startDate),' and ',QUOTE(_endDate));
					END IF;

					SET @sql = CONCAT("SELECT movewhmaster.DocNo,CONCAT( movewhmaster.frmWH, '-', fwh.warehouseName ) AS frmWH,
											CONCAT( movewhmaster.toWH, '-', twh.warehouseName ) AS toWH,
											movewhmaster.DocDate,	movewhmaster.Notes,CONCAT( movewhmaster.Employee, '-', 
											emp.Personname ) AS Employee,movewhmaster.cBy, movewhmaster.cDate, movewhmaster.mBy, 					
											movewhmaster.mDate, 					
											movewhmaster.`status` 					
											FROM movewhmaster 					
											INNER JOIN warehouse AS fwh ON fwh.warehouseID = movewhmaster.frmWH 					
											INNER JOIN warehouse AS twh ON twh.warehouseID = movewhmaster.toWH 					
											LEFT JOIN employee AS emp ON emp.Personcode = movewhmaster.Employee WHERE STATUS != 'I'",
											@docno,@frmwh,@towh,@emp,@docdate); 
					-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTgetMasterDetailById
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTgetMasterDetailById`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTgetMasterDetailById`(_docid varchar(30))
BEGIN
  /*
	  Example: call spARgetMasterDetailById('MV000001');
		master  movewhmaster 
		detail  movewhdetail
		pk = fk = DocNo
	*/
	DECLARE _docno VARCHAR(30) DEFAULT '';
	IF ISNULL(_docid) THEN 
			select ms.DocNo INTO _docno from movewhmaster ms where 1=1 and status !='I' order by DocNo DESC limit 1;
			IF !ISNULL(_docno) THEN
					select * from movewhmaster where 1=1 and status !='I' order by DocNo Desc limit 1;
					select * from movewhdetail where 1=1 and DocNo= _docno; #Detail Multi Records\
			END IF;
  ELSE
		select * from movewhmaster where 1=1  and status !='I'  and DocNo= _docid;  #Master 1 Record
		select * from movewhdetail where 1=1 and DocNo= _docid; #Detail Multi Records
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTListProductForSale
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTListProductForSale`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTListProductForSale`(_userid varchar(30),_min INT,_wh varchar(30))
BEGIN
				/*******
							Ext: call spARListProductForSale('s',1,'2');
									 @para string  username
									 @para int  stmin 0 = > 0   and 1 = ALL
									 @para string wh  warehouse = '1'
				*******/

				IF _userid = '' or ISNULL(_userid) THEN  call getErrMsg(60003); END IF;
				IF _wh = '' or ISNULL(_wh ) THEN  SET @wh = '';  ELSE  SET @wh = CONCAT(" and WareHouse = '",_wh,"'"); END IF;
				IF _min = 0 THEN SET @min = CONCAT(" and  ISNULL(stMins) "); ELSE SET  @min = ''; END IF;
				-- select @wh,@min;

				set @sql = CONCAT(" SELECT
						stcard.Stcode,
						stcard.WareHouse,
						sum(stcard.Instock) - sum(stcard.OutStock) AS stock,
						stmas.barcode,
						stmas.desc1,
						stmas.desc2,
						stmas.width,
						stmas.height,
						stmas.depth,
						stmas.weigth,
						stmas.Units,
						stmas.pdType,
						stmas.maxs,
						stmas.mins,
						stmas.pdGroup,
						stmas.price,
						stmas.price1,
						stmas.price2,
						stmas.price3,
						stmas.price4,
						stmas.price5,
						stmas.cuttype,
						stmas.costtype,
						stmas.expiredate,
						stmas.model,
						stmas.classcode,
						stmas.size,
						stmas.stdcost,
						stmas.`status`,
						stmas.pictus,
						stmas.notes,
						stmas.stMins,
						stmas.sNtype,
						stmas.cBy,
						stmas.mBy,
						stmas.cDate,
						stmas.mDate
						FROM
						stcard
						INNER JOIN stmas ON stmas.stcode = stcard.Stcode
						WHERE 1=1
						and stmas.`status` = 'A' ",
						@min,@wh,"
						GROUP BY stcard.Stcode,stcard.WareHouse
						");
						-- SELECT @sql;
					prepare query from @sql;
					execute query;
					deallocate prepare query;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTupdateDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTupdateDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTupdateDetail`(_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30))
    MODIFIES SQL DATA
BEGIN
	/*****
				_userid varchar(30) , _docNo varchar(30), _No INT, _item varchar(30), _desc varchar(80) ,_qty  INT, _units  varchar(30)
				Ext: call spARupdateDetail('s','MV0000039',4,'111111111','desc',2,'unit');
	******/


	SET @TF = fcControlUpdateTable(_userid,_docNo);
	-- select @TF;
  IF @TF = 1 THEN 
	   START TRANSACTION;
			
			select count(*) into @rownum from movewhdetail md WHERE md.DocNo = _docNo and md.`No` = _No;
			IF @rownum > 0 THEN

			set @sql = concat('UPDATE movewhdetail md  SET  md.item = ',QUOTE(_item),',  md.description = ',QUOTE(_desc),',  md.qty = ',_qty,',  md.units = ',QUOTE(_units),' WHERE md.DocNo = ',QUOTE(_docNo),' and md.`No` =',_No);
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			
		  
		 	-- SELECT * from movewhdetail  where `No` = _No and DocNo = _docNo;

			-- UPDATE from stcard 

			-- UPDATE from GL

			-- UPDATE from etc
				
			-- Insert loging
			call sp_InsertLog('EDIT',_userid,@sql,@rownum,'OUT');
		 COMMIT;
			SELECT @rownum;
		 ELSE 
			 call getErrMsg(60005);
		 END IF; 

  ELSE 
		-- Error message;
		call getErrMsg(60001); -- Can't edit / update /delete
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTupdateMaster
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTupdateMaster`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTupdateMaster`(_userid varchar(30),_docNo varchar(30),_frmWH  varchar(30),_toWH varchar(30),_docDate datetime,_notes text,_emp  varchar(30),_status char(1))
BEGIN
	/*****
		Ext: call spARupdateMaster(_userid,_docNo_frmWH,_toWH,_docDate,_notes,_emp,_status)
				 call spARupdateMaster('s','MV0000028','1','2','2013-05-31','notes','PR00001','A');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT('UPDATE movewhmaster SET frmWH = ',QUOTE(_frmWH),' ,toWH = ',QUOTE(_toWH),', DocDate = ',QUOTE(_docDate),' ,Notes = ',QUOTE(_notes),' ,Employee = ',QUOTE(_emp),',`status` = ',QUOTE(_status),', mBy = ',QUOTE(_userid),' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'OUT');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spOUTvoidMasterDetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `spOUTvoidMasterDetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spOUTvoidMasterDetail`(_userid varchar(30),_docNo varchar(30))
BEGIN
			/*****
		Ext: call spAPvoidMasterDetail(_userid,_docNo)
				 call spAPvoidMasterDetail('s','MV0000028');
	*******/
	
	set @TO = fcControlUpdateTable(_userid,_docNo);
  IF @To = 1 THEN
				select count(*) INTO @rownum from movewhmaster WHERE DocNo = _docNo;
				IF @rownum > 0 THEN
						START TRANSACTION;
						-- update movewhdetail 
						SET @sql = CONCAT("UPDATE movewhmaster SET `status` = 'C'",' WHERE DocNo = ',QUOTE(_docNo));
						prepare query from @sql;
						execute query;
						deallocate prepare query;

						-- insert Loging ----
						call sp_InsertLog('EDIT',_userid,@sql,@rownum,'OUT');
					COMMIT;
					select @rownum;
				ELSE
					call getErrMsg(60005);
				END IF;
	ELSE
		call getErrMsg(60001);
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDall
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDall`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDall`()
BEGIN
			/****
				call spPDall;
			***/
			SELECT stmas.stcode, stmas.barcode, stmas.desc1, stmas.desc2, stmas.width, stmas.height, stmas.depth, stmas.weigth, CONCAT( stmas.Units, '-', it3.SHORTNAM ) AS units, CONCAT( stmas.pdType, '-', it2.SHORTNAM ) AS pdType, stmas.maxs, stmas.mins, CONCAT( stmas.pdGroup, '-', it1.SHORTNAM ) AS pdGroup, stmas.price, stmas.price1, stmas.price2, stmas.price3, stmas.price4, stmas.price5, stmas.cuttype, stmas.costtype, stmas.expiredate, stmas.model, stmas.classcode, stmas.size, stmas.stdcost, CONCAT( stmas.`status`, '-', it4.SHORTNAM ) AS STATUS, stmas.pictus, stmas.notes, stmas.stMins, stmas.sNtype, stmas.cBy, stmas.mBy, stmas.cDate, stmas.mDate FROM stmas LEFT JOIN istab AS it1 ON stmas.pdGroup = it1.TYPCOD AND it1.TABTYP = '22' LEFT JOIN istab AS it2 ON stmas.pdType = it2.TYPCOD AND it2.TABTYP = '23' LEFT JOIN istab AS it3 ON stmas.Units = it3.TYPCOD AND it3.TABTYP = '20' LEFT JOIN istab AS it4 ON stmas.`status` = it4.TYPCOD AND it4.TABTYP = '99';
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDallPage
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDallPage`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDallPage`(_start int,_stop int)
BEGIN
		/******

			call spPDallPage(1,2);
		******/

		-- varlidate
	IF _start < 0 or _stop < 0 THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
			SELECT
stmas.stcode,
stmas.barcode,
stmas.desc1,
stmas.desc2,
stmas.width,
stmas.height,
stmas.depth,
stmas.weigth,
CONCAT( stmas.Units, '-', it3.SHORTNAM ) AS units,
CONCAT( stmas.pdType, '-', it2.SHORTNAM ) AS pdType,
stmas.maxs,
stmas.mins,
CONCAT( stmas.pdGroup, '-', it1.SHORTNAM ) AS pdGroup,
stmas.price,
stmas.price1,
stmas.price2,
stmas.price3,
stmas.price4,
stmas.price5,
stmas.cuttype,
stmas.costtype,
stmas.expiredate,
stmas.model,
stmas.classcode,
stmas.size,
stmas.stdcost,
CONCAT( stmas.`status`, '-', it4.SHORTNAM ) AS status,
stmas.pictus,
stmas.notes,
stmas.stMins,
stmas.sNtype,
stmas.cBy,
stmas.mBy,
stmas.cDate,
stmas.mDate
FROM stmas LEFT JOIN istab AS it1 ON stmas.pdGroup = it1.TYPCOD AND it1.TABTYP = '22' LEFT JOIN istab AS it2 ON stmas.pdType = it2.TYPCOD AND it2.TABTYP = '23' LEFT JOIN istab AS it3 ON stmas.Units = it3.TYPCOD AND it3.TABTYP = '20' LEFT JOIN istab AS it4 ON stmas.`status` = it4.TYPCOD AND it4.TABTYP = '99'
LIMIT _start , _stop ;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDbyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDbyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDbyID`(_stcode varchar(30))
BEGIN
	/******
		call spPDbyID('100215');
	*******/
	-- varlidate
	IF _stcode = '' or ISNULL(_stcode) THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
			select * from stmas WHERE stcode = _stcode;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDdelete
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDdelete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDdelete`(_userid varchar(30),_stcode varchar(30))
BEGIN
		/******
				call spPDdelete('s','11111');
		*******/
/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
	*/
	-- validate 
	IF _stcode = '' or ISNULL(_stcode) THEN
			call getErrMsg(60007); -- 	stcode is not null
	ELSE 
			-- check SESSION
			SET @TF = fcCtrlUpdateTableSingle(_userid,_stcode,'stmas');
			IF @TF = 1 THEN 
					-- check @rownum
					select count(*) INTO @rownum from stmas WHERE stcode = _stcode ;
					IF @rownum > 0 THEN
							START TRANSACTION;
							-- delete TABLE
							set @sql = CONCAT("delete from stmas where stcode = ",QUOTE(_stcode));
							-- SELECT @sql;
							prepare query from @sql;
							execute query;
							deallocate prepare query;
							-- delete stcard
					
							-- insert loggin
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'PD');
							COMMIT;
					ELSE
						call getErrMsg(60006); -- 	No Row for Delete
					END IF; -- end check @rownum
			ELSE
				call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.
			END IF; -- end check session
	END IF; -- end validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDinsert
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDinsert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDinsert`(_userid varchar(30),`_stcode`  varchar(30),`_barcode`  varchar(30),`_desc1`  varchar(255),`_desc2`  varchar(255),`_width`  decimal(18,2),`_height`  decimal(18,2),`_depth`  decimal(18,2),`_weigth`  decimal(18,2),`_units`  varchar(30),`_pdtype`  varchar(4),`_maxs`  int(11),`_mins`  int(11),`_pdgroup`  varchar(4),`_price`  decimal(18,2),`_price1`  decimal(18,2),`_price2`  decimal(18,2),`_price3`  decimal(18,2),`_price4`  decimal(18,2),`_price5`  decimal(18,2),`_cuttype`  int(11),`_costtype`  int(11),`_expiredate`  varchar(11),`_model`  varchar(60),`_classcode`  int(11),`_size`  varchar(60),`_stdcost`  double(18,2),`_status`  char(1),`_pictus`  text,`_notes`  text,`_stmins`  int(11),`_sntype`  int(11))
BEGIN
		/********
			`_stcode`  varchar(30),`_barcode`  varchar(30),`_desc1`  varchar(255),`_desc2`  varchar(255),`_width`  decimal(18,2),`_height`  decimal(18,2),`_depth`  decimal(18,2),`_weigth`  decimal(18,2),`_units`  varchar(30),`_pdtype`  varchar(4),`_maxs`  int(11),`_mins`  int(11),`_pdgroup`  varchar(4),`_price`  decimal(18,2),`_price1`  decimal(18,2),`_price2`  decimal(18,2),`_price3`  decimal(18,2),`_price4`  decimal(18,2),`_price5`  decimal(18,2),`_cuttype`  int(11),`_costtype`  int(11),`_expiredate`  varchar(11),`_model`  varchar(60),`_classcode`  int(11),`_size`  varchar(60),`_stdcost`  double(18,2),`_status`  char(1),`_pictus`  blob,`_notes`  text,`_stmins`  int(11),`_sntype`  int(11),`_cby`  varchar(30),`_mby`  varchar(30)
		call spPDinsert('s','111111113','111111113','desc1','desc2',
								100,100,100,10,'02',
								'01',10,2,'01',100,
								105,110,115,120,125,
								1,1,'2013-05-31','01','01',
								'1',80,'A','test','notes',1,1); 
		SELECT * FROM systemlog ORDER BY log_id DESC;
		SELECT * FROM stmas;
		**************/
/*
		DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
		BEGIN
		 	ROLLBACK;
		 call getErrMsg(2300);
		END;
*/
		-- validate
		IF `_stcode`= '' or ISNULL(`_stcode`)  THEN
				call getErrMsg(60005);
		ELSE
					-- check session
					SET @TF = fcCtrlUpdateTableSingle(_userid,_stcode,'stmas');
					
					IF @TF > 0 THEN 
								START TRANSACTION;
											SET @sql = CONCAT("INSERT INTO stmas (`stcode`,`barcode`,`desc1`,`desc2`,`width`,`height`,`depth`,`weigth`,`Units`,`pdType`,`maxs`,`mins`,`pdGroup`,`price`,`price1`,`price2`,`price3`,`price4`,`price5`,`cuttype`,`costtype`,`expiredate`,`model`,`classcode`,`size`,`stdcost`,`status`,`pictus`,`notes`,`stMins`,`sNtype`,`cBy`,`mBy`) VALUES ( ",
											QUOTE(`_stcode`),"  ,",QUOTE(`_barcode`),"  ,",QUOTE(`_desc1`),"  ,",QUOTE(`_desc2`),"  ,",QUOTE(`_width`),"  ,",QUOTE(`_height`),"  ,",QUOTE(`_depth`),"  ,",QUOTE(`_weigth`),"  ,",QUOTE(`_units`)," ,",QUOTE(`_pdtype`),"  ,",QUOTE(`_maxs`),"  ,",QUOTE(`_mins`),"  ,",QUOTE(`_pdgroup`),"  ,",QUOTE(`_price`),"  ,",
											QUOTE(`_price1`),"  ,",QUOTE(`_price2`),"  ,",QUOTE(`_price3`),"  ,",QUOTE(`_price4`),"  ,",QUOTE(`_price5`),"  ,",QUOTE(`_cuttype`),"  ,",QUOTE(`_costtype`),"  ,",QUOTE(`_expiredate`),"  ,",QUOTE(`_model`),"  ,",QUOTE(`_classcode`),"  ,",QUOTE(`_size`),"  ,",QUOTE(`_stdcost`),"  ,",
											QUOTE(`_status`),"  ,",QUOTE(`_pictus`),"  ,",QUOTE(`_notes`),"  ,",QUOTE(`_stmins`),"  ,",QUOTE(`_sntype`),"  ,",QUOTE(_userid),"  ,",QUOTE(_userid),")");
											prepare query from @sql;
											execute query;
											deallocate prepare query;
								
								-- Insert Loggin 
								call sp_InsertLog('NEW',_userid,@sql,`_stcode`,'PD');
								COMMIT; 
								SELECT  `_stcode`  as  `stcode`; 
						ELSE
								call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.		2013-06-18 13:57:04		2013-06-19 12:02:33
						END IF; -- check sission  
		END IF; -- validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDSearchbyCritiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDSearchbyCritiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDSearchbyCritiria`()
BEGIN
	SELECT stmas.stcode, stmas.barcode, stmas.desc1, stmas.desc2, stmas.width, stmas.height, stmas.depth, stmas.weigth, CONCAT( stmas.Units, '-', it3.SHORTNAM ) AS units, CONCAT( stmas.pdType, '-', it2.SHORTNAM ) AS pdType, stmas.maxs, stmas.mins, CONCAT( stmas.pdGroup, '-', it1.SHORTNAM ) AS pdGroup, stmas.price, stmas.price1, stmas.price2, stmas.price3, stmas.price4, stmas.price5, stmas.cuttype, stmas.costtype, stmas.expiredate, stmas.model, stmas.classcode, stmas.size, stmas.stdcost, CONCAT( stmas.`status`, '-', it4.SHORTNAM ) AS STATUS, stmas.pictus, stmas.notes, stmas.stMins, stmas.sNtype, stmas.cBy, stmas.mBy, stmas.cDate, stmas.mDate FROM stmas LEFT JOIN istab AS it1 ON stmas.pdGroup = it1.TYPCOD AND it1.TABTYP = '22' LEFT JOIN istab AS it2 ON stmas.pdType = it2.TYPCOD AND it2.TABTYP = '23' LEFT JOIN istab AS it3 ON stmas.Units = it3.TYPCOD AND it3.TABTYP = '20' LEFT JOIN istab AS it4 ON stmas.`status` = it4.TYPCOD AND it4.TABTYP = '99';

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spPDupdate
-- ----------------------------
DROP PROCEDURE IF EXISTS `spPDupdate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spPDupdate`(_userid varchar(30),`_stcode`  varchar(30),`_barcode`  varchar(30),`_desc1`  varchar(255),`_desc2`  varchar(255),`_width`  decimal(18,2),`_height`  decimal(18,2),`_depth`  decimal(18,2),`_weigth`  decimal(18,2),`_units`  varchar(30),`_pdtype`  varchar(4),`_maxs`  int(11),`_mins`  int(11),`_pdgroup`  varchar(4),`_price`  decimal(18,2),`_price1`  decimal(18,2),`_price2`  decimal(18,2),`_price3`  decimal(18,2),`_price4`  decimal(18,2),`_price5`  decimal(18,2),`_cuttype`  int(11),`_costtype`  int(11),`_expiredate`  varchar(11),`_model`  varchar(60),`_classcode`  int(11),`_size`  varchar(60),`_stdcost`  double(18,2),`_status`  char(1),`_pictus`  blob,`_notes`  text,`_stmins`  int(11),`_sntype`  int(11))
    MODIFIES SQL DATA
BEGIN
	/*******
			_userid,`_stcode`,`_barcode`,`_desc1`,`_desc2`,`_width`,`_height`,`_depth`,`_weigth`,`_units`,`_pdtype`,`_maxs`,`_mins`,`_pdgroup`,`_price`,`_price1`,`_price2`,`_price3`,`_price4`,`_price5`,`_cuttype`,
		 `_costtype`,`_expiredate`,`_model`,`_classcode`,`_size`,`_stdcost`,`_status`,`_pictus`,`_notes`,`_stmins`,`_sntype`
			call spPDupdate('s','111111111','111111111','desc1','desc2','100','100','100','10','02','01','10','2','01','100','105','110','115','120','125','1','1','2013-05-31','01','01','1','80','A','PICTURE','notes','1','1');
	**********/

	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;
	-- validate
	IF _stcode= '' or ISNULL(_stcode) THEN 
		call getErrMsg(60003);  -- 60003	Want Parametor "userid"
	ELSE
			-- check session ----
			SET @TF = fcCtrlUpdateTableSingle(_userid,_stcode,'stmas');
			IF @TF > 0 THEN
					-- check @rownum
					select count(*) INTO @rownum from stmas WHERE  `stcode` = _stcode;
					IF @rownum > 0 THEN
						START TRANSACTION;
						set @sql = CONCAT("UPDATE stmas SET `barcode` = ",QUOTE(`_barcode`),"  , `desc1` = ",QUOTE(`_desc1`),"  , `desc2` = ",QUOTE(`_desc2`),"  , `width` = ",QUOTE(`_width`),
															"  , `height` = ",QUOTE(`_height`),"  , `depth` = ",QUOTE(`_depth`),"  , `weigth` = ",QUOTE(`_weigth`),"  , `Units` = ",QUOTE(`_Units`),"  , `pdType` = ",QUOTE(`_pdType`),
															"  , `maxs` = ",QUOTE(`_maxs`),"  , `mins` = ",QUOTE(`_mins`),"  , `pdGroup` = ",QUOTE(`_pdGroup`),"  , `price` = ",QUOTE(`_price`),"  , `price1` = ",QUOTE(`_price1`),
															"  , `price2` = ",QUOTE(`_price2`),"  , `price3` = ",QUOTE(`_price3`),"  , `price4` = ",QUOTE(`_price4`),"  , `price5` = ",QUOTE(`_price5`),"  , `cuttype` = ",QUOTE(`_cuttype`),
															"  , `costtype` = ",QUOTE(`_costtype`),"  , `expiredate` = ",QUOTE(`_expiredate`),"  , `model` = ",QUOTE(`_model`),"  , `classcode` = ",QUOTE(`_classcode`),"  , `size` = ",QUOTE(`_size`),
															"  , `stdcost` = ",QUOTE(`_stdcost`),"  , `status` = ",QUOTE(`_status`),"  , `pictus` = ",QUOTE(`_pictus`),"  , `notes` = ",QUOTE(`_notes`),"  , `stMins` = ",QUOTE(`_stMins`),
															"  , `sNtype` = ",QUOTE(`_sNtype`),"  , `mBy` = ",QUOTE(`_userid`)," WHERE 1=1  and `stcode` = ",QUOTE(_stcode));
						-- SELECT @sql;
						prepare query from @sql;
						execute query;
						deallocate prepare query;
						COMMIT;
						SET @success = fcCompleteUpdateTable(_userid);
						SELECT  @rownum;
						-- Insert Loggin 
					 call sp_InsertLog('EDIT',_userid,@sql,@rownum,'PD');
					ELSE 
						call getErrMsg(60005);  -- 60005	No Row for Update
					END IF; -- chk @rownum 
		ELSE	
					call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.		2013-06-18 13:57:04		2013-06-19 12:02:33
		END IF; -- check session
	END IF; -- validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSuperAuth
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSuperAuth`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSuperAuth`(_userid varchar(30),_pass varchar(30),_mod varchar(30),_func varchar(30))
BEGIN
     
IF _userid = '' or ISNULL(_userid) or _pass = '' or ISNULL(_pass) or  _mod = '' or ISNULL(_mod) or _func = '' or ISNULL(_func) THEN
		call  getErrMsg(60007);	-- stcode is not null
ELSE
			
			set @sql = CONCAT("SELECT count(*) into @auth FROM `user` AS u LEFT JOIN tbauthoriz AS a ON u.roll = a.role WHERE 1 = 1 AND u.`status` = 'A' AND u.userid =  ",QUOTE(_userid)," AND u. PASSWORD = ",QUOTE(_pass),"  AND a.modulname =  ",QUOTE(_mod),"  AND a.functionname = ",QUOTE(_func));
			-- select @sql;
			prepare query from @sql;
			execute query;
			deallocate prepare query;
			call sp_InsertLog('AUTH',_userid,@sql,@auth,_mod);
			select @auth as id;

END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSystemGetAllfromtb
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSystemGetAllfromtb`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSystemGetAllfromtb`(_tbname varchar(80))
BEGIN
		/*******
			call spSystemSingleCount('tbname');
		********/
		set @sql = concat("select * from ",_tbname);
		prepare query from @sql;
		execute query;
		deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSystemGetAllfromtbPaging
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSystemGetAllfromtbPaging`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSystemGetAllfromtbPaging`(_tbname varchar(80),_start int,_stop int)
BEGIN
					IF ( _start < 0 or _stop < 0 ) and (_tbname = '' or ISNULL(_tbname) ) THEN
							call  getErrMsg(60007);	-- stcode is not null
					ELSE

						set @sql = concat("select * from ",_tbname," LIMIT ",_start," , ",_stop);
						prepare query from @sql;
						execute query;
						deallocate prepare query;
							
				  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSystemLogin
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSystemLogin`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSystemLogin`(_userid varchar(30),_pass varchar(30))
BEGIN
	
SELECT `user`.userid,  PASSWORD(password) as password, `user`.`status`, `user`.wh, `user`.roll, `user`.cDate, `user`.mDate, `user`.cBy, `user`.mBy, 
warehouse.warehouseSN, warehouse.warehouseName, NOW() as server_date, now() as workdate, '' 
as comment  FROM `user` INNER JOIN warehouse ON `user`.wh = warehouse.warehouseID  where 1=1 
and userid = _userid  and password = _pass ;

select roll into @roll from user u where u.userid = _userid and u.`password` = _pass and u.`status` ='A';
select * from tbauthoriz  WHERE role = @roll;

call sp_InsertLog('LOGIN',_userid,'LOGIN',@roll,'SYS');
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSystemLogout
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSystemLogout`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSystemLogout`(_userid varchar(30))
BEGIN
	-- INSERT INTO userlogs (userid,times,status,comments,createddate ) VALUES ( :userid,:times,:stat,:comment,:createddate)
	call sp_InsertLog('LOGOUT',_userid,'LOGOUT',1,'SYS');
	select 1 as id;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spSystemSingleCount
-- ----------------------------
DROP PROCEDURE IF EXISTS `spSystemSingleCount`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spSystemSingleCount`(_tbname varchar(80))
BEGIN
		/*******
			call spSystemSingleCount('tbname');
		********/
		set @sql = concat("select count(*) into @count from ",_tbname);
		prepare query from @sql;
		execute query;
		deallocate prepare query;
		select @count as Count ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingleall
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingleall`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingleall`()
BEGIN
			SELECT * from tbsingle;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingleallPage
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingleallPage`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingleallPage`(_start int,_stop int)
BEGIN
					IF _start < 0 or _stop < 0 THEN
							call  getErrMsg(60007);	-- stcode is not null
					ELSE
							select * from tbsingle LIMIT _start , _stop ;
				  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSinglebyID
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSinglebyID`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSinglebyID`(_userid varchar(30), _idx int)
BEGIN
	IF _idx = 0 THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
					select * from tbsingle WHERE idx = _idx;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSinglebyIDforUpdate
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSinglebyIDforUpdate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSinglebyIDforUpdate`(_userid varchar(30), _idx int)
BEGIN
	IF _idx = 0 THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
-- 	SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','EDIT');	
-- 		IF @auth = 1 THEN
			SET @TF = fcCtrlUpdateTableSingle(_userid,_idx,'tbSingle');
			IF @TF > 0 THEN
					select * from tbsingle WHERE idx = _idx;
						ELSE	
						call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.		2013-06-18 13:57:04		2013-06-19 12:02:33
			END IF; -- check session
-- 	  ELSE
-- 				SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz',   MYSQL_ERRNO = '40001';
-- 		END IF;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingledelete
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingledelete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingledelete`(_userid varchar(30),_idx int)
BEGIN
	IF _idx = 0 THEN
			call getErrMsg(60007); -- 	stcode is not null
	ELSE 
	SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','DEL');	
	IF @auth = 1 THEN
			-- check SESSION
			SET @TF = fcCtrlUpdateTableSingle(_userid,_idx,'tbSingle');
			IF @TF = 1 THEN 
					-- check @rownum
					select count(*) INTO @rownum from tbsingle WHERE idx = _idx;
					IF @rownum > 0 THEN
							START TRANSACTION;
							-- delete TABLE
							set @sql = CONCAT("delete from tbsingle where idx = ",_idx);
							prepare query from @sql;
							execute query;
							deallocate prepare query;
							call sp_InsertLog('DEL',_userid,@sql,@rownum,'TEST');
							COMMIT;
							SET @CP = fcCompleteUpdateTable(_userid);
							select _idx as id;
					ELSE
						call getErrMsg(60006); -- 	No Row for Delete
					END IF; -- end check @rownum
			ELSE
				call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.
			END IF; -- end check session
	ELSE
		 SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz',   MYSQL_ERRNO = '40001';
	END IF;
	END IF; -- end validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sptbSingleinsert
-- ----------------------------
DROP PROCEDURE IF EXISTS `sptbSingleinsert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sptbSingleinsert`(_userid varchar(30),_desc varchar(80))
BEGIN
		DECLARE idx INT DEFAULT -1;
		-- validate
		IF _desc = '' or ISNULL(_desc)  THEN
				call getErrMsg(60005);
		ELSE
				SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','NEW');	
				IF @auth = 1 THEN
						-- 	select @auth;
						START TRANSACTION;
									SET @sql = CONCAT("insert into tbsingle(`desc`) VALUES(",QUOTE(_desc),");");
									prepare query from @sql;
									execute query;
									deallocate prepare query;
									select LAST_INSERT_ID() into idx;
									SET @TF = fcCtrlUpdateTableSingle(_userid,idx,'tbSingle');
								-- Insert Loggin 
								call sp_InsertLog('NEW',_userid,@sql,idx,'TEST');
								COMMIT; 
								call spTbSinglebyID(_userid,idx);
								-- select idx as id;	
		 	 	ELSE
		 				SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz1',   MYSQL_ERRNO = '40001';
		 		END IF;
		END IF; -- validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbsingleinsert1
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbsingleinsert1`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbsingleinsert1`(_userid varchar(30),_idx int(11),_desc varchar(80),_createDate timestamp)
BEGIN 
 	DECLARE idx INT DEFAULT -1; 
 	-- validate 
 IF _desc = '' or ISNULL(_desc)  THEN 
 	call getErrMsg(60005); 
 	ELSE 
 	SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','NEW'); 
 	IF @auth = 1 THEN 
 	-- 	select @auth; 
 	START TRANSACTION; 
 	SET @sql = CONCAT("insert into Tbsingle(`idx` ,`desc` ,`createDate` ) VALUES(",`_idx`,",",QUOTE(`_desc`),",",DATE_FORMAT(`_createDate`,"%Y-%m-%d"),")"); 
	select @sql;
 	COMMIT; 
 	-- select idx as id; 
 	ELSE 
 	SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz1',   MYSQL_ERRNO = '40001'; 
 	END IF; 
 	END IF; -- validate 
 	END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingleInsertAuth
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingleInsertAuth`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingleInsertAuth`(_userid varchar(30))
BEGIN
	IF _userid  = '' OR ISNULL(_userid) THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
	SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','NEW');	
		IF @auth = 1 THEN
				select @auth as id;
	  ELSE
				SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz',   MYSQL_ERRNO = '40001';
		END IF;
 END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingleSearchbyCritiria
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingleSearchbyCritiria`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingleSearchbyCritiria`(_desc varchar(40))
BEGIN
			SET @sql = CONCAT("select * from tbsingle WHERE `desc` like '%",_desc,"%';");
					prepare query from @sql;
					execute query;
					deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTbSingleupdate
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTbSingleupdate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTbSingleupdate`(_userid varchar(30), _idx  INT,_desc  varchar(80))
    MODIFIES SQL DATA
BEGIN
	IF _desc= '' or ISNULL(_desc) THEN 
		call getErrMsg(60003);  -- 60003	Want Parametor "userid"
	ELSE
		SET @auth = spAuthroize_usrid_module_func(_userid,'TEST','EDIT');	
		IF @auth = 1 THEN
			SET @TF = fcCtrlUpdateTableSingle(_userid,_idx,'tbSingle');
			IF @TF > 0 THEN
					-- check @rownum
					select count(*) INTO @rownum from tbSingle WHERE  idx = _idx;
					IF @rownum > 0 THEN
						START TRANSACTION;
						set @sql = CONCAT("update tbsingle set tbsingle.`desc` = ",QUOTE(_desc)," WHERE idx = ",_idx,";");
						-- SELECT @sql;
						prepare query from @sql;
						execute query;
						deallocate prepare query;
						COMMIT;
						SET @success = fcCompleteUpdateTable(_userid);
						SELECT  @rownum;
						-- Insert Loggin 
					 call sp_InsertLog('EDIT',_userid,@sql,@rownum,'TEST');
					ELSE 
						call getErrMsg(60005);  -- 60005	No Row for Update
					END IF; -- chk @rownum 
			ELSE	
						call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.		2013-06-18 13:57:04		2013-06-19 12:02:33
			END IF; -- check session
	  ELSE
				SIGNAL SQLSTATE  'ERR0R' SET  MESSAGE_TEXT = 'You Not Authoriz',   MYSQL_ERRNO = '40001';
		END IF;
	END IF; -- validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spTestInsert
-- ----------------------------
DROP PROCEDURE IF EXISTS `spTestInsert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spTestInsert`(IN _i int,IN _j int,IN _v INT)
BEGIN
-- DECLARE _msg VARCHAR(256);
/* DECLARE EXIT HANDLER FOR SQLSTATE '23000' BEGIN SELECT 'error 23000'; END;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
    BEGIN
       ROLLBACK;		
  	   call getErrMsg(2300);
    END;  */
--  จะมีตัวอักจับ Error หรือไม่ ก็ได้ เพราะ ถ้า Error จะ ROLLBACK อัฒโนมัติให้อยู่แล้ว พร้อมแสดง Error ออกมา 




start TRANSACTION;
INSERT into t(i,j,v) VALUES(_i,_j,_v);
COMMIT;
SELECT _i as id;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for spUpdate
-- ----------------------------
DROP PROCEDURE IF EXISTS `spUpdate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `spUpdate`(_userid varchar(30))
BEGIN
	/**********
	  Ext: call spPD();
	**********/

	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
	BEGIN
		ROLLBACK;
		call getErrMsg(2300);
	END;

	-- validate ----
	IF _var1 = '' or ISNULL(_var1) THEN 
		-- defind error from table errormsg
		call getErrMsg(2300);
	ELSE
	
			-- get session ----
			-- fcCtrlUpdateTableSingle(_userid,pk,tbname);
			-- SET @TF = fcCtrlUpdateTableSingle(_userid,docno,tbname);
			IF @TF > 0 THEN
					--   check row count ----
					 select count(*) INTO @rownum from tbname WHERE  `var1` = _var1;
					 IF @rownum > 0 THEN
						START TRANSACTION;
						set @sql = CONCAT("select xxx");
						-- SELECT @sql;
						prepare query from @sql;
						execute query;
						deallocate prepare query;
						COMMIT;
						SELECT  @rownum;
						
						-- Insert Loggin 
						  call sp_InsertLog('NEW',_userid,@sql,@rownum,'PD');
						
					ELSE 
						call getErrMsg(60005);
					END IF; -- end of @rownum
		END IF; -- end of check session
	END IF; -- end of validate
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_Create_stmas
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_Create_stmas`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Create_stmas`( 
`_stcode`  varchar(30),
`_barcode`  varchar(30),
`_desc1`  varchar(255),
`_desc2`  varchar(255),
`_width`  decimal(18,2),
`_height`  decimal(18,2),
`_depth`  decimal(18,2),
`_weigth`  decimal(18,2),
`_units`  varchar(30),
`_pdtype`  varchar(4),
`_maxs`  int(11),
`_mins`  int(11),
`_pdgroup`  varchar(4),
`_price`  decimal(18,2),
`_price1`  decimal(18,2),
`_price2`  decimal(18,2),
`_price3`  decimal(18,2),
`_price4`  decimal(18,2),
`_price5`  decimal(18,2),
`_cuttype`  int(11),
`_costtype`  int(11),
`_expiredate`  varchar(11),
`_model`  varchar(60),
`_classcode`  int(11),
`_size`  varchar(60),
`_stdcost`  double(18,2),
`_status`  char(1),
`_pictus`  blob,
`_notes`  text,
`_stmins`  int(11),
`_sntype`  int(11),
`_cby`  varchar(30),
`_mby`  varchar(30),
`_cdate`  timestamp,
`_mdate`  timestamp
)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
BEGIN
	ROLLBACK;
	call getErrMsg(2300);
END;
START TRANSACTION;
	INSERT INTO stmas (stcode,barcode,desc1,desc2,width,height,depth,weigth,Units,pdType,maxs,mins,pdGroup,price,price1,price2,price3,price4,price5,cuttype,costtype,expiredate,model,classcode,size,stdcost,status,pictus,notes,stMins,sNtype,cBy,mBy,cDate,mDate) 
	VALUES ( `_stcode`  ,`_barcode`  ,`_desc1`  ,`_desc2`  ,`_width`  ,`_height`  ,`_depth`  ,`_weigth`  ,`_units`  ,`_pdtype`  ,`_maxs`  ,`_mins`  ,`_pdgroup`  ,`_price`  ,`_price1`  ,`_price2`  ,`_price3`  ,`_price4`  ,`_price5`  ,`_cuttype`  ,`_costtype`  ,`_expiredate`  ,`_model`  ,`_classcode`  ,`_size`  ,`_stdcost`  ,`_status`  ,`_pictus`  ,`_notes`  ,`_stmins`  ,`_sntype`  ,`_cby`  ,`_mby`  ,`_cdate`  ,`_mdate`  );
COMMIT;
SELECT  `_stcode`  as  stcode; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_Create_t
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_Create_t`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Create_t`( 
`_j`  int(11),
`_v`  int(11),
`_stat`  char(1),
`_times`  timestamp,
`_version_control`  int(11)
)
BEGIN
/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
BEGIN
	ROLLBACK;
	call getErrMsg(2300);
END;*/
START TRANSACTION;
	INSERT INTO t (`j`,`v`,`stat`,`times`,`version_control`) 
	VALUES ( `_j`  ,`_v`  ,`_stat`  ,`_times`  ,`_version_control`  );
COMMIT;
SELECT  last_insert_id() as `i`; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_Create_testtable
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_Create_testtable`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Create_testtable`( 
`_item`  varchar(30),
`_desc`  varchar(200),
`_wh`  varchar(30),
`_qty`  decimal(10,0),
`_unit`  varchar(20),
`_unitprice`  decimal(10,2),
`_disc`  decimal(10,2),
`_etc`  varchar(10),
`_total`  decimal(10,2)
)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
BEGIN
	ROLLBACK;
	call getErrMsg(2300);
END;
START TRANSACTION;
	INSERT INTO testtable (`item`,`desc`,`wh`,`qty`,`unit`,`unitPrice`,`disc`,`etc`,`total`) 
	VALUES ( `_item`  ,`_desc`  ,`_wh`  ,`_qty`  ,`_unit`  ,`_unitprice`  ,`_disc`  ,`_etc`  ,`_total`  );
COMMIT;
SELECT  last_insert_id() as `no`; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_InsertLastId
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_InsertLastId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_InsertLastId`(IN `_j` int,IN `_v` int)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
    BEGIN
      ROLLBACK;
		  call raise(23000,'Error Pk Dupicate');
    END;
 
start TRANSACTION;
INSERT into t(j,v) VALUES(_j,_v);
COMMIT;
SELECT LAST_INSERT_ID() as id;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_InsertLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_InsertLog`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_InsertLog`(_types  varchar(30), _userid  varchar(30), _sql text,_para  text,_module varchar(10))
BEGIN
	#Routine body goes here...
		INSERT into systemlog(types,userid,message,parametor,module) VALUES(_types,_userid ,_sql,_para,_module);	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_InsertT
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_InsertT`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_InsertT`(IN `_j` int, IN `_v` int, IN `_i` int)
    MODIFIES SQL DATA
BEGIN
	DECLARE HAVE_ERROR INT DEFAULT 0 ;
TRY : BEGIN
	DECLARE EXIT HANDLER FOR 1205 SET HAVE_ERROR = 1;
	START TRANSACTION;
	UPDATE t set j = `_j`, v = `_v` WHERE i = `_i`;
	COMMIT;
END TRY;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_InsertUserLogs
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_InsertUserLogs`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_InsertUserLogs`(`_userid` varchar(30),`_status` varchar(30),_comment varchar(200))
BEGIN
	/******
			Ext: call  sp_InsertUserLogs('s','IN','comment');
	********/

	IF _userid = '' or ISNULL(_userid) and _status = '' or ISNULL(_status) THEN
			call getErrMsg(60003);
	ELSE
			INSERT into userlogs(userid,`status`,comments) VALUES(`_userid`,`_status`,_comment);
	END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_TEST
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_TEST`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_TEST`( 
`_apcode`  varchar(30),
`_item`  int(11),
`_days`  datetime,
`_times`  varchar(8),
`_refdoc`  varchar(30),
`_podoc`  varchar(30),
`_dateline`  datetime,
`_part`  varchar(200),
`_totalmoney`  decimal(19,4),
`_totalpayment`  decimal(19,4),
`_totalreduce`  decimal(19,4),
`_totaladd`  decimal(19,4),
`_totalcredit`  decimal(19,4),
`_status`  varchar(1)
)
BEGIN
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for sp_Update_t
-- ----------------------------
DROP PROCEDURE IF EXISTS `sp_Update_t`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Update_t`( 
`_i`  int(11),
`_j`  int(11),
`_v`  int(11),
`_stat`  char(1),
`_times`  timestamp,
`_version_control`  int(11)
)
BEGIN
/*	DECLARE EXIT HANDLER FOR SQLEXCEPTION,NOT FOUND,SQLWARNING
BEGIN
	ROLLBACK;
	call getErrMsg(2300);
END;*/
START TRANSACTION;
UPDATE t SET `j` = `_j`  , `v` = `_v`  , `stat` = `_stat`  , `times` = `_times`  , `version_control` = `_version_control`   WHERE 1=1  and `i` = _i;
COMMIT;
SELECT  `_i`  as  `i`; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for square_proc
-- ----------------------------
DROP PROCEDURE IF EXISTS `square_proc`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `square_proc`(IN `p_input` int,OUT `p_output` int)
BEGIN
	set p_output = pow(p_input,2);

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for testdynamicsp
-- ----------------------------
DROP PROCEDURE IF EXISTS `testdynamicsp`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `testdynamicsp`(vCustomerList text,vStart DATE,vEnd DATE)
BEGIN
	-- use dynamic query for multiple store/group list.
  -- set @sql = concat('select * from customer_records;');
set @sql = concat('select id_customer, id_customer_key,last_updated from customer_records where id_customer in(', vCustomerList, ') and last_updated between ', quote(vStart), ' and ', quote(vEnd));
prepare query from @sql;
execute query;
deallocate prepare query;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcCompleteUpdateTable
-- ----------------------------
DROP FUNCTION IF EXISTS `fcCompleteUpdateTable`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcCompleteUpdateTable`(`_userid` varchar(30)) RETURNS tinyint(1)
    READS SQL DATA
BEGIN
  DECLARE res TINYINT DEFAULT 0;

	IF `_userid` = '' OR ISNULL(_userid )  THEN
		 call getErrMsg(2300);
	ELSE

	#	  select count(*) into @rownum from controlupdatetable WHERE 1=1 and userid = `_userid`;
			-- delete all record from user
			DELETE FROM `controlUpdateTable` where 1=1 and userid = _userid ;

			-- delete all timeout 
			SELECT i.SHORTNAM into @dt from istab i WHERE i.TABTYP = 98;
			DELETE FROM controlupdatetable WHERE TIMEDIFF(NOW(),sTime) > @dt;

			RETURN 1;
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcControlUpdateTable
-- ----------------------------
DROP FUNCTION IF EXISTS `fcControlUpdateTable`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcControlUpdateTable`(`_userid` varchar(30),`_DocNo` varchar(30)) RETURNS tinyint(1)
    READS SQL DATA
BEGIN
  DECLARE res TINYINT DEFAULT 0;
  DECLARE timeout TINYINT DEFAULT 0;
  DECLARE var_user VARCHAR(30) DEFAULT '';
	if (`_userid` = '' OR ISNULL(_userid ))  and (ISNULL(_DocNo) and _DocNo = '') THEN
		 call getErrMsg(2300);
  ELSE
	-- set @CP = fcCompleteUpdateTable(_userid);
  -- get Count 
	SELECT count(*) INTO res FROM `controlUpdateTable` c where 1=1 and DocNo =  _DocNo ;
 --  get Timeout / user id of row 
	SELECT  TIMEDIFF(NOW(),sTime) into @td from `controlUpdateTable` c where 1=1 and DocNo =  _DocNo ;
	SELECT i.SHORTNAM into @dt from istab i WHERE i.TABTYP = 98;
	set timeout = @td > @dt ;
	SELECT  c.userid INTO var_user from `controlUpdateTable` c where 1=1 and DocNo =  _DocNo ;
	
  END if;

  # res = 0   can edit/DELETE
  # res = 1  and  timeout  & userid = _userid  can edit/delete

  if(res = 0 )THEN
     INSERT INTO controlupdatetable(docNo,userid) values(_DocNo,_userid);
     return 1;
  ELSEIF var_user = _userid  THEN
		 UPDATE controlupdatetable set sTime = NOW() WHERE docNo = _DocNo; 
     return 1; # if want reload change to 0
  ELSEIF var_user != _userid and timeout THEN
		 UPDATE controlupdatetable set sTime = NOW() , userid = _userid  WHERE docNo = _DocNo;
		 RETURN 1;
  ELSEIF var_user != _userid and !timeout THEN
		 return 0;
  END IF; 
  
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcCtrlUpdateTableSingle
-- ----------------------------
DROP FUNCTION IF EXISTS `fcCtrlUpdateTableSingle`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcCtrlUpdateTableSingle`(`_userid` varchar(30),`_DocNo` varchar(30),_tbname varchar(80)) RETURNS tinyint(1)
    READS SQL DATA
BEGIN
  DECLARE timeout TINYINT DEFAULT 0;
  DECLARE var_user VARCHAR(30) DEFAULT '';
	if (`_userid` = '' OR ISNULL(_userid ))  and (ISNULL(_DocNo) and _DocNo = '') and ( ISNULL(_tbname) OR _tbname = ''  ) THEN
		 call getErrMsg(2300);
  ELSE
	-- set @CP = fcCompleteUpdateTable(_userid);
  -- get Count 
	SELECT count(*) INTO @rownum FROM `controlUpdateTable` c where 1=1 and DocNo =  _DocNo and tbMaster = _tbname ;
 --  get Timeout / user id of row 
	SELECT  TIMEDIFF(NOW(),sTime) into @td from `controlUpdateTable` c where 1=1 and DocNo =  _DocNo  and tbMaster = _tbname ;
	SELECT i.SHORTNAM into @dt from istab i WHERE i.TABTYP = 98;
	set timeout = @td > @dt ;
	SELECT  c.userid INTO var_user from `controlUpdateTable` c where 1=1 and DocNo =  _DocNo  and tbMaster = _tbname ;
	
  END if;

  # res = 0   can edit/DELETE
  # res = 1  and  timeout  & userid = _userid  can edit/delete

  if(@rownum = 0 )THEN
     INSERT INTO controlupdatetable(docNo,userid,tbMaster) values(_DocNo,_userid,_tbname);
     return 1;
  ELSEIF var_user = _userid  THEN
		 UPDATE controlupdatetable set sTime = NOW() WHERE docNo = _DocNo  and tbMaster = _tbname ; 
     return 1; # if want reload change to 0
  ELSEIF var_user != _userid and timeout THEN
		 UPDATE controlupdatetable set sTime = NOW() , userid = _userid  WHERE docNo = _DocNo  and tbMaster = _tbname ;
		 RETURN 1;
  ELSEIF var_user != _userid and !timeout THEN
		 return 0;
  END IF; 
  
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcPDCount
-- ----------------------------
DROP FUNCTION IF EXISTS `fcPDCount`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcPDCount`() RETURNS int(11)
    NO SQL
BEGIN
/*****
		-- SELECT stmas.stcode, stmas.barcode, stmas.desc1, stmas.desc2, stmas.width, stmas.height, stmas.depth, stmas.weigth, CONCAT( stmas.Units, '-', it3.SHORTNAM ) AS units, CONCAT( stmas.pdType, '-', it2.SHORTNAM ) AS pdType, stmas.maxs, stmas.mins, CONCAT( stmas.pdGroup, '-', it1.SHORTNAM ) AS pdGroup, stmas.price, stmas.price1, stmas.price2, stmas.price3, stmas.price4, stmas.price5, stmas.cuttype, stmas.costtype, stmas.expiredate, stmas.model, stmas.classcode, stmas.size, stmas.stdcost, CONCAT( stmas.`status`, '-', it4.SHORTNAM ) AS STATUS, stmas.pictus, stmas.notes, stmas.stMins, stmas.sNtype, stmas.cBy, stmas.mBy, stmas.cDate, stmas.mDate FROM stmas LEFT JOIN istab AS it1 ON stmas.pdGroup = it1.TYPCOD AND it1.TABTYP = '22' LEFT JOIN istab AS it2 ON stmas.pdType = it2.TYPCOD AND it2.TABTYP = '23' LEFT JOIN istab AS it3 ON stmas.Units = it3.TYPCOD AND it3.TABTYP = '20' LEFT JOIN istab AS it4 ON stmas.`status` = it4.TYPCOD AND it4.TABTYP = '99'
		-- select count(*) into @count from stmas;
		-- select @count;
		-- SELECT fcCount() as count;
******/
		select count(*) into @count from stmas;
		RETURN @count;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcPDGetSession
-- ----------------------------
DROP FUNCTION IF EXISTS `fcPDGetSession`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcPDGetSession`(`_userid` varchar(30),`_stcode` varchar(30)) RETURNS tinyint(1)
    NO SQL
BEGIN
	/******
		select fcPDGetSession('s','111111112');
	*****/
	-- validate 
	IF (_userid = '' or ISNULL(_userid)) AND (_stcode = '' or ISNULL(_stcode)) THEN
			call getErrMsg(60007); -- 	stcode is not null
	ELSE
			-- chk SESSION
			SET @FT = fcCtrlUpdateTableSingle(_userid,_stcode,'stmas');
			IF @FT = 1 THEN
				RETURN 1;	
			ELSE
				call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.
			END IF;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcSystemSingleTbGetSession
-- ----------------------------
DROP FUNCTION IF EXISTS `fcSystemSingleTbGetSession`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcSystemSingleTbGetSession`(`_userid` varchar(30),_idx int,_tbname varchar(80)) RETURNS tinyint(1)
    NO SQL
BEGIN
	IF (_userid = '' or ISNULL(_userid)) AND ( _idx = 0 ) and ( _tbname = '' or ISNULL(_tbname) ) THEN
			call getErrMsg(60007); -- 	stcode is not null
	ELSE
			SET @FT = fcCtrlUpdateTableSingle(_userid,_idx,_tbname);
			IF @FT = 1 THEN
				RETURN 1;	
			ELSE
				call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.
			END IF;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcTbSingleCount
-- ----------------------------
DROP FUNCTION IF EXISTS `fcTbSingleCount`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcTbSingleCount`() RETURNS int(11)
    NO SQL
BEGIN
/*****
		-- SELECT stmas.stcode, stmas.barcode, stmas.desc1, stmas.desc2, stmas.width, stmas.height, stmas.depth, stmas.weigth, CONCAT( stmas.Units, '-', it3.SHORTNAM ) AS units, CONCAT( stmas.pdType, '-', it2.SHORTNAM ) AS pdType, stmas.maxs, stmas.mins, CONCAT( stmas.pdGroup, '-', it1.SHORTNAM ) AS pdGroup, stmas.price, stmas.price1, stmas.price2, stmas.price3, stmas.price4, stmas.price5, stmas.cuttype, stmas.costtype, stmas.expiredate, stmas.model, stmas.classcode, stmas.size, stmas.stdcost, CONCAT( stmas.`status`, '-', it4.SHORTNAM ) AS STATUS, stmas.pictus, stmas.notes, stmas.stMins, stmas.sNtype, stmas.cBy, stmas.mBy, stmas.cDate, stmas.mDate FROM stmas LEFT JOIN istab AS it1 ON stmas.pdGroup = it1.TYPCOD AND it1.TABTYP = '22' LEFT JOIN istab AS it2 ON stmas.pdType = it2.TYPCOD AND it2.TABTYP = '23' LEFT JOIN istab AS it3 ON stmas.Units = it3.TYPCOD AND it3.TABTYP = '20' LEFT JOIN istab AS it4 ON stmas.`status` = it4.TYPCOD AND it4.TABTYP = '99'
		-- select count(*) into @count from stmas;
		-- select @count;
		-- SELECT fcCount() as count;
******/
		select count(*) into @count from tbsingle;
		RETURN @count;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fcTbSingleGetSession
-- ----------------------------
DROP FUNCTION IF EXISTS `fcTbSingleGetSession`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `fcTbSingleGetSession`(`_userid` varchar(30),_idx int) RETURNS tinyint(1)
    NO SQL
BEGIN
	IF (_userid = '' or ISNULL(_userid)) AND ( _idx = 0 ) THEN
			call getErrMsg(60007); -- 	stcode is not null
	ELSE
			SET @FT = fcCtrlUpdateTableSingle(_userid,_idx,'tbSingle');
			IF @FT = 1 THEN
				RETURN 1;	
			ELSE
				call getErrMsg(60001); -- 	Can't Update/Delete anather one user it.
			END IF;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getDocId
-- ----------------------------
DROP FUNCTION IF EXISTS `getDocId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getDocId`(doc varchar(2)) RETURNS varchar(255) CHARSET utf8
    READS SQL DATA
BEGIN
	DECLARE _c int;
  DECLARE Docno VARCHAR(255);

	SET _c = 0;
	select count(*)  into _c  from  docscontrol where docid =  doc;

  IF _c = 0 THEN
 		INSERT INTO docscontrol (docid,docnum) VALUES(doc,1);
 		select CONCAT(UPPER(docid),docnum) INTO Docno  from docscontrol WHERE docid = doc;
 	ELSE
 		UPDATE docscontrol set docnum = docnum + 1  WHERE docid = doc ;
 		select CONCAT(UPPER(docid),docnum) INTO Docno  from docscontrol WHERE docid = doc;
  END IF;

	RETURN Docno;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getOPDocno
-- ----------------------------
DROP FUNCTION IF EXISTS `getOPDocno`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getOPDocno`() RETURNS varchar(9) CHARSET utf8
    READS SQL DATA
BEGIN
	DECLARE Docno VARCHAR(9);
	UPDATE docscontrol set docnum = docnum + 1  WHERE docid ='OP' ;
	select CONCAT(docid,docnum) INTO Docno  from docscontrol WHERE docid = 'OP';
return Docno;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getRecevoDocno
-- ----------------------------
DROP FUNCTION IF EXISTS `getRecevoDocno`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getRecevoDocno`() RETURNS varchar(7) CHARSET utf8
    READS SQL DATA
BEGIN
	DECLARE Docno VARCHAR(9);
	UPDATE docscontrol set docnum = docnum + 1  WHERE docid ='RO' ;
	-- select CONCAT(docid,docnum) INTO Docno  from docscontrol WHERE docid = 'RO';
	select CONCAT(docid,RIGHT(CONCAT(docnum),5))  INTO Docno  from docscontrol WHERE docid = 'RO';

return Docno;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for spAuthroize_roleid
-- ----------------------------
DROP FUNCTION IF EXISTS `spAuthroize_roleid`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `spAuthroize_roleid`(`_role` int,`_module` varchar(30),`_func`  varchar(30)) RETURNS tinyint(1)
    READS SQL DATA
BEGIN
	IF _role = 0 OR _module = '' OR ISNULL(_module) OR _func = '' OR ISNULL(_func)  THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE
					select count(*) INTO @Auth from tbauthoriz t WHERE t.role = _role and t.modulname = _module  and  functionname = _func ;

					RETURN @Auth;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for spAuthroize_usrid_module_func
-- ----------------------------
DROP FUNCTION IF EXISTS `spAuthroize_usrid_module_func`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `spAuthroize_usrid_module_func`(`_userid` varchar(3),`_module` varchar(30),`_func`  varchar(30)) RETURNS tinyint(1)
    READS SQL DATA
BEGIN
	IF _userid = '' OR ISNULL(_userid) OR _module = '' OR ISNULL(_module) OR _func = '' OR ISNULL(_func)  THEN
			call  getErrMsg(60007);	-- stcode is not null
	ELSE


					-- select * from user;
					select roll into @role from `user` u WHERE u.userid = _userid and u.status = 'A';
					-- select @role;
					-- select * from tbauthoriz;
					select count(*) INTO @Auth from tbauthoriz t WHERE t.role = @role and t.modulname = _module  and  functionname = _func ;

					RETURN @Auth;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for square_func
-- ----------------------------
DROP FUNCTION IF EXISTS `square_func`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `square_func`(`p_input` int) RETURNS int(11)
    READS SQL DATA
BEGIN
	#Routine body goes here...
return pow(p_input,2);
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for strSplit
-- ----------------------------
DROP FUNCTION IF EXISTS `strSplit`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `strSplit`(`x` text,`delim` varchar(255),`pos` int) RETURNS text CHARSET utf8
    NO SQL
BEGIN
	RETURN replace(substring(substring_index(x, delim, pos),length(substring_index(x, delim, pos - 1)) + 1), delim, '');
END
;;
DELIMITER ;
