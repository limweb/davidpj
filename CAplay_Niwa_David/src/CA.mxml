<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:component="component.*"
		   width="100%" height="100%">
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "component.*";
		@namespace components "com.shinynet.shinylib.components.*";
		@namespace pages "david.pages.*";
		
		.Gutter {
			backgroundColor: #004F6C;
			backgroundAlpha: .08;
		}
		
		.GutterOverlay {
			backgroundColor: #004F6C;
			backgroundAlpha: .16;
		}
		
		.MenuText {
			fontFamily: 'Arial Black';
			fontSize: 11;
			fontWeight: normal;
			color: black;
			kerning: true;
			rollOverColor: haloOrange;
		}
		
		.TabText {
			fontFamily: 'Arial Black';
			fontSize: 11;
			fontWeight: normal;
			color: black;
			kerning: true;
		}
		
		.ControlButtonText {
			fontFamily: 'Arial Black';
			fontSize: 12;
			fontWeight: normal;
			color: black;
			kerning: true;
		}
		
		.TitleWindowTitleText {
			fontFamily: 'Arial Black';
			fontSize: 12;
			fontWeight: normal;
			color: black;
			kerning: true;
		}
		
		.DataGridHeaderText {
			fontFamily: Arial;
			fontSize: 11;
			fontWeight: bold;
			color: black;
			kerning: true;
		}
		
		.DataGridText {
			fontFamily: Arial;
			fontSize: 10.5;
			fontWeight: normal;
			color: black;
			kerning: true;
		}
		
		.ControlButtonLabels {
			fontFamily: Arial;
			fontSize: 10;
			fontWeight: normal;
			color: black;
			kerning: true;
		}

	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import spark.events.IndexChangeEvent;
			
			private var _dataProvider1List:ArrayCollection;
			
			[Bindable]
			public function set dataProvider1List(value:Object):void {
				_dataProvider1List = value as ArrayCollection
			}
			public function get dataProvider1List():Object {
				return _dataProvider1List;
			}
			
			protected function canvas1_creationCompleteHandler():void {
				//Set dataprovider1 list
				dataProvider1List = new ArrayCollection([
					{checked:false, Value1:'xxxx', Value2:'xxxx', Value3:'xxxx'},
					{checked:false, Value1:'xxxx', Value2:'xxxx', Value3:'xxxx'},
					{checked:false, Value1:'xxxx', Value2:'xxxx', Value3:'xxxx'},
					{checked:false, Value1:'xxxx', Value2:'xxxx', Value3:'xxxx'}
				]);
			}
			
			public function init():void {
				setDefaultTab();
				setAllFalse();
				
				//tabAuthority.selected = true;
				isEnabledAuthority(true);
			}
			
			protected function toggleButtonChange_handle(evt:Event):void {
				var thisToggle:Object = evt.target as Object;
				var toggleItem:String = new String(thisToggle.label.toString());
				setDefaultTab();
				setAllFalse();
				thisToggle.selected = true;
				//mainDtg.visible = true;
				if (toggleItem == "Authority") {
					isEnabledAuthority(true);
				}
				else if (toggleItem == "Contact") {
					isEnabledContact(true);
				} 
				else if (toggleItem == "Explorer") {
					isEnabledAppExplorer(true);
				} 
				else if (toggleItem == "Windows") {
					isEnabledAppWindows(true);
				}
				else if (toggleItem == "Workflow") {
					isEnabledAppWorkflow(true);
				}
				else if (toggleItem == "Other") {
					isEnabledAppOther(true);
				}
			}
			
			private function setDefaultTab():void {
				tabbar_id.selectedItem = tabAuthority;
			}
			
			public function setAllFalse():void {
				isEnabledAuthority(false);
				isEnabledContact(false);
				isEnabledAppExplorer(false);
				isEnabledAppWindows(false);
				isEnabledAppWorkflow(false);
				isEnabledAppOther(false);
			}
			
			public function isEnabledAuthority(state:Boolean):void {
				//grpPrivilledge.visible=state;
				//grpAuthentication.visible=state;
				//grpLanguage.visible=state;
			}
			
			public function isEnabledContact(state:Boolean):void {
				//grpLocation.visible=state;
				//grpContact.visible=state;
			}
			
			public function isEnabledAppExplorer(state:Boolean):void {
				//grpAppExplorer.visible=state;
			}
			
			public function isEnabledAppWindows(state:Boolean):void {
				//grpAppWindows.visible=state;
			}
			
			public function isEnabledAppWorkflow(state:Boolean):void {
				//grpAppWorkflow.visible=state;
			}
			
			public function isEnabledAppOther(state:Boolean):void {
				//grpAppOther.visible=state;
			}
			
			protected function CategorySelector_clickhandler(event:MouseEvent):void {
				if(CategorySelector.selectedIndex == 0 {
					navigator.
				}

			}
			
			protected function tabbarChangeHandler(event:IndexChangeEvent):void {
				var toggleItem:String =  String(event.target.selectedItem.label);
				setAllFalse();
				
				if (toggleItem == "Authority") {
					isEnabledAuthority(true);
				}
				else if (toggleItem == "Contact") {
					isEnabledContact(true);
				} 
				else if (toggleItem == "Explorer") {
					isEnabledAppExplorer(true);
				} 
				else if (toggleItem == "Windows") {
					isEnabledAppWindows(true);
				}
				else if (toggleItem == "Workflow") {
					isEnabledAppWorkflow(true);
				}
				else if (toggleItem == "Other") {
					isEnabledAppOther(true);
				}
			}	
		]]>
	</fx:Script>
	
	<s:BorderContainer width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
		</s:layout>
		
		<!--Stage-->
		<s:BorderContainer id="Stage" width="100%" height="100%" borderVisible="false" styleName="Gutter">
			<s:layout>
				<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
			</s:layout>
			
			<!--Entity chooser, buttons, and tabbar -->
			<s:BorderContainer id="EntityChooser" width="100%" height="100%" borderVisible="false" styleName="Gutter">
				<s:layout>
					<s:HorizontalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="10"/>
				</s:layout>
				<s:BorderContainer id="EntityList" width="170" height="100%" borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
					</s:layout>
					<s:BorderContainer width="170" height="20" borderVisible="true" borderColor="#00004F6C" backgroundColor="#00004F6C">
						<s:layout>
							<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="5" paddingRight="5" gap="0"/>
						</s:layout>
						<mx:Text text="Choose entity:" 
								 color="white" fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold"/>
					</s:BorderContainer>
					<s:BorderContainer width="170" height="100%" borderVisible="true" borderWeight="2" styleName="Gutter">
						<s:layout>
							<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="5" paddingRight="0" gap="0"/>
						</s:layout>
						<s:List id="CategorySelector"
								width="159" height="100%" borderVisible="false" 
								styleName="MenuText" contentBackgroundAlpha=".0"
								allowMultipleSelection="false" 
								click="CategorySelector_clickhandler(event);">
							<mx:ArrayCollection>
								<fx:String>Accounts</fx:String>
								<fx:String>   Users</fx:String>
								<fx:String>   Groups</fx:String>
								<fx:String>   Roles</fx:String>
								<fx:String>Document Management</fx:String> 
								<fx:String>Work Management</fx:String>
								<fx:String>   Procedures</fx:String>
								<fx:String>   Classes and Types</fx:String>
								<fx:String>Folders</fx:String> 
								<fx:String>Jobs</fx:String>
								<fx:String>System</fx:String>
							</mx:ArrayCollection>
						</s:List>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!--Entities-->
				<s:BorderContainer width="100%" height="100%" borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" gap="0" horizontalAlign="right"/>
					</s:layout>
					
					<!-- Control buttons and tab bar -->
					<s:BorderContainer width="100%" height="23" borderVisible="false" styleName="GutterOverlay">
						<s:layout>
							<s:HorizontalLayout paddingTop="0" gap="0" horizontalAlign="left" verticalAlign="bottom"/>
						</s:layout>	
						<s:VGroup width="50%" height="100%" paddingTop="0" verticalAlign="top">
							<s:HGroup width="100%" height="100%" horizontalAlign="left" paddingTop="0" verticalAlign="top" gap="10"
									  styleName="Gutter">
								<s:Button label="Insert" width="30%" height="19" chromeColor="blue" styleName="ControlButtonText">
									
								</s:Button>
								<s:Button label="Delete" width="30%" height="19" chromeColor="red" styleName="ControlButtonText">
									
								</s:Button>
								<s:Spacer width="5%"/>
								<s:Button label="Save" width="30%" height="19" chromeColor="green" styleName="ControlButtonText">
									
								</s:Button>
								<s:Spacer width="5%"/>
							</s:HGroup>
						</s:VGroup>
						<s:VGroup width="50%">
							<s:HGroup id="TabBar_HG" width="75%" horizontalAlign="left" verticalAlign="top">
								<s:TabBar id="tabbar_id" width="100%" height="21" styleName="TabText"
										  change="tabbarChangeHandler(event)">
									<mx:ArrayCollection>
										<!--<fx:String>Contact Information</fx:String> 
										<fx:String>Access Controls</fx:String> -->
										
										<fx:Object id="tabAuthority" label="Authority"></fx:Object>
										<fx:Object id="tabContact" label="Contact"></fx:Object>
										<fx:Object id="tabExplorer" label="Explorer"></fx:Object>
										<fx:Object id="tabWindows" label="Windows"></fx:Object>
										<fx:Object id="tabWorkflow" label="Workflow"></fx:Object>
										<fx:Object id="tabOther" label="Other"></fx:Object>
										
									</mx:ArrayCollection>
								</s:TabBar>
							</s:HGroup>
						</s:VGroup>
					</s:BorderContainer>
					
					<component:CustomTitleWindow id="DG_TW"
												 title="Configure users" height="100%" width="100%" minWidth="400" dropShadowVisible="false"
												 headerHeight="16" chromeColor="black" color="white"
												 styleName="TitleWindowTitleText"
												 skinClass="skin.CustomTitleWindowSkin">
						
						<fx:Script>
							<![CDATA[
								[Bindable]
								private var A_m_AC:ArrayCollection = new ArrayCollection(
									[
										{EntityType:"User", UID:"1", UserId:"User1Id", UserName:"User1Name", 
											Enabled:true, checked:"false"},
										{EntityType:"User", UID:"2", UserId:"User2Id", UserName:"User2Name", 
											Enabled:true, checked:"false"},
										{EntityType:"User", UID:"3", UserId:"User3Id", UserName:"User3Name", 
											Enabled:true, checked:"false"}
									]);
								
								[Bindable]
								private var A_m_Enabled_AC:ArrayCollection = new ArrayCollection(
									[
										{Label:"Enabled", Data:true, Selected:true},
										{Label:"Disabled", Data:false, Selected:false},
									]);
							]]>
						</fx:Script>
						
						<!-- Master view stack -->
						<mx:ViewStack id="m_VS" visible="false" width="1140" height="100%" borderVisible="false"
									  creationPolicy="all">
							
							<s:NavigatorContent id="A_m_view" visible="true" width="1140" height="100%">
								
								
								<mx:AdvancedDataGrid id="A_m_DG" width="100%" height="100%"
													 allowDragSelection="true" allowMultipleSelection="true"
													 borderVisible="true" dataProvider="{A_m_AC}" depth="1"
													 dragEnabled="true" draggableColumns="true"
													 dragMoveEnabled="false" editable="true" headerHeight="24"
													 minColumnWidth="0"
													 resizableColumns="false" rowHeight="24"
													 sortableColumns="true" sortExpertMode="true"
													 horizontalScrollPolicy="off" verticalScrollPolicy="auto" 
													 styleName="DataGridText" lockedColumnCount="3">
									<!--dragEnter="dropEnter(event)"
									dragDrop="User_dragDropHandler(event)"-->
									<!--itemFocusOut="A_m_DG_itemFocusOutHandler(event)"-->
									<mx:groupedColumns>
										<mx:AdvancedDataGridColumnGroup headerText="Need2span" color="red">
											<mx:AdvancedDataGridColumn id="A_m_DG_Checkbox"
																	   dataField="checked" textAlign="center"
																	   width="{A_m_DG.width-A_m_DG.width+20}"
																	   headerRenderer="component.ThreeStateCheckBoxHeaderRenderer"
																	   itemRenderer="component.CheckboxItemRenderer"
																	   rendererIsEditor="false"/>
											<mx:AdvancedDataGridColumn id="A_m_DG_Information"
																	   width="{A_m_DG.width-A_m_DG.width+20}"/>
											<mx:AdvancedDataGridColumn id="A_m_DG_Enabled"
																	   editable="false"
																	   width="{A_m_DG.width-A_m_DG.width+20}">
											</mx:AdvancedDataGridColumn>
										</mx:AdvancedDataGridColumnGroup>
										<mx:AdvancedDataGridColumnGroup headerText="Click to edit, hit Save button when finished">
											<mx:AdvancedDataGridColumnGroup id="A_m_DG_identification"
																			headerText="User Identification">							
												<mx:AdvancedDataGridColumn id="A_m_DG_UserID"
																		   headerText="User ID" dataField="UserId"
																		   width="100" minWidth="100"/>
												<mx:AdvancedDataGridColumn id="A_m_DG_UserName"
																		   headerText="User Name" dataField="UserName"
																		   width="180" minWidth="180"/>
											</mx:AdvancedDataGridColumnGroup>								
											<mx:AdvancedDataGridColumnGroup id="A_m_DG_propertiesA"
																			headerText="PropertiesA">
												<mx:AdvancedDataGridColumn id="A_m_DG_Property1"
																		   headerText="Property1"
																		   width="110" minWidth="110"/>
												<mx:AdvancedDataGridColumn id="A_m_DG_Property2" 
																		   headerText="Property2"
																		   width="110" minWidth="110"/>
											</mx:AdvancedDataGridColumnGroup>
										</mx:AdvancedDataGridColumnGroup>
										<mx:AdvancedDataGridColumnGroup headerText="Click to edit, hit Save button when finished">
											<mx:AdvancedDataGridColumnGroup id="A_m_DG_propertiesB"
																			headerText="PropertiesB">
												<mx:AdvancedDataGridColumn id="A_m_DG_Property3"
																		   headerText="Property3"
																		   width="{TabBar_HG.width}" minWidth="580"/>
											</mx:AdvancedDataGridColumnGroup>
										</mx:AdvancedDataGridColumnGroup>
									</mx:groupedColumns>
								</mx:AdvancedDataGrid>
								
							</s:NavigatorContent>
							
						</mx:ViewStack>
						
					</component:CustomTitleWindow>
				</s:BorderContainer>
				
				<!--End SearchFiltersAndSearchResults-->
			</s:BorderContainer>
			
			<!--End stage-->
		</s:BorderContainer>
		
	</s:BorderContainer>
</s:Application>