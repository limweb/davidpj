<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:layouts="org.flexlayouts.layouts.*"
			   width="100%" height="100%"
			   creationComplete="SetDefaults()">
	
	<fx:Style source="main.css"/>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.BubbleChart;
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.utils.ObjectUtil;
			
			import spark.components.VGroup;
			import spark.layouts.*;
			import spark.layouts.supportClasses.LayoutBase;
			
			//Non-Preview constants
			const DatesWidth:int = 36;
			const DatesHeight:int = 82;
			const LargeFlagWidth:int = 45;
			const LargeFlagHeight:int = 97;
			const SmallFlagWidth:int = 22;
			const SmallFlagHeight:int = 50;
			const SymbolWidth:int = 70;
			const SymbolHeight:int = 70;
			const CharacterButtonWidth:int = 26;
			const CharacterButtonHeight:int = 37;
			//const LargeCharacterWidth:int = 35;
			//const LargeCharacterHeight:int = 94;
			const LargeCharacterWidth:int = 40;
			const LargeCharacterHeight:int = 100;			
			const MediumCharacterWidth:int = 20;
			const MediumCharacterHeight:int = 50;			
			const SmallCharacterWidth:int = 10;
			const SmallCharacterHeight:int = 25;
			
			private var Debugging:Boolean = false;
			
			[Bindable] private var PlateSize:String;
			
			[Bindable] private var FlagSize:String;
			[Bindable] private var FlagWidth:int;
			[Bindable] private var FlagHeight:int;
					
			[Bindable] private var CharacterSize:String;
			[Bindable] private var CharacterWidth:int;
			[Bindable] private var CharacterHeight:int;
			
			[Bindable] private var PlateName:String;
			[Bindable] private var PlateColor:uint;
			[Bindable] private var FoilName:String;
			[Bindable] private var FoilColor:uint;
			
			[Bindable] private var SelectedDate1:String;
			[Bindable] private var SelectedDate2:String;
			[Bindable] private var SelectedDate3:String;
			
			[Bindable] private var SelectedPlateImage:Image;
			[Bindable] private var SelectedPlateImageSource:String;
			[Bindable] private var SelectedFoilImage:Image;
			[Bindable] private var SelectedFoilImageSource:String;
			[Bindable] private var SelectedHolesImage:Image;
			[Bindable] private var SelectedHolesSource:String;
			[Bindable] private var SelectedFlagImage:Image;
			[Bindable] private var SelectedFlagSource:String;
			[Bindable] private var SelectedSymbolImage:Image;
			[Bindable] private var SelectedSymbolSource:String;
			
			[Bindable] private var PlateIsImage:Boolean;
			[Bindable] private var FoilIsImage:Boolean;
			
			[Bindable] private var Plate_MiniPlatePlateColor:uint;
			[Bindable] private var Plate_MiniPlateFoilColor:uint;
			[Bindable] private var Foil_MiniPlatePlateColor:uint;
			[Bindable] private var Foil_MiniPlateFoilColor:uint;
			
			//CenterSymbol implies that current CharacterOrSymbolBox is CharacterOrSymbolBox2
			[Bindable] private var CenterSymbol:Boolean = false;
			[Bindable] private var CharactersAdded:int = 0;
			[Bindable] private var TwoLines:Boolean;
			[Bindable] private var CurrentCharacterOrSymbolBox:String;
			
			private var StackAction:Array = new Array();
			
			//Embed default plate image
			[Embed(source="assets/plates/DarkYellow.jpg")]
			[Bindable]
			private var SelectedPlateClass:Class;
			
			//Embed default foil image
			[Embed(source="assets/foils/RedFoilPlate.png")]
			[Bindable]
			private var SelectedFoilClass:Class;			
			
			//Embed default flag image
			[Embed(source="assets/flags/nl.jpg")]
			[Bindable]
			private var SelectedFlagClass:Class;
			
			//Embed default symbol image
			[Embed(source="assets/symbols/LargePeaceSign.png")]
			[Bindable]
			private var SelectedSymbolClass:Class;
			
			private function SetDefaults():void
			{
				PlateSize = 'Large';
				
				PlateIsImage = false;
				FoilIsImage = false;
				
				if (PlateIsImage == true)
				{
					Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
					Plate_MiniPlateNonImageContainer.includeInLayout = false; Plate_MiniPlateNonImageContainer.visible = false;
				}
				if (PlateIsImage == false)
				{
					Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
					Plate_MiniPlateNonImageContainer.includeInLayout = true; Plate_MiniPlateNonImageContainer.visible = true;
				}
				if (FoilIsImage == true)
				{
					Foil_MiniPlateImageContainer.includeInLayout = true; Foil_MiniPlateImageContainer.visible = true;
					Foil_MiniPlateNonImageContainer.includeInLayout = false; Foil_MiniPlateNonImageContainer.visible = false;
				}
				if (FoilIsImage == false)
				{
					Foil_MiniPlateImageContainer.includeInLayout = false; Foil_MiniPlateImageContainer.visible = false;
					Foil_MiniPlateNonImageContainer.includeInLayout = true; Foil_MiniPlateNonImageContainer.visible = true;
				}
				
				PlateColor = 0xffffff; //white
				FoilColor = 0x000000; //black
				
				TwoLines = false;
				CharacterSize = 'Medium';
				
				if(Debugging) Alert.show('SetDefaults');
				SelectedFlagSource = 'assets/flags/nl.jpg';
				SelectedSymbolSource = 'assets/symbols/LargePeaceSign.png';
				SelectedPlateImageSource = 'assets/plates/DarkYellow.jpg';
				SelectedFoilImageSource = 'assets/foils/RedFoilPlate.png';
				SelectedHolesSource = 'assets/holes/TopCups.jpg';
				
				if(Debugging) Alert.show('Plate_MiniPlatePlateColor:');
				if(Debugging) Alert.show(String(Plate_MiniPlatePlateColor));
				Plate_MiniPlatePlateColor = PlateColor;
				if(Debugging) Alert.show('Plate_MiniPlateFoilColor:');
				if(Debugging) Alert.show(String(Plate_MiniPlateFoilColor));
				Plate_MiniPlateFoilColor = FoilColor;
				
				if(Debugging) Alert.show('Foil_MiniPlatePlateColor:');
				if(Debugging) Alert.show(String(Foil_MiniPlatePlateColor));
				Foil_MiniPlatePlateColor = PlateColor;
				if(Debugging) Alert.show('Foil_MiniPlatePlateColor:');
				if(Debugging) Alert.show(String(Foil_MiniPlatePlateColor));
				Foil_MiniPlateFoilColor = FoilColor;
				
				SetDefaultCharacterSize();
				SetDefaultFlagSize();
				
				CurrentCharacterOrSymbolBox = 'CharacterOrSymbolBox1A';
				SetUnderlines();
			}
			
			private function SetDefaultCharacterSize():void
			{
				if (PlateSize == 'Large')
				{
					CharacterSize = 'Large';
				}
				else if (PlateSize == 'Medium')
				{
					CharacterSize = 'Medium';
				}
				else if (PlateSize == 'Small' || PlateSize == 'Tiny')
				{
					CharacterSize = 'Small';
				}
			}
			
			private function SetCharacterSize():void
			{
				if (CharacterSize == 'Large')
				{
					CharacterWidth = LargeCharacterWidth;
					CharacterHeight = LargeCharacterHeight;
				}
				else if (CharacterSize == 'Medium')
				{
					CharacterWidth = MediumCharacterWidth;
					CharacterHeight = MediumCharacterHeight;
				}
				else if (CharacterSize == 'Small')
				{
					CharacterWidth = SmallCharacterWidth;
					CharacterHeight = SmallCharacterHeight;
				}
			}
			
			private function SetDefaultFlagSize():void
			{
				if (PlateSize == 'Large' || PlateSize == 'Medium')
				{
					FlagSize = 'Large';
				}
				else
				{
					FlagSize = 'Small';
				}
			}
			
			private function SetFlagSize():void
			{
				if (FlagSize == 'Large')
				{
					FlagWidth = LargeFlagWidth;
					FlagHeight = LargeFlagHeight;
				}
				else if (CharacterSize == 'Small')
				{
					FlagWidth = SmallFlagWidth;
					FlagHeight = SmallFlagHeight;
				}
			}
			
			private function SetDefaultFlag():void
			{
				SelectedFlagImage = SelectedFlagClass as Image;
			}
			
			private function SetDefaultSymbol():void
			{
				SelectedSymbolImage = SelectedSymbolClass as Image;
			}
			
			private function SetDefaultPreview():void
			{
				SetDefaultPreviewPlate();
				SetDefaultPreviewFoil();
				
				TopLeftHole.visible = true;
				TopRightHole.visible = true;
				TopLeftCup.visible = true;
				TopRightCup.visible = true;
			}
			
			private function SetDefaultPreviewPlate():void
			{	
				if (PlateIsImage == true)
				{
					if(Debugging) Alert.show('SetDefaultPreviewPlate PlateIsImage=true');
					PlateNonImageBorder.includeInLayout = false; PlateNonImageBorder.visible = false;
					PlateImageBorder.includeInLayout = true; PlateImageBorder.visible = true;
					SetDefaultPreviewPlateImage();
				}
				else
				{
PlateColor = 0xffffff;
					if(Debugging) Alert.show('SetDefaultPreviewPlate PlateIsImage=false');
					PlateNonImageBorder.includeInLayout = true; PlateNonImageBorder.visible = true;
					PlateImageBorder.includeInLayout = false; PlateImageBorder.visible = false;
					SetPreviewPlateNonImage();		
				}
			}
				
			private function SetDefaultPreviewFoil():void
				{	
				if (FoilIsImage == true)
				{
					if(Debugging) Alert.show('SetDefaultPreviewFoil FoilIsImage=true');
					SetDefaultPreviewFoilImage();
				}
				else
				{
FoilColor = 0x000000;
					if(Debugging) Alert.show('SetDefaultPreviewFoil FoilIsImage=false');
					SetPreviewFoilNonImage();		
				}
			}
			
			private function SetPreviewPlate(event:MouseEvent):void
			{
				if (PlateIsImage == true)
				{
					if(Debugging) Alert.show('SetPreviewPlate If PlateIsImage=true');
					if(Debugging) Alert.show('SelectedPlateImage.source:');
					if(Debugging) Alert.show(String(SelectedPlateImage.source));
					SetPreviewPlateImage();
				}
				else
				{
					if(Debugging) Alert.show('SetPreviewPlate PlateIsImage=false');
					if(Debugging) Alert.show('Plate_MiniPlatePlateColor:');
					if(Debugging) Alert.show(String(Plate_MiniPlatePlateColor));
					PlateColor = Plate_MiniPlatePlateColor;
					if(Debugging) Alert.show('Plate_MiniPlateFoilColor:');
					if(Debugging) Alert.show(String(Plate_MiniPlateFoilColor));
					FoilColor = Plate_MiniPlateFoilColor;
					SetPreviewPlateNonImage();
				}
			}
			
			private function SetPreviewFoil(event:MouseEvent):void
			{
				if (FoilIsImage == true)
				{
					if(Debugging) Alert.show('SetPreviewFoil FoilIsImage=true');
					if(Debugging) Alert.show('SelectedFoilImage.source:');
					if(Debugging) Alert.show(String(SelectedFoilImage.source));
					SetPreviewFoilImage();
				}
				else
				{
					if(Debugging) Alert.show('SetPreviewFoil FoilIsImage=false');
					if(Debugging) Alert.show('Foil_MiniPlatePlateColor:');
					if(Debugging) Alert.show(String(Foil_MiniPlateFoilColor));
					FoilColor = Foil_MiniPlateFoilColor;
					SetPreviewFoilNonImage();		
				}
			}
			
			/*private function OpenGallery(event:MouseEvent,GalleryName:String):void 
			{
				Galleries.selectedChild == GalleryName;
				GalleryWindow.visible = true;
			}*/
			
			private function OpenPlateGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = PlateGallery;
				GalleryWindow.visible = true;
			}
			
			private function OpenFoilGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FoilGallery;
				GalleryWindow.visible = true;
			}
			
			private function OpenHolesGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = HolesGallery;
				GalleryWindow.visible = true;
			}
			
			private function OpenFlagGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FlagGallery;
				GalleryWindow.visible = true;
			}
			
			private function OpenSymbolGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible = true;
			}
			
			private function SelectPlateGalleryImage(event:MouseEvent):void 
			{
				PlateIsImage = true;
				Plate_MiniPlateNonImageContainer.includeInLayout = false; Plate_MiniPlateNonImageContainer.visible = false;
				Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
				
				var PlateGalleryImage:Image;
				PlateGalleryImage = event.currentTarget as Image;
				SelectedPlateImage = PlateGalleryImage as Image;
				SelectedPlateImageSource = PlateGalleryImage.source as String;
				
				if(Debugging) Alert.show('SelectPlateGalleryImage');
				if(Debugging) Alert.show('PlateGalleryImage.source:');
				if(Debugging) Alert.show(String(PlateGalleryImage.source));
			}
			
			private function SelectPlateGalleryNonImage(event:MouseEvent,PlateName:String):void 
			{;
				PlateIsImage = false;
				Plate_MiniPlateNonImageContainer.includeInLayout = true; Plate_MiniPlateNonImageContainer.visible = true;
				Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
				
				if (PlateName == 'BlackPlate')
				{
					Plate_MiniPlatePlateColor = 0x000000;
					Plate_MiniPlateFoilColor = 0x000000;
				}
				else if (PlateName == 'WhitePlate')
				{
					Plate_MiniPlatePlateColor = 0xffffff;
					Plate_MiniPlateFoilColor = 0xe6e6e6;
				}
				else if (PlateName == 'LimeGreenPlate')
				{
					Plate_MiniPlatePlateColor = 0x00ff00;
					Plate_MiniPlateFoilColor = 0x00e600;
				}
				
				if(Debugging) Alert.show('SelectPlateGalleryNonImage');
				if(Debugging) Alert.show('PlateName:');
				if(Debugging) Alert.show(PlateName);
			}
			
			private function SelectFoilGalleryImage(event:MouseEvent):void 
			{
				FoilIsImage = true;
				var FoilGalleryImage:Image;
				FoilGalleryImage = event.currentTarget as Image;
				SelectedFoilImage = FoilGalleryImage;
				SelectedFoilImageSource = FoilGalleryImage.source as String;
				
				if (SelectedFoilImageSource.indexOf("Black") >= 0)
				{
					FoilName = "BlackFoil";
				}
				else if (SelectedFoilImageSource.indexOf("White") >= 0)
				{
					FoilName = "WhiteFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Blue") >= 0)
				{
					FoilName = "BlueFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Gold") >= 0)
				{
					FoilName = "GoldFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Green") >= 0)
				{
					FoilName = "GreenFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Pink") >= 0)
				{
					FoilName = "PinkFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Red") >= 0)
				{
					FoilName = "RedFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Silver") >= 0)
				{
					FoilName = "SilverFoil";
				}
				
				if(Debugging) Alert.show('SelectFoilGalleryImage');
				if(Debugging) Alert.show('FoilName:');
				if(Debugging) Alert.show(FoilName);
			}
			
			private function SelectFoilGalleryNonImage(event:MouseEvent,FoilName:String):void 
			{
				FoilIsImage = false;
				Foil_MiniPlateNonImageContainer.includeInLayout = true;
				Foil_MiniPlateNonImageContainer.visible = true;
				
				if (FoilName == 'BlackFoil')
				{
					Foil_MiniPlatePlateColor = 0x000000;
					Foil_MiniPlateFoilColor = 0x000000;
				}
				else if (FoilName == 'WhiteFoil')
				{
					Foil_MiniPlatePlateColor = 0xffffff;
					Foil_MiniPlateFoilColor = 0xe6e6e6;
				}
				
				if(Debugging) Alert.show('SelectFoilGalleryNonImage');
				if(Debugging) Alert.show('FoilName');
				if(Debugging) Alert.show(FoilName);
			}
			
			private function SelectHolesGalleryImage(event:MouseEvent):void 
			{
				var HolesGalleryImage:Image;
				HolesGalleryImage = event.currentTarget as Image;
				SelectedHolesImage = HolesGalleryImage;
				SelectedHolesSource = HolesGalleryImage.source as String;
			}
			
			private function SelectFlagGalleryImage(event:MouseEvent):void 
			{
				var FlagGalleryImage:Image;
				FlagGalleryImage = event.currentTarget as Image;
				SelectedFlagImage = FlagGalleryImage;
				SelectedFlagSource = FlagGalleryImage.source as String;
			}
			
			private function SelectSymbolGalleryImage(event:MouseEvent):void 
			{
				var SymbolGalleryImage:Image;
				SymbolGalleryImage = event.currentTarget as Image;
				SelectedSymbolImage = SymbolGalleryImage;
				SelectedSymbolSource = SymbolGalleryImage.source as String;
			}
			
			private function SetPreviewPlateNonImage():void
			{
				if(Debugging) Alert.show('SetPreviewPlateNonImage');
				if(Debugging) Alert.show('PlateColor:');
				if(Debugging) Alert.show(String(PlateColor));
				PreviewContainer.setStyle('backgroundColor',PlateColor);
				//PlateNonImageBorder.setStyle('borderColor',FoilColor);
			}
			
			private function SetPreviewFoilNonImage():void
			{
				if(Debugging) Alert.show('SetPreviewFoilNonImage');
				if(Debugging) Alert.show('FoilColor:');
				if(Debugging) Alert.show(String(FoilColor));
				//PreviewContainer.setStyle('backgroundColor',PlateColor);
				PlateNonImageBorder.setStyle('borderColor',FoilColor);
			}
			
			private function SetPreviewPlateImage():void
			{
				if(Debugging) Alert.show('SetPreviewPlateImage');
				if(Debugging) Alert.show('SelectedPlateImage.source');
				if(Debugging) Alert.show(String(SelectedPlateImage.source));
				PreviewContainer.setStyle('backgroundImage',SelectedPlateImage);
			}
			
			private function SetDefaultPreviewPlateImage():void
			{
				if(Debugging) Alert.show('SetDefaultPreviewPlateImage');
				if(Debugging) Alert.show('SelectedPlateClass:');
				if(Debugging) Alert.show(String(SelectedPlateClass));
				PreviewContainer.setStyle('backgroundImage',SelectedPlateClass);
			}
			
			private function SetPreviewFoilImage():void
			{
				if(Debugging) Alert.show('SetPreviewFoilImage');
				if(Debugging) Alert.show('SelectedFoilImage.source:');
				if(Debugging) Alert.show(String(SelectedFoilImage.source));
				PlateImageBorder.setStyle('backgroundImage',SelectedFoilImage);
			}
			
			private function SetDefaultPreviewFoilImage():void
			{
				if(Debugging) Alert.show('SetDefaultPreviewFoilImage');
				if(Debugging) Alert.show('SelectedFoilClass:');
				if(Debugging) Alert.show(String(SelectedFoilClass));
				PlateImageBorder.setStyle('backgroundImage',SelectedFoilClass);
			}
			
			private function SetHoles(event:MouseEvent):void
			{
				if (SelectedHolesSource.indexOf("FourCups") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = true;
					BottomRightCup.visible = true;
				}
				else if (SelectedHolesSource.indexOf("TopCups") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("MiddleCups") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = true;
					MiddleRightCup.visible = true;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("BottomCups") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("FourHoles") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("TopHoles") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("MiddleHoles") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("BottomHoles") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
			}
			
			private function AddPlateElementsContainerChildren():void
			{
				LeftFlagBox = new HGroup;
				LeftFlagBox.id = 'LeftFlagBox';
				LeftFlagBox.width = FlagWidth;
				LeftFlagBox.height = FlagHeight;
				LeftFlagBox.horizontalAlign = 'center';
				LeftFlagBox.verticalAlign = 'middle';
				LeftFlagBox.includeInLayout = false; LeftFlagBox.visible = false;
				PlateElementsContainer.addElement(LeftFlagBox);
				
				LeftDatesBox = new VGroup;
				LeftDatesBox.id = 'LeftDatesBox';
				LeftDatesBox.width = DatesWidth;
				LeftDatesBox.height = DatesHeight;
				LeftDatesBox.horizontalAlign = 'center';
				LeftDatesBox.verticalAlign = 'middle';
				LeftDatesBox.setStyle('kerning',false);
				LeftDatesBox.includeInLayout = false; LeftDatesBox.visible = false;
				PlateElementsContainer.addElement(LeftDatesBox);
				
				LeftSymbolBox = new HGroup;
				LeftSymbolBox.id = 'LeftSymbolBox';
				LeftSymbolBox.width = SymbolWidth;
				LeftSymbolBox.height = SymbolHeight;
				LeftSymbolBox.horizontalAlign = 'center';
				LeftSymbolBox.verticalAlign = 'middle';
				LeftSymbolBox.includeInLayout = false; LeftSymbolBox.visible = false;
				PlateElementsContainer.addElement(LeftSymbolBox);
				
				CharacterOrSymbolBox1A = new HGroup;
				CharacterOrSymbolBox1A.id = 'CharacterOrSymbolBox1A';
				CharacterOrSymbolBox1A.width = CharacterWidth;
				CharacterOrSymbolBox1A.percentHeight = 100;
				CharacterOrSymbolBox1A.percentWidth = 100;
				CharacterOrSymbolBox1A.clipAndEnableScrolling=true;
				CharacterOrSymbolBox1A.horizontalAlign = 'center';
				CharacterOrSymbolBox1A.verticalAlign = 'middle';
				CharacterOrSymbolBox1A.gap = 0;
				CharacterOrSymbolBox1A.includeInLayout = true; CharacterOrSymbolBox1A.visible = true;
				PlateElementsContainer.addElement(CharacterOrSymbolBox1A);
				
				CharacterOrSymbolBox1B = new HGroup;
				CharacterOrSymbolBox1B.id = 'CharacterOrSymbolBox1B';
				CharacterOrSymbolBox1B.width = CharacterWidth;
				CharacterOrSymbolBox1B.percentHeight = 100;
				CharacterOrSymbolBox1B.percentWidth = 100;
				CharacterOrSymbolBox1B.clipAndEnableScrolling=true;
				CharacterOrSymbolBox1B.horizontalAlign = 'center';
				CharacterOrSymbolBox1B.verticalAlign = 'middle';
				CharacterOrSymbolBox1B.gap = 0;
				CharacterOrSymbolBox1B.includeInLayout = false; CharacterOrSymbolBox1B.visible = false;
				PlateElementsContainer.addElement(CharacterOrSymbolBox1B);
				
/*				CharacterOrSymbolBox1 = new BorderContainer;
				CharacterOrSymbolBox1.id = 'CharacterOrSymbolBox1';
				CharacterOrSymbolBox1.width = CharacterWidth;
				CharacterOrSymbolBox1.percentHeight = 100;
				CharacterOrSymbolBox1.percentWidth = 100;
				CharacterOrSymbolBox1.setStyle('borderColor','blue');
				CharacterOrSymbolBox1.setStyle('borderAlpha',.5);
				CharacterOrSymbolBox1.setStyle('borderVisible',true);
				var BoxHorizontalLayout:LayoutBase;
				BoxHorizontalLayout = new HorizontalLayout();
				//var BoxHorizontalLayout = new HorizontalLayout();
				BoxHorizontalLayout.horizontalAlign = 'center';
				BoxHorizontalLayout.verticalAlign = 'middle';
				BoxHorizontalLayout.gap = 0;
				BoxHorizontalLayout.clipAndEnableScrolling = true;
				CharacterOrSymbolBox1.includeInLayout = true; CharacterOrSymbolBox1.visible = true;
				PlateElementsContainer.addElement(CharacterOrSymbolBox1); */
				
				CenterSymbolBox = new HGroup;
				CenterSymbolBox.id = 'CenterSymbolBox';
				CenterSymbolBox.width = SymbolWidth;
				CenterSymbolBox.height = SymbolHeight;
				CenterSymbolBox.horizontalAlign = 'center';
				CenterSymbolBox.verticalAlign = 'middle';
				CenterSymbolBox.includeInLayout = false; CenterSymbolBox.visible = false;
				PlateElementsContainer.addElement(CenterSymbolBox);
				
				CharacterOrSymbolBox2A = new HGroup;
				CharacterOrSymbolBox2A.id = 'CharacterOrSymbolBox2A';
				CharacterOrSymbolBox2A.width = CharacterWidth;
				CharacterOrSymbolBox2A.percentHeight = 100;
				CharacterOrSymbolBox2A.percentWidth = 100;
				CharacterOrSymbolBox2A.clipAndEnableScrolling=true;
				CharacterOrSymbolBox2A.horizontalAlign = 'center';
				CharacterOrSymbolBox2A.verticalAlign = 'middle';
				CharacterOrSymbolBox2A.gap = 0;
				CharacterOrSymbolBox2A.includeInLayout = false; CharacterOrSymbolBox2A.visible = false;
				PlateElementsContainer.addElement(CharacterOrSymbolBox2A);
				
				CharacterOrSymbolBox2B = new HGroup;
				CharacterOrSymbolBox2B.id = 'CharacterOrSymbolBox2B';
				CharacterOrSymbolBox2B.width = CharacterWidth;
				CharacterOrSymbolBox2B.percentHeight = 100;
				CharacterOrSymbolBox2B.percentWidth = 100;
				CharacterOrSymbolBox2B.clipAndEnableScrolling=true;
				CharacterOrSymbolBox2B.horizontalAlign = 'center';
				CharacterOrSymbolBox2B.verticalAlign = 'middle';
				CharacterOrSymbolBox2B.gap = 0;
				CharacterOrSymbolBox2B.includeInLayout = false; CharacterOrSymbolBox2B.visible = false;
				PlateElementsContainer.addElement(CharacterOrSymbolBox2B);
				
				RightSymbolBox = new HGroup;
				RightSymbolBox.id = 'RightSymbolBox';
				RightSymbolBox.width = SymbolWidth;
				RightSymbolBox.height = SymbolHeight;
				RightSymbolBox.horizontalAlign = 'center';
				RightSymbolBox.verticalAlign = 'middle';
				RightSymbolBox.includeInLayout = false; RightSymbolBox.visible = false;
				PlateElementsContainer.addElement(RightSymbolBox);
				
				RightDatesBox = new VGroup;
				RightDatesBox.id = 'RightDatesBox';
				RightDatesBox.width = DatesWidth;
				RightDatesBox.height = DatesHeight;
				RightDatesBox.horizontalAlign = 'center';
				RightDatesBox.verticalAlign = 'middle';
				RightDatesBox.setStyle('kerning',false);
				RightDatesBox.includeInLayout = false; RightDatesBox.visible = false;
				PlateElementsContainer.addElement(RightDatesBox);
				
				RightFlagBox = new HGroup;
				RightFlagBox.id = 'RightFlagBox';
				RightFlagBox.width = FlagWidth;
				RightFlagBox.height = FlagHeight;
				RightFlagBox.horizontalAlign = 'center';
				RightFlagBox.verticalAlign = 'middle';
				RightFlagBox.includeInLayout = false; RightFlagBox.visible = false;
				PlateElementsContainer.addElement(RightFlagBox);
			}
			
			private function AddFlagToLeftFlagBox(event:MouseEvent):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlagImage.source;
				plateimage.width = FlagWidth;
				plateimage.height = FlagHeight;
				
				LeftFlagBox.includeInLayout=true; LeftFlagBox.visible=true;
				LeftFlagBox.addElement(plateimage);
				
				StackAction.push(plateimage);
			}
			
			private function AddDatesToLeftDatesBox(event:MouseEvent):void 
			{
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				
				var plategroup:VGroup = new VGroup;
				plategroup.width = DatesWidth;
				plategroup.height = DatesHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.gap = 5;
				
				var D1:Label = new Label;
				
				if(Debugging) Alert.show('Date1Save:');
				if(Debugging) Alert.show(String(Date1Save));
				if(Debugging) Alert.show('Date2Save:');
				if(Debugging) Alert.show(String(Date2Save));
				if(Debugging) Alert.show('Date3Save:');
				if(Debugging) Alert.show(String(Date3Save));
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				if(Debugging) Alert.show(D1.text);
				
				D1.width = 24;
				D1.styleName = 'PlateDates';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.width = 24;
				D2.styleName = 'PlateDates';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.width = 24;
				D3.styleName = 'PlateDates';
				D3.setStyle('color','black');
				
				if(Debugging) Alert.show('D1text:');
				if(Debugging) Alert.show(D1.text);
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
								
				LeftDatesBox.includeInLayout=true; LeftDatesBox.visible=true;
				LeftDatesBox.addElement(plategroup);
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				StackAction.push(plategroup);
			}
			
			private function AddDatesToRightDatesBox(event:MouseEvent):void
			{
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				
				var plategroup:VGroup = new VGroup;
				plategroup.width = DatesWidth;
				plategroup.height = DatesHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.gap = 5;
				
				var D1:Label = new Label;
				
				if(Debugging) Alert.show('Date1Save:');
				if(Debugging) Alert.show(String(Date1Save));
				if(Debugging) Alert.show('Date2Save:');
				if(Debugging) Alert.show(String(Date2Save));
				if(Debugging) Alert.show('Date3Save:');
				if(Debugging) Alert.show(String(Date3Save));
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				if(Debugging) Alert.show(D1.text);
				
				D1.width = 24;
				D1.styleName = 'PlateDates';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.width = 24;
				D2.styleName = 'PlateDates';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.width = 24;
				D3.styleName = 'PlateDates';
				D3.setStyle('color','black');
				
				if(Debugging) Alert.show('D1text:');
				if(Debugging) Alert.show(D1.text);
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
				
				RightDatesBox.includeInLayout=true; RightDatesBox.visible=true;
				RightDatesBox.addElement(plategroup);
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				StackAction.push(plategroup);
			}
			
			private function AddFlagToRightFlagBox(event:MouseEvent):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlagImage.source;
				plateimage.width = FlagWidth;
				plateimage.height = FlagHeight;
				
				RightFlagBox.includeInLayout=true; RightFlagBox.visible=true;
				RightFlagBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			private function AddSymbolToLeftSymbolBox(event:MouseEvent):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				LeftSymbolBox.includeInLayout=true;
				LeftSymbolBox.visible=true;
				LeftSymbolBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			private function AddSymbolToCenterSymbolBox(event:MouseEvent):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				CenterSymbolBox.includeInLayout=true; CenterSymbolBox.visible=true;
				CenterSymbolBox.addElement(plateimage);
				
				//Include 2nd character box for characters to the right of the symbol and switch the underlne
				CenterSymbol=true;
				
				ChangeCurrentCharacterOrSymbolBox();
				SetUnderlines();
				
				StackAction.push();
			}

			private function AddSymbolToRightSymbolBox(event:MouseEvent):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				RightSymbolBox.includeInLayout=true; RightSymbolBox.visible=true;
				RightSymbolBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			private function AddSymbolToCurrentCharacterOrSymbolBox(event:MouseEvent):void
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				ChangeCurrentCharacterOrSymbolBox();
				SetUnderlines();
				
				if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1A')
				{
					CharacterOrSymbolBox1A.addElement(plateimage);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1B')
				{
					CharacterOrSymbolBox1B.addElement(plateimage);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2A')
				{
					CharacterOrSymbolBox2A.addElement(plateimage);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2B')
				{
					CharacterOrSymbolBox2B.addElement(plateimage);
				}
			}
			
			private function CloseGallery(event:MouseEvent):void 
			{
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			private function AddCharacterToPlate(event:MouseEvent):void 
			{
				var keypadbutton:Button = event.target as Button;
				var platelabel:Label = new Label;
				
				platelabel.width = CharacterWidth;
				platelabel.height = CharacterHeight;
				platelabel.text = keypadbutton.label;
				platelabel.styleName = 'PlateTextLarge';
// !!!
				platelabel.setStyle('color', FoilColor);
				//platebutton.setStyle('skinClass', 'skins.TransparentButtonSkin');
				
				//ChangeCurrentCharacterOrSymbolBox();
				
				if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1A')
				{
					CharacterOrSymbolBox1A.addElement(platelabel);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1B')
				{
					CharacterOrSymbolBox1B.addElement(platelabel);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2A')
				{
					CharacterOrSymbolBox2A.addElement(platelabel);
				}
				else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2B')
				{
					CharacterOrSymbolBox2B.addElement(platelabel);
				}
				
				CharactersAdded = (CharactersAdded + 1);
				
				StackAction.push()
					
				SetUnderlines();
			}
			
			private function ChangeLineCount(event:MouseEvent,RequestedLineCount:int):void
			{
				if (RequestedLineCount == 1)
				{
					if (TwoLines == false)
					{
						//Do nothing
					}
					else if (TwoLines == true)
					{
						//Reset to 1 line
						TwoLines = false;
						CharacterSize = 'Large';
					}
				}
				else if (RequestedLineCount == 2)
				{
					if (TwoLines == false)
					{
						//Set to 2 lines
						TwoLines = true;
						CharacterSize = 'Medium';
					}
					else if (TwoLines == true)
					{
						//Do nothing
					}
				}
				
				SetCharacterSize();
			}		
			
			private function ChangeCurrentCharacterOrSymbolBox():void
			{
				if (TwoLines == false)
				{
					if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1A')
					{
						CurrentCharacterOrSymbolBox = 'CharacterOrSymbolBox2A';
						CharacterOrSymbolBox2.includeInLayout=true; CharacterOrSymbolBox2.visible=true;
						CharacterOrSymbolBox2A.includeInLayout=true; CharacterOrSymbolBox2A.visible=true;
					}
					else if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1B')
					{
						//Do nothing
					}
				}
				else if (TwoLines == true)
				{
					if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1A')
					{
						CurrentCharacterOrSymbolBox = 'CharacterOrSymbolBox1B';
						CharacterOrSymbolBox1B.includeInLayout=true; CharacterOrSymbolBox1B.visible=true;
					}
					if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox1B')
					{
						CurrentCharacterOrSymbolBox = 'CharacterOrSymbolBox2A';
						CharacterOrSymbolBox2.includeInLayout=true; CharacterOrSymbolBox2.visible=true;
						CharacterOrSymbolBox2A.includeInLayout=true; CharacterOrSymbolBox2A.visible=true;
					}
					if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2A')
					{
						CurrentCharacterOrSymbolBox = 'CharacterOrSymbolBox2B';
						CharacterOrSymbolBox2.includeInLayout=true; CharacterOrSymbolBox2.visible=true;
						CharacterOrSymbolBox2B.includeInLayout=true; CharacterOrSymbolBox2B.visible=true;
					}
					if (CurrentCharacterOrSymbolBox == 'CharacterOrSymbolBox2B')
					{
						//Do nothing
					}
				}
			}
			
			private function SetUnderlines():void
			{
				if (TwoLines == false)
				{
					if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox1A')
					{
						CharacterOrSymbolBox1AUnderline.visible = false;
						CharacterOrSymbolBox2AUnderline.visible = false;
						CharacterOrSymbolBox1BUnderline.visible = false;
						CharacterOrSymbolBox2BUnderline.visible = false;
					}
					else if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox2A')
					{
						CharacterOrSymbolBox1AUnderline.visible = false;
						CharacterOrSymbolBox2AUnderline.visible = true;
						CharacterOrSymbolBox1BUnderline.visible = false;
						CharacterOrSymbolBox2BUnderline.visible = false;
					}
				}
				else if (TwoLines == true)
				{
					if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox1A')
					{
						CharacterOrSymbolBox1AUnderline.visible = true;
						CharacterOrSymbolBox2AUnderline.visible = false;
						CharacterOrSymbolBox1BUnderline.visible = false;
						CharacterOrSymbolBox2BUnderline.visible = false;
					}
					else if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox1B')
					{
						CharacterOrSymbolBox1AUnderline.visible = false;
						CharacterOrSymbolBox2AUnderline.visible = true;
						CharacterOrSymbolBox1BUnderline.visible = false;
						CharacterOrSymbolBox2BUnderline.visible = false;
					}
					else if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox2A')
					{
						CharacterOrSymbolBox1AUnderline.visible = false;
						CharacterOrSymbolBox2AUnderline.visible = false;
						CharacterOrSymbolBox1BUnderline.visible = true;
						CharacterOrSymbolBox2BUnderline.visible = false;
					}
					else if (CurrentCharacterOrSymbolBox =='CharacterOrSymbolBox2B')
					{
						CharacterOrSymbolBox1AUnderline.visible = false;
						CharacterOrSymbolBox2AUnderline.visible = false;
						CharacterOrSymbolBox1BUnderline.visible = false;
						CharacterOrSymbolBox2BUnderline.visible = true;
					}
				}
			}
						
			private function UndoLastAction(event:MouseEvent):void
			{
				if (StackAction.length > 0)
				{
					CharactersAdded = (CharactersAdded - 1);
					PlateElementsContainer.removeElementAt(StackAction.length);
					StackAction.pop();
				}
			}
			
			private function ClearPlate(event:MouseEvent):void
			{
				PlateElementsContainer.removeAllElements();
				AddPlateElementsContainerChildren();
				CharactersAdded = 0;
				CenterSymbol = false;
				SetUnderlines();
			}
			
			private function ResetPlate(event:MouseEvent):void
			{
				PlateIsImage = false;
				FoilIsImage = false;
				SetDefaults();
				SetPreviewPlateImage();
				SetPreviewPlateNonImage();
				PlateElementsContainer.removeAllElements();
				AddPlateElementsContainerChildren();
				CharactersAdded = 0;
				SetUnderlines();
			}
			
			/*		
			Constants:
			
			SmallPlateHeight (in mm)
			SmallPlateWidth (in mm)
			MediumPlateHeight (in mm)
			MediumPlateWidth (in mm)
			LargePlateHeight (in mm)
			LargePlateWidth (in mm)
			SmallCharacterWidth (in mm)
			SmallCharacterHeight (in mm)
			MediumCharacterWidth (in mm)
			MediumCharacterHeight (in mm)
			LargeCharacterHeight (in mm)
			LargeCharacterWidth (in mm)
			DateHeight (in mm)
			DatePairWidth (in mm)
			DatePairLeading (in mm)
			SymbolHeight (in mm)
			LargeFlagHeight (in mm)
			LargeFlagWidth (in mm)
			SmallFlagHeight (in mm)
			SmallFlagWidth (in mm)
			HoleCenterPointOffsetFromEdge (in mm)
			CupSize (in mm)
			HolesPriceEUR (float)
			CupsPriceEUR (float)
			*/
			
			/*			[Bindable]
			private var GermanCharacters_Small_AC:ArrayCollection = new ArrayCollection([
			//In points
			//For IDs C2, C17, and C24, need to prefix Label with "&#" and suffix with ";" when rendering (e.g., "&#196;")
			{ID:"C1", Label:"A", FontID:"1", FontSize:"25"},
			{ID:"C2", Label:"&#196;", FontID:"1", FontSize:"25"},
			{ID:"C3", Label:"B", FontID:"1", FontSize:"25"},
			{ID:"C4", Label:"C", FontID:"1", FontSize:"25"},
			{ID:"C5", Label:"D", FontID:"1", FontSize:"25"},
			{ID:"C6", Label:"E", FontID:"1", FontSize:"25"},
			{ID:"C7", Label:"F", FontID:"1", FontSize:"25"},
			{ID:"C8", Label:"G", FontID:"1", FontSize:"25"},
			{ID:"C9", Label:"H", FontID:"1", FontSize:"25"},
			{ID:"C10", Label:"I", FontID:"1", FontSize:"25"},
			{ID:"C11", Label:"J", FontID:"1", FontSize:"25"},
			{ID:"C12", Label:"K", FontID:"1", FontSize:"25"},
			{ID:"C13", Label:"L", FontID:"1", FontSize:"25"},
			{ID:"C14", Label:"M", FontID:"1", FontSize:"25"},
			{ID:"C15", Label:"N", FontID:"1", FontSize:"25"},
			{ID:"C16", Label:"O", FontID:"1", FontSize:"25"},
			{ID:"C17", Label:"&#214;", FontID:"1", FontSize:"25"},
			{ID:"C18", Label:"P", FontID:"1", FontSize:"25"},
			{ID:"C19", Label:"Q", FontID:"1", FontSize:"25"},
			{ID:"C20", Label:"R", FontID:"1", FontSize:"25"},
			{ID:"C21", Label:"S", FontID:"1", FontSize:"25"},
			{ID:"C22", Label:"T", FontID:"1", FontSize:"25"},
			{ID:"C23", Label:"U", FontID:"1", FontSize:"25"},
			{ID:"C24", Label:"&#220;", FontID:"1", FontSize:"25"},
			{ID:"C25", Label:"V", FontID:"1", FontSize:"25"},
			{ID:"C26", Label:"W", FontID:"1", FontSize:"25"},
			{ID:"C27", Label:"X", FontID:"1", FontSize:"25"},
			{ID:"C28", Label:"Y", FontID:"1", FontSize:"25"},
			{ID:"C29", Label:"Z", FontID:"1", FontSize:"25"},
			{ID:"C30", Label:"1", FontID:"1", FontSize:"25"},
			{ID:"C31", Label:"2", FontID:"1", FontSize:"25"},
			{ID:"C32", Label:"3", FontID:"1", FontSize:"25"},
			{ID:"C33", Label:"4", FontID:"1", FontSize:"25"},
			{ID:"C34", Label:"5", FontID:"1", FontSize:"25"},
			{ID:"C35", Label:"6", FontID:"1", FontSize:"25"},
			{ID:"C36", Label:"7", FontID:"1", FontSize:"25"},
			{ID:"C37", Label:"8", FontID:"1", FontSize:"25"},
			{ID:"C38", Label:"9", FontID:"1", FontSize:"25"},
			{ID:"C39", Label:"0", FontID:"1", FontSize:"25"},
			{ID:"C40", Label:"-", FontID:"1", FontSize:"25"},
			{ID:"C41", Label:".", FontID:"1", FontSize:"25"},
			{ID:"C42", Label:"?", FontID:"1", FontSize:"25"},
			]);  */
			
			/*			private var GermanCharacters_Medium_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"50"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"50"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"50"}
			//..
			]);
			
			private var GermanCharacters_Large_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"75"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"75"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"75"}
			//..
			]);
			
			[Bindable]
			private var Spacers_AC:ArrayCollection = new ArrayCollection([
			//in mm
			{Width:"20", Label:""},
			{Width:"30", Label:""},
			{Width:"40", Label:""}
			]);
			*/
			
			
			/*			
			[Bindable]
			private var SmallPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var MediumPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidRed", Label"Solid red", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargePlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidYellow", Label:"Solid Yellow", ColorSpec:"blue", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var FoilStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", Label:"Solid Blue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var Stickers_AC:ArrayCollection = new ArrayCollection([
			{ID:"Dalmation", Label:"Dalmation", Width:"20", Height:"50", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargeFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var SmallFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var DefaultsByCountry_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", LanguageID:"DE", PlateSizeID:"GL", PlateStyleID:"PlateStyleID",
			FoilStyleID:"FoilID", Date:"112233", SymbolID:"SymbolID", StickerID:"StickerID", FlagID:"FlagID", 
			Currency:"EUR"}
			]);	
			
			private function application1_creationCompleteHandler():void {
			Button_A.addEventListener(MouseEvent.CLICK, AddCharacterAToPlate);
			Button_Au.addEventListener(MouseEvent.CLICK, AddCharacterAuToPlate);
			ClearTextButton.addEventListener(MouseEvent.CLICK, ClearPlate);
			ClearPlateButton.addEventListener(MouseEvent.CLICK, ClearAll);
			StartOverButton.addEventListener(MouseEvent.CLICK, StartOver);
			}
			
			private function ConvertMMtoPixels {
			//Varies by font family?
			}
			
			private function SetPlateSize(event:MouseEvent) {
			//Change dropdownlist content
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetPlateStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function SetFoilStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function Change1LineTo2Lines(event:MouseEvent) {
			//If plate size is not large, prompt to change
			//If character size is not small, prompt to change character size to small
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function Change2LinesTo1Line(event:MouseEvent) {
			//Prompt to increase character size to medium or large (large if text fits)
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetCharacterSize(event:MouseEvent) {
			//Prompt to clear text if new-size characters will not fit
			//Recalculate price
			}
			
			private function AddCharacterToPlate(event:MouseEvent) {	
			//Alert if no room to add
			}
			
			private function AddSymbolToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddDatesToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddStickerToPlate {	
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddFlagToPlate {
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddHolesAndCupstoPlate {
			//Position as specified
			//Recalculate price
			}
			*/
		]]>
	</fx:Script>
	
	<!-- Outer (basic) container -->
	<s:BorderContainer id="OuterContainer"
					   width="540" height="406" horizontalCenter="0" verticalCenter="0" borderVisible="true">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<!-- Inner (vertical) container -->
		<s:BorderContainer id="InnerContainer"
						   x="0" y="0" width="{OuterContainer.width-2}" height="{OuterContainer.height-2}" borderVisible="false" depth="2">
			<s:layout>
				<s:VerticalLayout paddingTop="10" paddingBottom="4" paddingLeft="10" paddingRight="10" gap="0"/>
			</s:layout>
			
			<!-- Preview container.  Background color or image set via functions -->
			<s:BorderContainer id="PreviewContainer"
							   width="520" height="113" borderVisible="true" borderWeight="2" cornerRadius="8" depth="1"
							   creationComplete="SetDefaultPreview()">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<!-- Holes -->
				<s:Ellipse id="TopLeftHole"
						   x="5" y="5" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="TopRightHole"
						   x="501" y="5" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleLeftHole"
						   x="5" y="49.5" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleRightHole"
						   x="501" y="49.5" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomLeftHole"
						   x="5" y="94" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomRightHole"
						   x="501" y="94" visible="false" width="8" height="8" depth="11">
					<s:fill>
						<s:SolidColor color="white" alpha="1"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
					</s:stroke>
				</s:Ellipse>
				<!-- Suction cups -->
				<s:Ellipse id="TopLeftCup"
						   x="0" y="0" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="TopRightCup"
						   x="496" y="0" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleLeftCup"
						   x="0" y="44.5" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleRightCup"
						   x="496" y="44.5" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomLeftCup"
						   x="0" y="89" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomRightCup"
						   x="496" y="89" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<!-- Plate outer (border) container.  Border color is set via function. -->
				<s:BorderContainer id="PlateBorder"
								   x="1" y="1" width="514" height="107" borderVisible="false" backgroundAlpha="0" depth="2">
					<s:layout>
						<s:BasicLayout/>
					</s:layout>
					<!-- NonImageBorder.  Border color is set via function. -->
					<s:BorderContainer id="PlateNonImageBorder" x="0" y="0" width="100%" height="100%" includeInLayout="false" visible="false"
									   borderWeight="5" cornerRadius="8" borderStyle="inset" backgroundAlpha="0"/>
					<!-- ImageBorder.  Source is set via function. -->
					<s:Image id="PlateImageBorder" x="0" y="0" width="100%" height="100%" includeInLayout="false" visible="false"
							 horizontalAlign="center" verticalAlign="top" 
							 fillMode="scale" scaleMode="stretch"/>
					
					<!-- Plate elements container.  BackgroundColor or image set via functions -->
					<s:BorderContainer id="PlateElementsContainer"
									   x="5" y="5" width="505" height="98" backgroundAlpha="0" borderVisible="false" depth="6">
						<s:layout>
							<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												horizontalAlign="left" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
						</s:layout>
						<!--Multiple containers for potential elements, which are hidden and shown as needed-->
						<s:HGroup id="LeftFlagBox" width="{FlagWidth}" height="100%" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" visible="false"/>
						<s:VGroup id="LeftDatesBox" width="{DatesWidth}" height="100%" includeInLayout="false" visible="false"
								  horizontalAlign="center" verticalAlign="middle" kerning="off" clipAndEnableScrolling="true">
							<!--s:Rect width="100%" height="100%">
								<s:stroke>
									<s:SolidColorStroke color="black"/>
								</s:stroke>
							</s:Rect-->
						</s:VGroup>
						<s:HGroup id="LeftSymbolBox" width="{SymbolWidth}" height="100%" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" visible="false"/>
						<s:VGroup id="CharacterOrSymbolBox1" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="10"
								  clipAndEnableScrolling="true" includeInLayout="true" visible="true">
							<s:HGroup id="CharacterOrSymbolBox1A" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="0"
									  clipAndEnableScrolling="true" includeInLayout="true" visible="true"/>
							<s:HGroup id="CharacterOrSymbolBox1B" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="0"
									  clipAndEnableScrolling="true" includeInLayout="false" visible="false"/>
						</s:VGroup>
						<!--s:BorderContainer id="CharacterOrSymbolBox1" width="100%" height="100%" borderVisible="true" borderColor="blue" borderAlpha="1" includeInLayout="true" visible="true">
										   <s:layout>
											   <s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
										   </s:layout>
							</s:BorderContainer-->
						<s:HGroup id="CenterSymbolBox" width="{SymbolWidth}" height="100%" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" visible="false"/>
						<s:VGroup id="CharacterOrSymbolBox2" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="10"
								  clipAndEnableScrolling="true" includeInLayout="false" visible="false">
							<s:HGroup id="CharacterOrSymbolBox2A" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="0"
									  clipAndEnableScrolling="true" includeInLayout="true" visible="true"/>
							<s:HGroup id="CharacterOrSymbolBox2B" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="0"
									  clipAndEnableScrolling="true" includeInLayout="false" visible="false"/>
						</s:VGroup>
						<s:HGroup id="RightSymbolBox" width="{SymbolWidth}" height="100%" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" visible="false"/>
						<s:VGroup id="RightDatesBox" width="{DatesWidth}" height="100%" includeInLayout="false" visible="false"
								  horizontalAlign="center" verticalAlign="middle" kerning="off" clipAndEnableScrolling="true">
							<!--s:Rect width="100%" height="100%">
								<s:stroke>
									<s:SolidColorStroke color="black"/>
								</s:stroke>
							</s:Rect-->
						</s:VGroup>
						<s:HGroup id="RightFlagBox" width="{FlagWidth}" height="{FlagHeight}" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" visible="false"/>
					</s:BorderContainer>
					
					<mx:HRule id="CharacterOrSymbolBox1AUnderline"
							  x="{CharacterOrSymbolBox1.x}" y="47" width="{CharacterOrSymbolBox1.width}" height="4" strokeColor="0x00ced1" strokeWidth="1" visible="false" depth="14"/>
					<mx:HRule id="CharacterOrSymbolBox1BUnderline"
							  x="{CharacterOrSymbolBox1.x}" y="94" width="{CharacterOrSymbolBox1.width}" height="4" strokeColor="0x00ced1" strokeWidth="1" visible="false" depth="14"/>
					<mx:HRule id="CharacterOrSymbolBox2AUnderline" 
							  x="{CharacterOrSymbolBox2.x}" y="47" width="{CharacterOrSymbolBox2.width}" height="4" strokeColor="0x00ced1" strokeWidth="1" visible="false" depth="14"/>
					<mx:HRule id="CharacterOrSymbolBox2BUnderline" 
							  x="{CharacterOrSymbolBox2.x}" y="94" width="{CharacterOrSymbolBox2.width}" height="4" strokeColor="0x00ced1" strokeWidth="1" visible="false" depth="14"/>

				</s:BorderContainer>
			</s:BorderContainer>

			<!-- Error message and control to clear plate elements -->
			<s:BorderContainer width="100%" height="16" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="0"/>
				</s:layout>
				<!-- Controls to reset plate elements -->
				<s:BorderContainer width="169" height="16" borderVisible="false">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
											paddingTop="1" paddingBottom="0" paddingLeft="0" paddingRight="0"
											gap="5"/>				
					</s:layout>
					<s:Button id="UndoButton" label="Undo" 
							  width="35" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="UndoLastAction(event)"/>
					<s:Button id="ClearButton" label="Clear plate" 
							  width="65" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="ClearPlate(event)"/>
					<s:Button id="ResetButton" label="Start over"
							  width="55" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="ResetPlate(event)"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Controls to set the plate size -->
			<s:BorderContainer width="100%" height="33.9" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout gap="4" verticalAlign="middle"/>
				</s:layout>
				<s:BorderContainer width="80" height="34" borderVisible="false">
					<s:layout>
						<s:VerticalLayout verticalAlign="middle"
										  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<mx:Text text="Plate size"
							 width="100%" height="35"
							 verticalCenter="0" leading="0"
							 styleName="DirectiveLabel"/>
				</s:BorderContainer>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   selected="true"/>
				<s:BorderContainer width="156" height="33.9" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout  horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="520mm x 113mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"/>
				<s:BorderContainer width="120" height="33.9" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="400mm x 113mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"/>
				<s:BorderContainer width="78" height="22.5" borderVisible="true" cornerRadius="5">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="290mm x 75mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="2"/>
			
			<!-- Controls to choose orientation et al -->
			<s:BorderContainer width="100%" height="24" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>				
				</s:layout>
				
				<mx:Text text="How many lines of text"
						 width="145" verticalCenter="0"
						 styleName="DirectiveLabel"/>
				<s:RadioButton groupName="LineCount" 
							   width="10" verticalCenter="0" symbolColor="blue"
							   selected="true"/>
				<mx:Text text="1 line"
						 width="36" verticalCenter="0"
						 fontFamily="Arial" fontSize="11" 
						 click="ChangeLineCount(event,1)"/>
				<s:RadioButton groupName="LineCount" 
							   width="10" verticalCenter="0"/>
				<mx:Text text="2 lines"
						 width="38" verticalCenter="0"
						 fontFamily="Arial" fontSize="11"
						 click="ChangeLineCount(event,2)"/>
				<s:Spacer width="4"/>
				<mx:Text text="Date, symbols, colors, and holes"
						 width="251.4" verticalCenter="0" horizontalCenter="134"
						 leading="0" textAlign="center"
						 styleName="DirectiveLabel"/>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Outer container for plate content controls -->
			<s:BorderContainer width="100%" height="196" 
							   borderVisible="false">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="8"/>
				</s:layout>
				<s:BorderContainer width="100%" height="100%" 
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<!-- Outer container for character buttons -->
					<s:BorderContainer id="CharacterButtonContainer"
									   width="320" height="164"
									   borderVisible="true">
						<s:layout>
							<s:VerticalLayout paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4"
											  gap="2"/>
						</s:layout>
						<s:BorderContainer width="100%" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C1_Button" label="A"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0"
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C2_Button" label="&#196;"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C3_Button" label="B"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C4_Button" label="C" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C5_Button" label="D" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C6_Button" label="E" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C7_Button" label="F" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C8_Button" label="G" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C9_Button" label="H" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C10_Button" label="I" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C11_Button" label="J" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C12_Btn" label="K" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C13_Button" label="L" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C14_Button" label="M" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C15_Button" label="N" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C16_Button" label="O" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C17_Button" label="&#214;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C18_Button" label="P" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C19_Button" label="Q" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C20_Button" label="R" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C21_Button" label="S" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C22_Button" label="T" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C23_Button" label="U" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C24_Button" label="&#220;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C25_Button" label="V" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C26_Button" label="V" color="red"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C27_Button" label="X" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C28_Button" label="Y" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C29_Button" label="Z" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C30_Button" label="1" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C31_Button" label="2" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C32_Button" label="3" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C33_Button" label="4" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C34_Button" label="5" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C35_Button" label="6" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C36_Button" label="7" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C37_Button" label="8" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C38_Button" label="9" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C39_Button" label="0" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C40_Button" label="-" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C41_Button" label="." 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C42_Button" label="?" 
									  width="{CharacterButtonWidth}" height="37"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Spacer width="1"/>
							<s:BorderContainer width="52" 
											   height="37"
											   borderVisible="false">
								<s:layout>
									<s:VerticalLayout horizontalAlign="left" verticalAlign="top"
													  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
								</s:layout>
								<s:BorderContainer width="52"
												   height="22"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" verticalAlign="top"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
															gap="2"/>
									</s:layout>
									<s:Button id="S1_Button" label="" 
											  width="23" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S2_Button" label=""
											  width="15" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S3_Button" label="" 
											  width="10" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
								</s:BorderContainer>
								<s:BorderContainer width="52"
												   height="12"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="bottom"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
									</s:layout>
									<s:Label text="Spaces"
											 width="40" height="12"
											 fontFamily="Arial" fontSize="11" fontWeight="normal"/>
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<s:Spacer height="4"/>
					
					<!-- Controls to set the plate size -->
					<s:BorderContainer width="100%" height="15" borderVisible="false">
						<s:layout>
							<s:HorizontalLayout gap="0" verticalAlign="middle"/>
						</s:layout>
						<mx:Text text="Text size"
								 width="63"
								 verticalCenter="0"
								 styleName="DirectiveLabel"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"/>
						<mx:Text text="ABC" 
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="19.75"/>
						<mx:Text text="(79mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="12"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"
									   selected="true"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="14.5"/>
						<mx:Text text="(58mm)" 
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="10"/>
						<mx:Text text="(40mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
					</s:BorderContainer>		
				</s:BorderContainer>
				
				<!-- Outer container for date controls and flag -->
				<s:BorderContainer width="42" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="2" paddingLeft="0" paddingRight="0"
										  gap="6"
										  horizontalAlign="left"/>
					</s:layout>
					
					<!-- Outer container for date controls -->		
					<s:BorderContainer width="100%" height="97" 
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center"
											  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="4"/>
						</s:layout>
						
						<s:NumericStepper id="Date1"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDates"/>
						<s:NumericStepper id="Date2"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDates"/>
						<s:NumericStepper id="Date3"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="99"
										  styleName="NumericStepperDates"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddDatesToLeftDatesBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDatesToLeftDatesBox(event)"/>
							<s:Button id="AddDatesToRightDatesBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDatesToRightDatesBox(event)"/>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Flag chooser -->
					<s:BorderContainer width="100%" height="60"
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="0" horizontalAlign="center" verticalAlign="top"/>
						</s:layout>
						<s:BorderContainer width="30" height="60"
										   borderVisible="true">
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image width="100%" height="100%"
									 horizontalAlign="center" verticalAlign="top"
									 source="{SelectedFlagSource}" fillMode="scale" scaleMode="stretch"									 
									 buttonMode="true" 
									 click="OpenFlagGallery(event)"/>
						</s:BorderContainer>
						<s:Image id="FlagGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenFlagGallery(event)"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddFlagToLeftFlagBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToLeftFlagBox(event)"/>
							<s:Button id="AddFlagToRightFlagBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToRightFlagBox(event)"/>
						</s:BorderContainer>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!-- Outer container for symbols, plate style, foil style, and holes -->
				<s:BorderContainer width="140.4" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="10"/>
					</s:layout>
					
					<!-- Outer container for symbols -->
					<s:BorderContainer width="100%" height="57"
									   borderVisible="false">
						<s:layout>
							<s:HorizontalLayout verticalAlign="top"
												paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												gap="0"/>
						</s:layout>
						
						<!-- Symbol chooser -->
						<s:BorderContainer width="57" height="63" borderVisible="false">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
												  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
							</s:layout>
							<s:BorderContainer width="57" height="57" minWidth="0" minHeight="0" borderVisible="true"
											   creationComplete="SetDefaultSymbol()">
								<s:layout>
									<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"/>
								</s:layout>	
								<s:Image id="SelectedSymbol"
										 width="100%" height="100%" 
										 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
										 source="{SelectedSymbolSource}" fillMode="scale"
										 buttonMode="true" click="OpenSymbolGallery(event)"/>
							</s:BorderContainer>
							<s:Image id="SymbolGalleryButton"
									 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
									 source="assets/down_triangle.png"
									 buttonMode="true" click="OpenSymbolGallery(event)"/>
						</s:BorderContainer>
						<s:Spacer width="3"/>
						<s:BorderContainer width="14" height="59" borderVisible="false">
							<s:layout>
								<s:VerticalLayout gap="1"/>
							</s:layout>
							<s:Button id="AddSymbolToCurrentCharacterOrSymbolBoxButton" label="X"
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToCurrentCharacterOrSymbolBox(event)"/>
							<s:Button id="AddSymbolToLeftSymbolBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToLeftSymbolBox(event)"/>
							<s:Button id="AddSymbolToCenterSymbolBoxButton" label="C" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToCenterSymbolBox(event)"/>
							<s:Button id="AddSymbolToRightSymbolBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToRightSymbolBox(event)"/>
						</s:BorderContainer>
						
						<s:Spacer width="8"/>
						
						<s:Button label="Line"
								  click="ChangeCurrentCharacterOrSymbolBox(); SetUnderlines()"/>
						
					</s:BorderContainer>
					
					<!-- Outer container for plate, foil, and holes controls -->
					<s:BorderContainer width="140" height="100%" borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="top" gap="0"/>
						</s:layout>
						
						<!-- Plate chooser -->
						<s:BorderContainer id="Plate_MiniPlateFrame" width="140.4" height="30.51" 
										   borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1"
										   click="SetPreviewPlate(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<s:BorderContainer id="Plate_MiniPlateNonImageContainer" includeInLayout="false" visible="false"
											   width="100%" height="{Plate_MiniPlateFrame.height-5}"
											   cornerRadius="3" borderVisible="true" borderColor="{Plate_MiniPlateFoilColor}" borderAlpha="1" borderWeight="2">
								<s:layout>
									<s:VerticalLayout paddingTop=".175" paddingBottom=".175" paddingLeft=".175" paddingRight=".175" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate NonImage-->
								<s:BorderContainer id="Plate_MiniPlateInnerNonImageContainer"
												   width="{Plate_MiniPlateNonImageContainer.width-4.25}" height="{Plate_MiniPlateNonImageContainer.height-4}" 
												   borderWeight=".175" cornerRadius="3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="{Plate_MiniPlatePlateColor}" backgroundAlpha="1"/>
							</s:BorderContainer>
							
							<s:BorderContainer id="Plate_MiniPlateImageContainer" includeInLayout="false" visible="false"
											   width="{Plate_MiniPlateFrame.width-2}" height="{Plate_MiniPlateFrame.height-4}"
											   cornerRadius="3" borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1">
								<s:layout>
									<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate image-->
								<s:BorderContainer id="Plate_MiniPlateInnerImageContainer"
												   width="100%" height="100%" cornerRadius="3" borderVisible="false">					   
									<s:layout>
										<s:BasicLayout clipAndEnableScrolling="true"/>
									</s:layout>
									<s:Image id="Plate_MiniPlateImage" width="100%" height="{Plate_MiniPlateImageContainer.height-3}" depth="1"
											 horizontalAlign="center" verticalAlign="middle"
											 source="{SelectedPlateImageSource}" fillMode="scale" scaleMode="stretch"/>
									<s:Rect id="Plate_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3" depth="2">                          
										<s:stroke>
											<s:SolidColorStroke weight="2" color="black" alpha="1"/>
										</s:stroke>
										<s:fill>
											<s:SolidColor alpha="0"/>
										</s:fill>
									</s:Rect>
								</s:BorderContainer>
								
							</s:BorderContainer>
							
						</s:BorderContainer>
						
						<s:Image id="PlateGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 buttonMode="true"
								 source="assets/down_triangle.png"
								 click="OpenPlateGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Foil chooser -->
						<s:BorderContainer id="Foil_MiniPlateContainer" width="140.4" height="30.51"						   
										   click="SetPreviewFoil(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="2" paddingBottom="4" paddingLeft="2" paddingRight="4" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<!--Foil MiniPlate NonImage-->
							<s:BorderContainer id="Foil_MiniPlateNonImageContainer" includeInLayout="false" visible="false"
											   width="{Foil_MiniPlateContainer.width-6}" height="{Foil_MiniPlateContainer.height-6}" 
											   borderWeight="3" cornerRadius="3" borderColor="{Foil_MiniPlateFoilColor}" borderAlpha="1" 
											   backgroundColor="{Foil_MiniPlatePlateColor}" backgroundAlpha="1">
								<s:layout>
									<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
													  paddingTop="-2" paddingBottom="-2" paddingLeft="-2" paddingRight="-3"/>
								</s:layout>
								<s:BorderContainer id="Foil_MiniPlateNonImageInnerContainer"
												   width="{Foil_MiniPlateNonImageContainer.width-4}" height="{Foil_MiniPlateNonImageContainer.height-4}"
												   cornerRadius="3" borderWeight=".3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="white" backgroundAlpha="0">
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<!--Foil MiniPlate image-->
						<s:BorderContainer id="Foil_MiniPlateImageContainer" includeInLayout="false" visible="false"
										   width="{Foil_MiniPlateNonImageContainer.width-4}" height="{Foil_MiniPlateNonImageContainer.height-4.5}" 
										   cornerRadius="3" borderVisible="false">					   
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image id="Foil_MiniPlateImage" width="100%" height="100%" depth="1"
									 horizontalAlign="center" verticalAlign="middle"
									 source="{SelectedFoilImageSource}" fillMode="scale" scaleMode="stretch"/>
							<s:Rect id="Foil_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3"  depth="2">                          
								<s:stroke>
									<s:SolidColorStroke weight="2.5" color="black" alpha="1"/>
								</s:stroke>
								<s:fill>
									<s:SolidColor alpha="0"/>
								</s:fill>
							</s:Rect>
						</s:BorderContainer>
						
						<s:Image id="FoilGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenFoilGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Holes chooser -->
						<s:BorderContainer width="140.4" height="30.51"
										   minWidth="0" minHeight="0"
										   borderVisible="true">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5"
												  gap="0"/>
							</s:layout>
							
							<s:Image id="SelectedHoles"
									 width="100%" height="100%" 
									 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
									 source="{SelectedHolesSource}" fillMode="scale" scaleMode="stretch"
									 buttonMode="true" click="SetHoles(event)"/>
						</s:BorderContainer>
						<s:Image id="HolesGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenHolesGallery(event)"/>
					</s:BorderContainer>
				</s:BorderContainer>
				
			</s:BorderContainer>
		</s:BorderContainer>
		
		<!--Height and width and padding involve GalleryList-->
		<s:BorderContainer id="GalleryWindow" width="323" height="268"
						   x="10" y="127" visible="false" borderVisible="true" borderColor="blue" dropShadowVisible="true" depth="10">
			<s:layout>
				<s:VerticalLayout paddingTop="-5" paddingBottom="-5" paddingLeft="10" paddingRight="0" gap="0"/>
			</s:layout>
			
			<mx:ViewStack id="Galleries" width="100%" height="100%" clipContent="true" creationPolicy="auto"
						  paddingTop="5" paddingBottom="5" paddingRight="0">
				
				<s:NavigatorContent id="PlateGallery" width="100%" height="100%">			
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="PlateGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer id="GP_A_Black" width="100%" height="100%"
												   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'BlackPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_Black" width="{GP_A_Black.width-2}" height="{GP_A_Black.height-2}"
													   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_Black" width="{GP_B_Black.width-6}" height="{GP_B_Black.height-6}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_White" width="100%" height="100%"
												   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'WhitePlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_White" width="{GP_A_White.width-2}" height="{GP_A_White.height-2}"
													   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_White" width="{GP_B_White.width-6}" height="{GP_B_White.height-6}"
														   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_LimeGreen" width="100%" height="100%"
												   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'LimeGreenPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_LimeGreen" width="{GP_A_LimeGreen.width-2}" height="{GP_A_LimeGreen.height-2}"
													   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_LimeGreen" width="{GP_B_LimeGreen.width-6}" height="{GP_B_LimeGreen.height-6}"
														   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
											<!--borderWeight=".025" borderColor="black"-->
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Black.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkBlue.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkYellow.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterBlue.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGold.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterRed.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/LightGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Pink.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Rainbow.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Raindrops.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Red.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ReflexWhite.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ShockingPink.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Silver.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Space.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/White.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<!--s:NavigatorContent>					
				<s:Group>
				<s:layout>
				<layouts:FlowLayout/>
				</s:layout>
				</s:Group>
				</s:NavigatorContent-->
				
				<s:NavigatorContent id="FoilGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FoilGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<layouts:FlowLayout padding="10" horizontalGap="3" verticalGap="6"/>
							<!--s:TileLayout rowHeight="38" columnWidth="135" requestedColumnCount="2" requestedRowCount="6" orientation="columns"
							columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="1" verticalGap="3"
							paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/-->
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer width="38" height="36" backgroundColor="black"
												   click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="BlackFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="white"
												   click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="BlackFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="black">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="BlackFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="white">
										</s:BorderContainer>
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer width="38" height="36" backgroundColor="white"
												   click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="WhiteFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="black"
												   click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="WhiteFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="white">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="WhiteFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="black">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<!--s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilPlate.png" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilPlate.png" 
								click="SelectFoil(event); CloseGallery(event);"/-->
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="HolesGallery" width="100%" height="100%" >
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="HolesGalleryList" width="100%" height="100%" 
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/NoneNone.jpg" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<!--s:BorderContainer width="100%" height="100%"
								borderVisible="true" borderWeight="1.5" cornerRadius="3">
								<s:layout>
								<s:BasicLayout/>
								</s:layout>
								<s:Rect x="2.5" y="2.5" width="100%" height="100%" radiusX="3" radiusY="3">                              
								<s:stroke>
								<s:SolidColorStroke weight="2" color="gray"/>
								</s:stroke>
								</s:Rect>
								<s:Ellipse depth="11" x="5.5" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:Ellipse depth="11" x="18" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:BorderContainer x="3" y="3"
								width="100%" height="100%" borderVisible="false" 
								horizontalCenter="0" verticalCenter="0">
								<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
								</s:layout>
								<mx:Text text="Holes in corners" styleName="NumericStepperDates"/>
								</s:BorderContainer>
								</s:BorderContainer-->
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="FlagGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FlagGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="68" columnWidth="34" requestedColumnCount="7" requestedRowCount="3"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="SymbolGallery" width="100%" height="100%">
					<!--fx:Script>
					<![CDATA[
					private var Symbols_AC:ArrayList = new ArrayList
					([
					{s:"Image", source:"assets/symbols/Audi.png"},
					{ID:"Audi", source:"assets/symbols/Audi.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BartSimpson", imageSource:"assets/symbols/BartSimpson.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BeerGlass", imageSource:"assets/symbols/BeerGlass", PriceEUR:"0.00", Discontinued:false, InStock:true}
					]);
					]]>
					</fx:Script-->				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="SymbolGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="34" columnWidth="34" requestedColumnCount="7" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
										  paddingTop="5" paddingBottom="5" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Audi.png" 
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BartSimpson.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BeerGlass.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BerlinBears.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BettyBoop.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bird.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BMW.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bowling.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cannabis.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Crown.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/DartBoard.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dog.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dolphin.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dragon.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Elephant.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/EuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/FerrisWheel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Football.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Ford.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/FormulaOne.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Helicopter.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/HelloKitty.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horseshoe.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>								
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargeHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargePeaceSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Lightning.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Left.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Right.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MAN.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Mercedes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MiddleFinger.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Moon&amp;Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Motorcycle.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MusicalNotes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Opel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pacifier.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/PalmTree.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Peugot.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pistol.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Playboy.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Rings.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Scania.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SEAT.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Skull&amp;Crossbones.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmallHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmileyFace.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Soccer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SpongeBob.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Telephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/TennisRacket.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Tractor.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Volkswagen.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Windsurfer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/WinnieThePooh.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
			</mx:ViewStack>
			
		</s:BorderContainer>
		
	</s:BorderContainer>
	
</s:Application>