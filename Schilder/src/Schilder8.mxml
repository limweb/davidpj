<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:layouts="org.flexlayouts.layouts.*"
			   width="100%" height="100%"
			   creationComplete="SetDefaults()">
	
	<fx:Style source="main.css"/>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.BubbleChart;
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.utils.ObjectUtil;
			
			import spark.components.VGroup;
			
			[Bindable] private var PlateName:String;
			[Bindable] private var PlateColor:uint;
			[Bindable] private var FoilName:String;
			[Bindable] private var FoilColor:uint;
			
			[Bindable] private var CharacterButtonWidth:Number = 26;
			[Bindable] private var CharacterButtonHeight:Number = 37;
			
			[Bindable] private var LargeCharacterWidth:Number = 35;
			[Bindable] private var LargeCharacterHeight:Number = 94;
			
			[Bindable] private var SymbolWidth:Number = 70;
			[Bindable] private var SymbolHeight:Number = 70;
			
			[Bindable] private var LargeFlagWidth:Number = 45;
			[Bindable] private var LargeFlagHeight:Number = 97;
			
			[Bindable] private var DatesWidth:Number = 36;
			[Bindable] private var DatesHeight:Number = 82;
			
			[Bindable] private var SelectedDate1:String;
			[Bindable] private var SelectedDate2:String;
			[Bindable] private var SelectedDate3:String;
			
			[Bindable] private var SelectedPlateImage:Image;
			[Bindable] private var SelectedPlateImageSource:String;
			[Bindable] private var SelectedFoilImage:Image;
			[Bindable] private var SelectedFoilImageSource:String;
			[Bindable] private var SelectedHolesImage:Image;
			[Bindable] private var SelectedHolesSource:String;
			[Bindable] private var SelectedFlagImage:Image;
			[Bindable] private var SelectedFlagSource:String;
			[Bindable] private var SelectedSymbolImage:Image;
			[Bindable] private var SelectedSymbolSource:String;
			
			[Bindable] private var PlateIsImage:Boolean;
			[Bindable] private var FoilIsImage:Boolean;
			
			[Bindable] private var Plate_MiniPlatePlateColor:uint;
			[Bindable] private var Plate_MiniPlateFoilColor:uint;
			[Bindable] private var Foil_MiniPlatePlateColor:uint;
			[Bindable] private var Foil_MiniPlateFoilColor:uint;
			
			
			private var StackAction:Array = new Array();
			
			private function SetDefaults():void
			{
				Alert.show('SetDefaults');
				SelectedFlagSource = 'assets/flags/nl.jpg';
				SelectedSymbolSource = 'assets/symbols/LargePeaceSign.png';
				SelectedPlateImageSource = 'assets/plates/DarkYellow.jpg';
				SelectedFoilImageSource = 'assets/foils/RedFoilPlate.png';
				SelectedHolesSource = 'assets/holes/TopCups.jpg';
				Plate_MiniPlateThingContainer.includeInLayout = true; Plate_MiniPlateThingContainer.visible = true;
				Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
				Foil_MiniPlateThingContainer.includeInLayout = true; Foil_MiniPlateThingContainer.visible = true;
				Foil_MiniPlateImageContainer.includeInLayout = false; Foil_MiniPlateImageContainer.visible = false;
				
				Alert.show('Plate_MiniPlatePlateColor:');
				Alert.show(String(Plate_MiniPlatePlateColor));
				Plate_MiniPlatePlateColor = 0x000000; //black
				Alert.show('Plate_MiniPlateFoilColor:');
				Alert.show(String(Plate_MiniPlateFoilColor));
				Plate_MiniPlateFoilColor = 0x000000; //black
				
				Alert.show('Foil_MiniPlatePlateColor:');
				Alert.show(String(Foil_MiniPlatePlateColor));
				Foil_MiniPlatePlateColor = 0xffffff; //white
				Alert.show('Foil_MiniPlatePlateColor:');
				Alert.show(String(Foil_MiniPlatePlateColor));
				Foil_MiniPlateFoilColor = 0x000000; //black
				
				PlateIsImage = false;
				FoilIsImage = false;
			}
			
			[Embed(source="assets/symbols/LargePeaceSign.png")]
			[Bindable]
			private var SelectedSymbolClass:Class;
			
			[Embed(source="assets/plates/DarkYellow.jpg")]
			[Bindable]
			private var SelectedPlateClass:Class;
			
// !!!
			[Embed(source="assets/plates/DarkYellow.jpg")]
			[Bindable]
			private var SelectedFoilClass:Class;
			
			private function SetDefaultSymbol():void
			{
				SelectedSymbolImage = SelectedSymbolClass as Image;
			}
			
			private function SetDefaultPreview():void
			{
				SetDefaultPreviewPlate();
				SetDefaultPreviewFoil();
				
				TopLeftHole.visible = true;
				TopRightHole.visible = true;
				TopLeftCup.visible = true;
				TopRightCup.visible = true;
			}
			
			private function SetDefaultPreviewPlate():void
			{	
				if (PlateIsImage == true)
				{
					Alert.show('SetDefaultPreviewPlate PlateIsImage=true');
					PlateThingBorder.includeInLayout = false; PlateThingBorder.visible = false;
					PlateImageBorder.includeInLayout = true; PlateImageBorder.visible = true;
					SetDefaultPreviewPlateImage();
				}
				else
				{
					Alert.show('SetDefaultPreviewPlate PlateIsImage=false');
					PlateThingBorder.includeInLayout = true; PlateThingBorder.visible = true;
					PlateImageBorder.includeInLayout = false; PlateImageBorder.visible = false;
					SetPreviewPlateThing();		
				}
			}
				
			private function SetDefaultPreviewFoil():void
				{	
				if (FoilIsImage == true)
				{
					Alert.show('SetDefaultPreviewFoil FoilIsImage=true');
					SetDefaultPreviewFoilImage();
				}
				else
				{
					Alert.show('SetDefaultPreviewFoil FoilIsImage=false');
					SetPreviewFoilThing();		
				}
			}
			
			private function SetPreviewPlate(event:MouseEvent):void
			{
				if (PlateIsImage == true)
				{
					Alert.show('SetPreviewPlate If PlateIsImage=true');
					Alert.show('SelectedPlateImage.source:');
					Alert.show(String(SelectedPlateImage.source));
					SetPreviewPlateImage();
				}
				else
				{
					Alert.show('SetPreviewPlate PlateIsImage=false');
					Alert.show('Plate_MiniPlatePlateColor:');
					Alert.show(String(Plate_MiniPlatePlateColor));
					PlateColor = Plate_MiniPlatePlateColor;
					Alert.show('Plate_MiniPlateFoilColor:');
					Alert.show(String(Plate_MiniPlateFoilColor));
					FoilColor = Plate_MiniPlateFoilColor;
					SetPreviewPlateThing();
				}
			}
			
			private function SetPreviewFoil(event:MouseEvent):void
			{
				if (FoilIsImage == true)
				{
					Alert.show('SetPreviewFoil FoilIsImage=true');
					Alert.show('SelectedFoilImage.source:');
					Alert.show(String(SelectedFoilImage.source));
					SetPreviewFoilImage();
				}
				else
				{
					Alert.show('SetPreviewFoil FoilIsImage=false');
					Alert.show('Foil_MiniPlatePlateColor:');
					Alert.show(String(Foil_MiniPlateFoilColor));
					FoilColor = Foil_MiniPlateFoilColor;
					SetPreviewFoilThing();		
				}
			}
			
			public const CharacterWidthLarge:Number = 90;
			public const CharacterHeightLarge:Number = 100;
			
			[Bindable] private var CenterSymbol:Boolean = false;
			[Bindable] private var CharactersAdded:Number = 0;
			
			/*public function OpenGallery(event:MouseEvent,GalleryName:String):void 
			{
				Galleries.selectedChild == GalleryName;
				GalleryWindow.visible = true;
			}*/
			
			public function OpenPlateGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = PlateGallery;
				GalleryWindow.visible = true;
			}
			
			public function OpenFoilGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FoilGallery;
				GalleryWindow.visible = true;
			}
			
			public function OpenHolesGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = HolesGallery;
				GalleryWindow.visible = true;
			}
			
			public function OpenFlagGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FlagGallery;
				GalleryWindow.visible = true;
			}
			
			public function OpenSymbolGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible = true;
			}
			
			public function SelectPlateGalleryImage(event:MouseEvent):void 
			{
				PlateIsImage = true;
				Plate_MiniPlateThingContainer.includeInLayout = false; Plate_MiniPlateThingContainer.visible = false;
				Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
				
				var PlateGalleryImage:Image;
				PlateGalleryImage = event.currentTarget as Image;
				SelectedPlateImage = PlateGalleryImage as Image;
				SelectedPlateImageSource = PlateGalleryImage.source as String;
				
				Alert.show('SelectPlateGalleryImage');
				Alert.show('PlateGalleryImage.source:');
				Alert.show(String(PlateGalleryImage.source));
			}
			
			public function SelectPlateGalleryThing(event:MouseEvent,PlateName:String):void 
			{;
				PlateIsImage = false;
				Plate_MiniPlateThingContainer.includeInLayout = true; Plate_MiniPlateThingContainer.visible = true;
				Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
				
				if (PlateName == 'BlackPlate')
				{
					Plate_MiniPlatePlateColor = 0x000000;
					Plate_MiniPlateFoilColor = 0x000000;
				}
				else if (PlateName == 'WhitePlate')
				{
					Plate_MiniPlatePlateColor = 0xffffff;
					Plate_MiniPlateFoilColor = 0xe6e6e6;
				}
				else if (PlateName == 'LimeGreenPlate')
				{
					Plate_MiniPlatePlateColor = 0x00ff00;
					Plate_MiniPlateFoilColor = 0x00e600;
				}
				
				Alert.show('SelectPlateGalleryThing');
				Alert.show('PlateName:');
				Alert.show(PlateName);
			}
			
			public function SelectFoilGalleryImage(event:MouseEvent):void 
			{
				FoilIsImage = true;
				var FoilGalleryImage:Image;
				FoilGalleryImage = event.currentTarget as Image;
				SelectedFoilImage = FoilGalleryImage;
				SelectedFoilImageSource = FoilGalleryImage.source as String;
				
				if (SelectedFoilImageSource.indexOf("Black") >= 0)
				{
					FoilName = "BlackFoil";
				}
				else if (SelectedFoilImageSource.indexOf("White") >= 0)
				{
					FoilName = "WhiteFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Blue") >= 0)
				{
					FoilName = "BlueFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Gold") >= 0)
				{
					FoilName = "GoldFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Green") >= 0)
				{
					FoilName = "GreenFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Pink") >= 0)
				{
					FoilName = "PinkFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Red") >= 0)
				{
					FoilName = "RedFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Silver") >= 0)
				{
					FoilName = "SilverFoil";
				}
				
				Alert.show('SelectFoilGalleryImage');
				Alert.show('FoilName:');
				Alert.show(FoilName);
			}
			
			public function SelectFoilGalleryThing(event:MouseEvent,FoilName:String):void 
			{
				FoilIsImage = false;
				Foil_MiniPlateThingContainer.includeInLayout = true;
				Foil_MiniPlateThingContainer.visible = true;
				
				if (FoilName == 'BlackFoil')
				{
					Foil_MiniPlatePlateColor = 0x000000;
					Foil_MiniPlateFoilColor = 0x000000;
				}
				else if (FoilName == 'WhiteFoil')
				{
					Foil_MiniPlatePlateColor = 0xffffff;
					Foil_MiniPlateFoilColor = 0xe6e6e6;
				}
				
				Alert.show('SelectFoilGalleryThing');
				Alert.show('FoilName');
				Alert.show(FoilName);
			}
			
			public function SelectHolesGalleryImage(event:MouseEvent):void 
			{
				var HolesGalleryImage:Image;
				HolesGalleryImage = event.currentTarget as Image;
				SelectedHolesImage = HolesGalleryImage;
				SelectedHolesSource = HolesGalleryImage.source as String;
			}
			
			public function SelectFlagGalleryImage(event:MouseEvent):void 
			{
				var FlagGalleryImage:Image;
				FlagGalleryImage = event.currentTarget as Image;
				SelectedFlagImage = FlagGalleryImage;
				SelectedFlagSource = FlagGalleryImage.source as String;
			}
			
			public function SelectSymbolGalleryImage(event:MouseEvent):void 
			{
				var SymbolGalleryImage:Image;
				SymbolGalleryImage = event.currentTarget as Image;
				SelectedSymbolImage = SymbolGalleryImage;
				SelectedSymbolSource = SymbolGalleryImage.source as String;
			}
			
			private function SetPreviewPlateThing():void
			{
				Alert.show('SetPreviewPlateThing');
				Alert.show('PlateColor:');
				Alert.show(String(PlateColor));
				PreviewContainer.setStyle('backgroundColor',PlateColor);
				//PlateThingBorder.setStyle('borderColor',FoilColor);
			}
			
			private function SetPreviewFoilThing():void
			{
				Alert.show('SetPreviewFoilThing');
				Alert.show('FoilColor:');
				Alert.show(String(FoilColor));
				//PreviewContainer.setStyle('backgroundColor',PlateColor);
				PlateThingBorder.setStyle('borderColor',FoilColor);
			}
			
			private function SetPreviewPlateImage():void
			{
				Alert.show('SetPreviewPlateImage');
				Alert.show('SelectedPlateImage.source');
				Alert.show(String(SelectedPlateImage.source));
				PreviewContainer.setStyle('backgroundImage',SelectedPlateImage);
			}
			
			private function SetDefaultPreviewPlateImage():void
			{
				Alert.show('SetDefaultPreviewPlateImage');
				Alert.show('SelectedPlateClass:');
				Alert.show(String(SelectedPlateClass));
				PreviewContainer.setStyle('backgroundImage',SelectedPlateClass);
			}
			
			private function SetPreviewFoilImage():void
			{
				Alert.show('SetPreviewFoilImage');
				Alert.show('SelectedFoilImage.source:');
				Alert.show(String(SelectedFoilImage.source));
				PlateImageBorder.setStyle('backgroundImage',SelectedFoilImage);
			}
			
			private function SetDefaultPreviewFoilImage():void
			{
				Alert.show('SetDefaultPreviewFoilImage');
				Alert.show('SelectedFoilClass:');
				Alert.show(String(SelectedFoilClass));
				PlateImageBorder.setStyle('backgroundImage',SelectedFoilClass);
			}
			
			private function SetHoles(event:MouseEvent):void
			{
				if (SelectedHolesSource.indexOf("FourCups") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = true;
					BottomRightCup.visible = true;
				}
				else if (SelectedHolesSource.indexOf("TopCups") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("MiddleCups") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = true;
					MiddleRightCup.visible = true;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("BottomCups") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("FourHoles") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("TopHoles") >= 0)
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("MiddleHoles") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else if (SelectedHolesSource.indexOf("BottomHoles") >= 0)
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
				else
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
				}
			}
			
			public function AddPlateElementsContainerChildren():void
			{
				LeftFlagBox = new Group;
				LeftFlagBox.id = 'LeftFlagBox';
				LeftFlagBox.width = LargeFlagWidth;
				LeftFlagBox.height = LargeFlagHeight;
				LeftFlagBox.includeInLayout = true;
				LeftFlagBox.visible = true;
				PlateElementsContainer.addElement(LeftFlagBox);
				
				LeftDatesBox = new VGroup;
				LeftDatesBox.id = 'LeftDatesBox';
				LeftDatesBox.width = DatesWidth;
				LeftDatesBox.height = DatesHeight;
				LeftDatesBox.horizontalAlign = 'center';
				LeftDatesBox.paddingTop = 5;
				LeftDatesBox.gap = 5;
				LeftDatesBox.includeInLayout = false;
				LeftDatesBox.visible = false;
				PlateElementsContainer.addElement(LeftDatesBox);
				
				LeftSymbolBox = new Group;
				LeftSymbolBox.id = 'LeftSymbolBox';
				LeftSymbolBox.width = SymbolWidth;
				LeftSymbolBox.height = SymbolHeight;
				LeftSymbolBox.includeInLayout = false;
				LeftSymbolBox.visible = false;
				PlateElementsContainer.addElement(LeftSymbolBox);
				
				//var Button1:Button = new Button;
				CharacterBox1 = new HGroup;
				CharacterBox1.id = 'CharacterBox1';
				CharacterBox1.width = LargeCharacterWidth;
				CharacterBox1.percentHeight = 100;
				CharacterBox1.percentWidth = 100;
				CharacterBox1.clipAndEnableScrolling=true;
				CharacterBox1.horizontalAlign = 'middle';
				CharacterBox1.gap = 0;
				CharacterBox1.includeInLayout = true;
				CharacterBox1.visible = true;
				//CharacterBox1.addElement(Button1);
				PlateElementsContainer.addElement(CharacterBox1);
				
				CenterSymbolBox = new Group;
				CenterSymbolBox.id = 'CenterSymbolBox';
				CenterSymbolBox.width = SymbolWidth;
				CenterSymbolBox.height = SymbolHeight;
				CenterSymbolBox.includeInLayout = false;
				CenterSymbolBox.visible = false;
				PlateElementsContainer.addElement(CenterSymbolBox);
				
				CharacterBox2 = new HGroup;
				CharacterBox2.id = 'CharacterBox2';
				CharacterBox2.width = LargeCharacterWidth;
				CharacterBox2.percentHeight = 100;
				CharacterBox2.percentWidth = 100;
				CharacterBox2.clipAndEnableScrolling=true;
				CharacterBox2.horizontalAlign = 'middle';
				CharacterBox2.gap = 0;
				CharacterBox2.includeInLayout = false;
				CharacterBox2.visible = false;
				PlateElementsContainer.addElement(CharacterBox2);
				
				CharacterBox3 = new HGroup;
				CharacterBox3.id = 'CharacterBox3';
				CharacterBox3.width = LargeCharacterWidth;
				CharacterBox3.percentHeight = 100;
				CharacterBox3.percentWidth = 100;
				CharacterBox3.clipAndEnableScrolling=true;
				CharacterBox3.horizontalAlign = 'middle';
				CharacterBox3.gap = 0;
				CharacterBox3.includeInLayout = false;
				CharacterBox3.visible = false;
				PlateElementsContainer.addElement(CharacterBox3);
				
				RightSymbolBox = new Group;
				RightSymbolBox.id = 'RightSymbolBox';
				RightSymbolBox.width = SymbolWidth;
				RightSymbolBox.height = SymbolHeight;
				RightSymbolBox.includeInLayout = false;
				RightSymbolBox.visible = false;
				PlateElementsContainer.addElement(RightSymbolBox);
				
				RightDatesBox = new VGroup;
				RightDatesBox.id = 'RightDatesBox';
				RightDatesBox.width = DatesWidth;
				RightDatesBox.height = DatesHeight;
				RightDatesBox.horizontalAlign = 'center';
				RightDatesBox.paddingTop = 10;
				RightDatesBox.gap = 10;
				RightDatesBox.includeInLayout = false;
				RightDatesBox.visible = false;
				PlateElementsContainer.addElement(RightDatesBox);
				
				RightFlagBox = new Group;
				RightFlagBox.id = 'RightFlagBox';
				RightFlagBox.width = LargeFlagWidth;
				RightFlagBox.height = LargeFlagHeight;
				RightFlagBox.includeInLayout = false;
				RightFlagBox.visible = false;
				PlateElementsContainer.addElement(RightFlagBox);
			}
			
			public function AddFlagToLeftFlagBox(event:MouseEvent):void {
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlagImage.source;
				plateimage.width = LargeFlagWidth;
				plateimage.height = LargeFlagHeight;
				
				LeftFlagBox.includeInLayout=true;
				LeftFlagBox.visible=true;
				LeftFlagBox.addElement(plateimage);
				
				StackAction.push(plateimage);
			}
			
			public function AddDatesToLeftDatesBox(event:MouseEvent):void 
			{
				var Date1Save:Number = Date1.value;
				var Date2Save:Number = Date2.value;
				var Date3Save:Number = Date3.value;
				
				var plategroup:VGroup = new VGroup;
				plategroup.width = DatesWidth;
				plategroup.height = DatesHeight;
				plategroup.paddingTop = 5;
				plategroup.horizontalAlign = 'justify';
				plategroup.gap = 5;
								
				var D1:Label = new Label;
				
				Alert.show('Date1Save:');
				Alert.show(String(Date1Save));
				Alert.show('Date2Save:');
				Alert.show(String(Date2Save));
				Alert.show('Date3Save:');
				Alert.show(String(Date3Save));
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save >= 1 && Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				Alert.show(D1.text);
				
				D1.styleName = 'PlateDates';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date1Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save >= 1 && Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.styleName = 'PlateDates';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date1Save == 0)
				{
					D3.text = '00';
				}
				else if (Date2Save >= 1 && Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.styleName = 'PlateDates';
				D3.setStyle('color','black');
				
				Alert.show('D1text:');
				Alert.show(D1.text);
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
								
				LeftDatesBox.includeInLayout=true;
				LeftDatesBox.visible=true;
				LeftDatesBox.addElement(plategroup);
				
				StackAction.push(plategroup);
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
			}
			
			public function AddDatesToRightDatesBox(event:MouseEvent):void {
				var plategroup:VGroup = new VGroup;
				plategroup.width = DatesWidth;
				plategroup.height = DatesHeight;
				plategroup.paddingTop = 10;
				plategroup.horizontalAlign = 'center';
				plategroup.gap = 10;
				
				var d1:Label = new Label;
				d1.text = '11';
				d1.styleName = 'PlateDates';
				d1.setStyle('color','black');
				var d2:Label = new Label;
				d2.text = '11';
				d2.styleName = 'PlateDates';
				d2.setStyle('color','black');
				var d3:Label = new Label;
				d3.text = '11';
				d3.styleName = 'PlateDates';
				d3.setStyle('color','black');
				
				plategroup.addElement(d1);
				plategroup.addElement(d2);
				plategroup.addElement(d3);
				
				RightDatesBox.includeInLayout=true;
				RightDatesBox.visible=true;
				RightDatesBox.addElement(plategroup);
				
				StackAction.push();
			}
			
			public function AddFlagToRightFlagBox(event:MouseEvent):void {
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlagImage.source;
				plateimage.width = LargeFlagWidth;
				plateimage.height = LargeFlagHeight;
				
				RightFlagBox.includeInLayout=true;
				RightFlagBox.visible=true;
				RightFlagBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			public function AddSymbolToLeftSymbolBox(event:MouseEvent):void {
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				LeftSymbolBox.includeInLayout=true;
				LeftSymbolBox.visible=true;
				LeftSymbolBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			public function AddSymbolToCenterSymbolBox(event:MouseEvent):void {
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				CenterSymbolBox.includeInLayout=true;
				CenterSymbolBox.visible=true;
				CenterSymbolBox.addElement(plateimage);
				
				//Include 2nd character box for characters to the right of the symbol
				CenterSymbol=true;
				CharacterBox2.includeInLayout=true;
				CharacterBox2.visible=true;
				
				StackAction.push();
			}
			
			public function AddSymbolToRightSymbolBox(event:MouseEvent):void {
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbolImage.source;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				RightSymbolBox.includeInLayout=true;
				RightSymbolBox.visible=true;
				RightSymbolBox.addElement(plateimage);
				
				StackAction.push();
			}
			
			public function CloseGallery(event:MouseEvent):void {
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			public function AddCharacterToPlate(event:MouseEvent):void {
				var keypadbutton:Button = event.target as Button;
				var platebutton:Button = new Button();
				
				platebutton.width = CharacterWidthLarge;
				platebutton.height = CharacterHeightLarge;
				platebutton.label = keypadbutton.label;
				platebutton.styleName = 'PlateTextLarge';
				platebutton.setStyle('color', FoilColor);
				//platebutton.setStyle('skinClass', 'skins.TransparentButtonSkin');
				
				CharactersAdded = (CharactersAdded + 1);
				
				if (CenterSymbol = false)
				{
					CharacterBox1.addElement(platebutton);
				}

				if (CenterSymbol = true && CharactersAdded < 3)
				{
					CharacterBox1.addElement(platebutton);
				}
				else 
				{
					CharacterBox2.includeInLayout=true;
					CharacterBox2.visible=true;
					CharacterBox2.addElement(platebutton);
				}
			}
						
			public function UndoLastAction(event:MouseEvent):void
			{
				if (StackAction.length > 0)
				{
					CenterSymbol = false;
					PlateElementsContainer.removeElementAt(StackAction.length);
					StackAction.pop();
				}
			}
			
			public function ClearPlate(event:MouseEvent):void
			{
				PlateElementsContainer.removeAllElements();
				AddPlateElementsContainerChildren();
			}
			
			public function ResetPlate(event:MouseEvent):void
			{
				PlateIsImage = false;
				FoilIsImage = false;
				SetDefaults();
				SetPreviewPlateImage();
				SetPreviewPlateThing();
				PlateElementsContainer.removeAllElements();
				AddPlateElementsContainerChildren();
			}
			
			/*		
			Constants:
			
			SmallPlateHeight (in mm)
			SmallPlateWidth (in mm)
			MediumPlateHeight (in mm)
			MediumPlateWidth (in mm)
			LargePlateHeight (in mm)
			LargePlateWidth (in mm)
			SmallCharacterWidth (in mm)
			SmallCharacterHeight (in mm)
			MediumCharacterWidth (in mm)
			MediumCharacterHeight (in mm)
			LargeCharacterHeight (in mm)
			LargeCharacterWidth (in mm)
			DateHeight (in mm)
			DatePairWidth (in mm)
			DatePairLeading (in mm)
			SymbolHeight (in mm)
			LargeFlagHeight (in mm)
			LargeFlagWidth (in mm)
			SmallFlagHeight (in mm)
			SmallFlagWidth (in mm)
			HoleCenterPointOffsetFromEdge (in mm)
			CupSize (in mm)
			HolesPriceEUR (float)
			CupsPriceEUR (float)
			*/
			
			/*			[Bindable]
			private var GermanCharacters_Small_AC:ArrayCollection = new ArrayCollection([
			//In points
			//For IDs C2, C17, and C24, need to prefix Label with "&#" and suffix with ";" when rendering (e.g., "&#196;")
			{ID:"C1", Label:"A", FontID:"1", FontSize:"25"},
			{ID:"C2", Label:"&#196;", FontID:"1", FontSize:"25"},
			{ID:"C3", Label:"B", FontID:"1", FontSize:"25"},
			{ID:"C4", Label:"C", FontID:"1", FontSize:"25"},
			{ID:"C5", Label:"D", FontID:"1", FontSize:"25"},
			{ID:"C6", Label:"E", FontID:"1", FontSize:"25"},
			{ID:"C7", Label:"F", FontID:"1", FontSize:"25"},
			{ID:"C8", Label:"G", FontID:"1", FontSize:"25"},
			{ID:"C9", Label:"H", FontID:"1", FontSize:"25"},
			{ID:"C10", Label:"I", FontID:"1", FontSize:"25"},
			{ID:"C11", Label:"J", FontID:"1", FontSize:"25"},
			{ID:"C12", Label:"K", FontID:"1", FontSize:"25"},
			{ID:"C13", Label:"L", FontID:"1", FontSize:"25"},
			{ID:"C14", Label:"M", FontID:"1", FontSize:"25"},
			{ID:"C15", Label:"N", FontID:"1", FontSize:"25"},
			{ID:"C16", Label:"O", FontID:"1", FontSize:"25"},
			{ID:"C17", Label:"&#214;", FontID:"1", FontSize:"25"},
			{ID:"C18", Label:"P", FontID:"1", FontSize:"25"},
			{ID:"C19", Label:"Q", FontID:"1", FontSize:"25"},
			{ID:"C20", Label:"R", FontID:"1", FontSize:"25"},
			{ID:"C21", Label:"S", FontID:"1", FontSize:"25"},
			{ID:"C22", Label:"T", FontID:"1", FontSize:"25"},
			{ID:"C23", Label:"U", FontID:"1", FontSize:"25"},
			{ID:"C24", Label:"&#220;", FontID:"1", FontSize:"25"},
			{ID:"C25", Label:"V", FontID:"1", FontSize:"25"},
			{ID:"C26", Label:"W", FontID:"1", FontSize:"25"},
			{ID:"C27", Label:"X", FontID:"1", FontSize:"25"},
			{ID:"C28", Label:"Y", FontID:"1", FontSize:"25"},
			{ID:"C29", Label:"Z", FontID:"1", FontSize:"25"},
			{ID:"C30", Label:"1", FontID:"1", FontSize:"25"},
			{ID:"C31", Label:"2", FontID:"1", FontSize:"25"},
			{ID:"C32", Label:"3", FontID:"1", FontSize:"25"},
			{ID:"C33", Label:"4", FontID:"1", FontSize:"25"},
			{ID:"C34", Label:"5", FontID:"1", FontSize:"25"},
			{ID:"C35", Label:"6", FontID:"1", FontSize:"25"},
			{ID:"C36", Label:"7", FontID:"1", FontSize:"25"},
			{ID:"C37", Label:"8", FontID:"1", FontSize:"25"},
			{ID:"C38", Label:"9", FontID:"1", FontSize:"25"},
			{ID:"C39", Label:"0", FontID:"1", FontSize:"25"},
			{ID:"C40", Label:"-", FontID:"1", FontSize:"25"},
			{ID:"C41", Label:".", FontID:"1", FontSize:"25"},
			{ID:"C42", Label:"?", FontID:"1", FontSize:"25"},
			]);  */
			
			/*			private var GermanCharacters_Medium_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"50"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"50"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"50"}
			//..
			]);
			
			private var GermanCharacters_Large_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"75"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"75"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"75"}
			//..
			]);
			
			[Bindable]
			private var Spacers_AC:ArrayCollection = new ArrayCollection([
			//in mm
			{Width:"20", Label:""},
			{Width:"30", Label:""},
			{Width:"40", Label:""}
			]);
			*/
			
			
			/*			
			[Bindable]
			private var SmallPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var MediumPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidRed", Label"Solid red", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargePlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidYellow", Label:"Solid Yellow", ColorSpec:"blue", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var FoilStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", Label:"Solid Blue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var Stickers_AC:ArrayCollection = new ArrayCollection([
			{ID:"Dalmation", Label:"Dalmation", Width:"20", Height:"50", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargeFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var SmallFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var DefaultsByCountry_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", LanguageID:"DE", PlateSizeID:"GL", PlateStyleID:"PlateStyleID",
			FoilStyleID:"FoilID", Date:"112233", SymbolID:"SymbolID", StickerID:"StickerID", FlagID:"FlagID", 
			Currency:"EUR"}
			]);	
			
			private function application1_creationCompleteHandler():void {
			Button_A.addEventListener(MouseEvent.CLICK, AddCharacterAToPlate);
			Button_Au.addEventListener(MouseEvent.CLICK, AddCharacterAuToPlate);
			ClearTextButton.addEventListener(MouseEvent.CLICK, ClearPlate);
			ClearPlateButton.addEventListener(MouseEvent.CLICK, ClearAll);
			StartOverButton.addEventListener(MouseEvent.CLICK, StartOver);
			}
			
			private function ConvertMMtoPixels {
			//Varies by font family?
			}
			
			private function SetPlateSize(event:MouseEvent) {
			//Change dropdownlist content
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetPlateStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function SetFoilStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function Change1LineTo2Lines(event:MouseEvent) {
			//If plate size is not large, prompt to change
			//If character size is not small, prompt to change character size to small
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function Change2LinesTo1Line(event:MouseEvent) {
			//Prompt to increase character size to medium or large (large if text fits)
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetCharacterSize(event:MouseEvent) {
			//Prompt to clear text if new-size characters will not fit
			//Recalculate price
			}
			
			private function AddCharacterToPlate(event:MouseEvent) {	
			//Alert if no room to add
			}
			
			private function AddSymbolToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddDatesToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddStickerToPlate {	
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddFlagToPlate {
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddHolesAndCupstoPlate {
			//Position as specified
			//Recalculate price
			}
			*/
		]]>
	</fx:Script>
	
	<!-- Outer (basic) container -->
	<s:BorderContainer id="OuterContainer"
					   width="540" height="406" minWidth="0" minHeight="0" horizontalCenter="0" verticalCenter="0" borderVisible="true">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<!-- Inner (vertical) container -->
		<s:BorderContainer id="InnerContainer"
						   x="0" y="0" width="{OuterContainer.width-2}" height="{OuterContainer.height-2}" borderVisible="false" depth="2">
			<s:layout>
				<s:VerticalLayout paddingTop="10" paddingBottom="4" paddingLeft="10" paddingRight="10" gap="0"/>
			</s:layout>
			
			<!-- Preview container.  Background color or image set via functions -->
			<s:BorderContainer id="PreviewContainer"
							   width="520" height="113" borderVisible="true" borderWeight="2" cornerRadius="8" depth="1"
							   creationComplete="SetDefaultPreview()">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<!-- Suction cups -->
				<s:Ellipse id="TopLeftCup"
						   x="-5" y="-5" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="TopRightCup"
						   x="496" y="0" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleLeftCup"
						   x="0" y="44.5" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="MiddleRightCup"
						   x="496" y="44.5" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomLeftCup"
						   x="0" y="89" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<s:Ellipse id="BottomRightCup"
						   x="496" y="89" width="19" height="19" visible="false" depth="12">
					<s:fill>
						<s:SolidColor color="white" alpha=".5"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="white" alpha="1" weight="1.375"/>
					</s:stroke>
				</s:Ellipse>
				<!-- Plate outer (border) container.  Border color is set via function. -->
				<s:BorderContainer id="PlateBorder" 
								   x="1" y="1" width="514" height="107" borderVisible="false" depth="2">
					<s:layout>
						<s:BasicLayout/>
					</s:layout>
					<!-- ThingBorder.  Border color is set via function. -->
					<s:BorderContainer id="PlateThingBorder" x="0" y="0" width="100%" height="100%" includeInLayout="false" visible="false"
									   borderWeight="5" cornerRadius="8" borderStyle="inset" backgroundAlpha="0"/>
					<!-- ImageBorder.  Source is set via function. -->
					<s:Image id="PlateImageBorder" x="0" y="0" width="100%" height="100%" includeInLayout="false" visible="false"
							 horizontalAlign="center" verticalAlign="top"
							 fillMode="scale" scaleMode="stretch"/>
					<!-- Holes -->
					<s:Ellipse id="TopLeftHole"
							   x="0" y="0" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="TopRightHole"
							   x="496" y="0" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleLeftHole"
							   x="0" y="44.5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleRightHole"
							   x="496" y="44.5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomLeftHole"
							   x="0" y="89" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomRightHole"
							   x="496" y="89" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white" alpha="1"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" alpha="1" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					
					<!-- Plate content container.  BackgroundColor or image set via functions -->
					<s:BorderContainer id="PlateElementsContainer"
									   x="0" y="0" width="505" height="98" backgroundAlpha="0" borderVisible="false" depth="6">
						<s:layout>
							<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												horizontalAlign="left" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
						</s:layout>
						<!--Multiple containers for potential elements, which are hidden and shown as needed-->
						<s:Group id="LeftFlagBox" width="{LargeFlagWidth}" height="{LargeFlagHeight}" includeInLayout="false" visible="false"/>
						<s:VGroup id="LeftDatesBox" width="{DatesWidth}" height="{DatesHeight}"
								  horizontalAlign="center" paddingTop="5" gap="5"
								  includeInLayout="false" visible="false"/>
						<s:Group id="LeftSymbolBox" width="{SymbolWidth}" height="{SymbolHeight}" includeInLayout="false" visible="false"/>
						<s:HGroup id="CharacterBox1" width="100%" horizontalAlign="left" gap="0" clipAndEnableScrolling="true"
								  includeInLayout="true" visible="true"/>
						<s:Group id="CenterSymbolBox" width="{SymbolWidth}" height="{SymbolHeight}" includeInLayout="false" visible="false"/>
						<s:HGroup id="CharacterBox2" width="100%" horizontalAlign="left" gap="0" clipAndEnableScrolling="true"
								  includeInLayout="false" visible="false"/>
						<s:HGroup id="CharacterBox3" width="100%" horizontalAlign="left" gap="0" clipAndEnableScrolling="true"
								  includeInLayout="false" visible="false"/>
						<s:Group id="RightSymbolBox" width="{SymbolWidth}" height="{SymbolHeight}" includeInLayout="false" visible="false"/>
						<s:VGroup id="RightDatesBox" width="{DatesWidth}" height="{DatesHeight}"
								  horizontalAlign="center" paddingTop="10" gap="10"
								  includeInLayout="false" visible="false"/>
						<s:Group id="RightFlagBox" width="{LargeFlagWidth}" height="{LargeFlagHeight}" includeInLayout="false" visible="false"/>
						
					</s:BorderContainer>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<!-- Error message and control to clear plate contents -->
			<s:BorderContainer width="100%" height="16" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="0"/>
				</s:layout>
				<!-- Controls to reset plate contents -->
				<s:BorderContainer width="169" height="16" borderVisible="false">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
											paddingTop="1" paddingBottom="0" paddingLeft="0" paddingRight="0"
											gap="5"/>				
					</s:layout>
					<s:Button id="UndoButton" label="Undo" 
							  width="35" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="UndoLastAction(event)"/>
					<s:Button id="ClearButton" label="Clear plate" 
							  width="65" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="ClearPlate(event)"/>
					<s:Button id="ResetButton" label="Start over"
							  width="55" height="16" verticalCenter="0"
							  chromeColor="white" skinClass="skins.HTMLButtonSkin"
							  fontStyle="normal" styleName="HTMLButton"
							  click="ResetPlate(event)"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Controls to set the plate size -->
			<s:BorderContainer width="100%" height="33.9" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout gap="4" verticalAlign="middle"/>
				</s:layout>
				<s:BorderContainer width="80" height="34" borderVisible="false">
					<s:layout>
						<s:VerticalLayout verticalAlign="middle"
										  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<mx:Text text="Plate size"
							 width="100%" height="35"
							 verticalCenter="0" leading="0"
							 styleName="DirectiveLabel"/>
				</s:BorderContainer>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   selected="true"/>
				<s:BorderContainer width="156" height="33.9" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout  horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="520mm x 113mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"/>
				<s:BorderContainer width="120" height="33.9" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="400mm x 113mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"/>
				<s:BorderContainer width="78" height="22.5" borderVisible="true" cornerRadius="5">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="290mm x 75mm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="2"/>
			
			<!-- Controls to choose orientation et al -->
			<s:BorderContainer width="100%" height="24" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>				
				</s:layout>
				
				<mx:Text text="How many lines of text"
						 width="145" verticalCenter="0"
						 styleName="DirectiveLabel"/>
				<s:RadioButton groupName="PlateOrientation" 
							   width="10" verticalCenter="0" symbolColor="blue"
							   selected="true"/>
				<mx:Text text="1 line"
						 width="36" verticalCenter="0"
						 fontFamily="Arial" fontSize="11"/>
				<s:RadioButton groupName="PlateOrientation" 
							   width="10" verticalCenter="0"/>
				<mx:Text text="2 lines"
						 width="38" verticalCenter="0"
						 fontFamily="Arial" fontSize="11"/>
				<s:Spacer width="4"/>
				<mx:Text text="Date, stickers, symbols, colors, and holes"
						 width="251.4" verticalCenter="0" horizontalCenter="134"
						 leading="0" textAlign="center"
						 styleName="DirectiveLabel"/>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Outer container for plate content controls -->
			<s:BorderContainer width="100%" height="196" 
							   borderVisible="false">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="8"/>
				</s:layout>
				<s:BorderContainer width="100%" height="100%" 
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<!-- Outer container for character buttons -->
					<s:BorderContainer id="CharacterButtonContainer"
									   width="320" height="164"
									   borderVisible="true">
						<s:layout>
							<s:VerticalLayout paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4"
											  gap="2"/>
						</s:layout>
						<s:BorderContainer width="100%" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C1_Button" label="A"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0"
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C2_Button" label="&#196;"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C3_Button" label="B"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C4_Button" label="C" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C5_Button" label="D" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C6_Button" label="E" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C7_Button" label="F" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C8_Button" label="G" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C9_Button" label="H" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C10_Button" label="I" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C11_Button" label="J" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C12_Btn" label="K" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C13_Button" label="L" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C14_Button" label="M" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C15_Button" label="N" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C16_Button" label="O" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C17_Button" label="&#214;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C18_Button" label="P" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C19_Button" label="Q" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C20_Button" label="R" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C21_Button" label="S" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C22_Button" label="T" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C23_Button" label="U" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C24_Button" label="&#220;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C25_Button" label="V" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C26_Button" label="V" color="red"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C27_Button" label="X" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C28_Button" label="Y" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C29_Button" label="Z" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C30_Button" label="1" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C31_Button" label="2" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C32_Button" label="3" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C33_Button" label="4" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C34_Button" label="5" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C35_Button" label="6" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C36_Button" label="7" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C37_Button" label="8" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C38_Button" label="9" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C39_Button" label="0" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C40_Button" label="-" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C41_Button" label="." 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C42_Button" label="?" 
									  width="{CharacterButtonWidth}" height="37"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Spacer width="1"/>
							<s:BorderContainer width="52" 
											   height="37"
											   borderVisible="false">
								<s:layout>
									<s:VerticalLayout horizontalAlign="left" verticalAlign="top"
													  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
								</s:layout>
								<s:BorderContainer width="52"
												   height="22"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" verticalAlign="top"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
															gap="2"/>
									</s:layout>
									<s:Button id="S1_Button" label="" 
											  width="23" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S2_Button" label=""
											  width="15" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S3_Button" label="" 
											  width="10" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
								</s:BorderContainer>
								<s:BorderContainer width="52"
												   height="12"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="bottom"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
									</s:layout>
									<s:Label text="Spaces"
											 width="40" height="12"
											 fontFamily="Arial" fontSize="11" fontWeight="normal"/>
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<s:Spacer height="4"/>
					
					<!-- Controls to set the plate size -->
					<s:BorderContainer width="100%" height="15" borderVisible="false">
						<s:layout>
							<s:HorizontalLayout gap="0" verticalAlign="middle"/>
						</s:layout>
						<mx:Text text="Text size"
								 width="63"
								 verticalCenter="0"
								 styleName="DirectiveLabel"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"/>
						<mx:Text text="ABC" 
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="19.75"/>
						<mx:Text text="(79mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="12"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"
									   selected="true"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="14.5"/>
						<mx:Text text="(58mm)" 
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="FontSize" width="15" symbolColor="blue"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="10"/>
						<mx:Text text="(40mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
					</s:BorderContainer>		
				</s:BorderContainer>
				
				<!-- Outer container for date controls and flag -->
				<s:BorderContainer width="42" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="2" paddingLeft="0" paddingRight="0"
										  gap="6"
										  horizontalAlign="left"/>
					</s:layout>
					
					<!-- Outer container for date controls -->		
					<s:BorderContainer width="100%" height="97" 
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center"
											  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="4"/>
						</s:layout>
						
						<s:NumericStepper id="Date1"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDates"/>
						<s:NumericStepper id="Date2"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDates"/>
						<s:NumericStepper id="Date3"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="99"
										  styleName="NumericStepperDates"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddDatesToLeftDatesBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDatesToLeftDatesBox(event)"/>
							<s:Button id="AddDatesToRightDatesBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDatesToRightDatesBox(event)"/>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Flag chooser -->
					<s:BorderContainer width="100%" height="60"
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="0" horizontalAlign="center" verticalAlign="top"/>
						</s:layout>
						<s:BorderContainer width="30" height="60"
										   borderVisible="true">
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image width="100%" height="100%"
									 horizontalAlign="center" verticalAlign="top"
									 source="{SelectedFlagSource}" fillMode="scale" scaleMode="stretch"									 
									 buttonMode="true" 
									 click="OpenFlagGallery(event)"/>
						</s:BorderContainer>
						<s:Image id="FlagGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenFlagGallery(event)"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddFlagToLeftFlagBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToLeftFlagBox(event)"/>
							<s:Button id="AddFlagToRightFlagBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToRightFlagBox(event)"/>
						</s:BorderContainer>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!-- Outer container for symbols, plate style, foil style, and holes -->
				<s:BorderContainer width="140.4" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="10"/>
					</s:layout>
					
					<!-- Outer container for symbols and stickers -->
					<s:BorderContainer width="100%" height="57"
									   borderVisible="false">
						<s:layout>
							<s:HorizontalLayout verticalAlign="top"
												paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												gap="0"/>
						</s:layout>
						
						<!-- Symbol chooser -->
						<s:BorderContainer width="57" height="63" borderVisible="false">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
												  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
							</s:layout>
							<s:BorderContainer width="57" height="57" minWidth="0" minHeight="0" borderVisible="true"
											   creationComplete="SetDefaultSymbol()">
								<s:layout>
									<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"/>
								</s:layout>	
								<s:Image id="SelectedSymbol"
										 width="100%" height="100%" 
										 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
										 source="{SelectedSymbolSource}" fillMode="scale"
										 buttonMode="true" click="OpenSymbolGallery(event)"/>
							</s:BorderContainer>
							<s:Image id="SymbolGalleryButton"
									 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
									 source="assets/down_triangle.png"
									 buttonMode="true" click="OpenSymbolGallery(event)"/>
						</s:BorderContainer>
						<s:Spacer width="3"/>
						<s:BorderContainer width="14" height="40" borderVisible="false">
							<s:layout>
								<s:VerticalLayout gap="4"/>
							</s:layout>
							<s:Button id="AddSymbolToLeftSymbolBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToLeftSymbolBox(event)"/>
							<s:Button id="AddSymbolToCenterSymbolBoxButton" label="C" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToCenterSymbolBox(event)"/>
							<s:Button id="AddSymbolToRightSymbolBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToRightSymbolBox(event)"/>
						</s:BorderContainer>
						
						<s:Spacer width="8"/>
						
					</s:BorderContainer>
					
					<!-- Outer container for plate, foil, and holes controls -->
					<s:BorderContainer width="140" height="100%" borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="top" gap="0"/>
						</s:layout>
						
						<!-- Plate chooser -->
						<s:BorderContainer id="Plate_MiniPlateFrame" width="140.4" height="30.51" 
										   borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1"
										   click="SetPreviewPlate(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<s:BorderContainer id="Plate_MiniPlateThingContainer" includeInLayout="false" visible="false"
											   width="100%" height="{Plate_MiniPlateFrame.height-5}"
											   cornerRadius="3" borderVisible="true" borderColor="{Plate_MiniPlateFoilColor}" borderAlpha="1" borderWeight="2">
								<s:layout>
									<s:VerticalLayout paddingTop=".175" paddingBottom=".175" paddingLeft=".175" paddingRight=".175" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate thing-->
								<s:BorderContainer id="Plate_MiniPlateInnerThingContainer"
												   width="{Plate_MiniPlateThingContainer.width-4.25}" height="{Plate_MiniPlateThingContainer.height-4}" 
												   borderWeight=".175" cornerRadius="3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="{Plate_MiniPlatePlateColor}" backgroundAlpha="1"/>
							</s:BorderContainer>
							
							<s:BorderContainer id="Plate_MiniPlateImageContainer" includeInLayout="false" visible="false"
											   width="{Plate_MiniPlateFrame.width-2}" height="{Plate_MiniPlateFrame.height-4}"
											   cornerRadius="3" borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1">
								<s:layout>
									<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate image-->
								<s:BorderContainer id="Plate_MiniPlateInnerImageContainer"
												   width="100%" height="100%" cornerRadius="3" borderVisible="false">					   
									<s:layout>
										<s:BasicLayout clipAndEnableScrolling="true"/>
									</s:layout>
									<s:Image id="Plate_MiniPlateImage" width="100%" height="{Plate_MiniPlateImageContainer.height-3}" depth="1"
											 horizontalAlign="center" verticalAlign="middle"
											 source="{SelectedPlateImageSource}" fillMode="scale" scaleMode="stretch"/>
									<s:Rect id="Plate_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3" depth="2">                          
										<s:stroke>
											<s:SolidColorStroke weight="2" color="black" alpha="1"/>
										</s:stroke>
										<s:fill>
											<s:SolidColor alpha="0"/>
										</s:fill>
									</s:Rect>
								</s:BorderContainer>
								
							</s:BorderContainer>
							
						</s:BorderContainer>
						
						<s:Image id="PlateGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 buttonMode="true"
								 source="assets/down_triangle.png"
								 click="OpenPlateGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Foil chooser -->
						<s:BorderContainer id="Foil_MiniPlateContainer" width="140.4" height="30.51"						   
										   click="SetPreviewFoil(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="2" paddingBottom="4" paddingLeft="2" paddingRight="4" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<!--Foil MiniPlate thing-->
							<s:BorderContainer id="Foil_MiniPlateThingContainer" includeInLayout="false" visible="false"
											   width="{Foil_MiniPlateContainer.width-6}" height="{Foil_MiniPlateContainer.height-6}" 
											   borderWeight="3" cornerRadius="3" borderColor="{Foil_MiniPlateFoilColor}" borderAlpha="1" 
											   backgroundColor="{Foil_MiniPlatePlateColor}" backgroundAlpha="1">
								<s:layout>
									<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
													  paddingTop="-2" paddingBottom="-2" paddingLeft="-2" paddingRight="-3"/>
								</s:layout>
								<s:BorderContainer id="Foil_MiniPlateThingInnerContainer"
												   width="{Foil_MiniPlateThingContainer.width-4}" height="{Foil_MiniPlateThingContainer.height-4}" cornerRadius="3"
												   borderWeight=".3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="white" backgroundAlpha="0">
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<!--Foil MiniPlate image-->
						<s:BorderContainer id="Foil_MiniPlateImageContainer" includeInLayout="false" visible="false"
										   width="{Foil_MiniPlateThingContainer.width-4}" height="{Foil_MiniPlateThingContainer.height-4.5}" 
										   cornerRadius="3" borderVisible="false">					   
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image id="Foil_MiniPlateImage" width="100%" height="100%" depth="1"
									 horizontalAlign="center" verticalAlign="middle"
									 source="{SelectedFoilImageSource}" fillMode="scale" scaleMode="stretch"/>
							<s:Rect id="Foil_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3"  depth="2">                          
								<s:stroke>
									<s:SolidColorStroke weight="2.5" color="black" alpha="1"/>
								</s:stroke>
								<s:fill>
									<s:SolidColor alpha="0"/>
								</s:fill>
							</s:Rect>
						</s:BorderContainer>
						
						<s:Image id="FoilGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenFoilGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Holes chooser -->
						<s:BorderContainer width="140.4" height="30.51"
										   minWidth="0" minHeight="0"
										   borderVisible="true">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5"
												  gap="0"/>
							</s:layout>
							
							<s:Image id="SelectedHoles"
									 width="100%" height="100%" 
									 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
									 source="{SelectedHolesSource}" fillMode="scale" scaleMode="stretch"
									 buttonMode="true" click="SetHoles(event)"/>
						</s:BorderContainer>
						<s:Image id="HolesGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="assets/down_triangle.png"
								 buttonMode="true" click="OpenHolesGallery(event)"/>
					</s:BorderContainer>
				</s:BorderContainer>
				
			</s:BorderContainer>
		</s:BorderContainer>
		
		<!--Height and width and padding involve GalleryList-->
		<s:BorderContainer id="GalleryWindow" width="323" height="268"
						   x="10" y="127" visible="false" borderVisible="true" borderColor="blue" dropShadowVisible="true" depth="10">
			<s:layout>
				<s:VerticalLayout paddingTop="-5" paddingBottom="-5" paddingLeft="10" paddingRight="0" gap="0"/>
			</s:layout>
			
			<mx:ViewStack id="Galleries" width="100%" height="100%" clipContent="true" creationPolicy="auto"
						  paddingTop="5" paddingBottom="5" paddingRight="0">
				
				<s:NavigatorContent id="PlateGallery" width="100%" height="100%">			
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="PlateGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer id="GP_A_Black" width="100%" height="100%"
												   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryThing(event,'BlackPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_Black" width="{GP_A_Black.width-2}" height="{GP_A_Black.height-2}"
													   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_Black" width="{GP_B_Black.width-6}" height="{GP_B_Black.height-6}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_White" width="100%" height="100%"
												   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryThing(event,'WhitePlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_White" width="{GP_A_White.width-2}" height="{GP_A_White.height-2}"
													   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_White" width="{GP_B_White.width-6}" height="{GP_B_White.height-6}"
														   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_LimeGreen" width="100%" height="100%"
												   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryThing(event,'LimeGreenPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_LimeGreen" width="{GP_A_LimeGreen.width-2}" height="{GP_A_LimeGreen.height-2}"
													   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_LimeGreen" width="{GP_B_LimeGreen.width-6}" height="{GP_B_LimeGreen.height-6}"
														   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
											<!--borderWeight=".025" borderColor="black"-->
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Black.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkBlue.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkYellow.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterBlue.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGold.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterRed.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/LightGreen.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Pink.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Rainbow.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Raindrops.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Red.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ReflexWhite.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ShockingPink.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Silver.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Space.jpg"
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/White.jpg" 
										 click="SelectPlateGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<!--s:NavigatorContent>					
				<s:Group>
				<s:layout>
				<layouts:FlowLayout/>
				</s:layout>
				</s:Group>
				</s:NavigatorContent-->
				
				<s:NavigatorContent id="FoilGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FoilGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<layouts:FlowLayout padding="10" horizontalGap="3" verticalGap="6"/>
							<!--s:TileLayout rowHeight="38" columnWidth="135" requestedColumnCount="2" requestedRowCount="6" orientation="columns"
							columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="1" verticalGap="3"
							paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/-->
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer width="38" height="36" backgroundColor="black"
												   click="SelectFoilGalleryThing(event,'BlackFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="BlackFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="white"
												   click="SelectFoilGalleryThing(event,'BlackFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="BlackFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="black">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="BlackFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="white">
										</s:BorderContainer>
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer width="38" height="36" backgroundColor="white"
												   click="SelectFoilGalleryThing(event,'WhiteFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="WhiteFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="black"
												   click="SelectFoilGalleryThing(event,'WhiteFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="WhiteFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="white">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="WhiteFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="black">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<!--s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilPlate.png" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
								click="SelectFoil(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilPlate.png" 
								click="SelectFoil(event); CloseGallery(event);"/-->
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="HolesGallery" width="100%" height="100%" >
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="HolesGalleryList" width="100%" height="100%" 
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/NoneNone.jpg" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<!--s:BorderContainer width="100%" height="100%"
								borderVisible="true" borderWeight="1.5" cornerRadius="3">
								<s:layout>
								<s:BasicLayout/>
								</s:layout>
								<s:Rect x="2.5" y="2.5" width="100%" height="100%" radiusX="3" radiusY="3">                              
								<s:stroke>
								<s:SolidColorStroke weight="2" color="gray"/>
								</s:stroke>
								</s:Rect>
								<s:Ellipse depth="11" x="5.5" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:Ellipse depth="11" x="18" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:BorderContainer x="3" y="3"
								width="100%" height="100%" borderVisible="false" 
								horizontalCenter="0" verticalCenter="0">
								<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
								</s:layout>
								<mx:Text text="Holes in corners" styleName="NumericStepperDates"/>
								</s:BorderContainer>
								</s:BorderContainer-->
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="FlagGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FlagGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="68" columnWidth="34" requestedColumnCount="7" requestedRowCount="3"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/nl.jpg" 
										 click="SelectFlagGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="SymbolGallery" width="100%" height="100%">
					<!--fx:Script>
					<![CDATA[
					private var Symbols_AC:ArrayList = new ArrayList
					([
					{s:"Image", source:"assets/symbols/Audi.png"},
					{ID:"Audi", source:"assets/symbols/Audi.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BartSimpson", imageSource:"assets/symbols/BartSimpson.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BeerGlass", imageSource:"assets/symbols/BeerGlass", PriceEUR:"0.00", Discontinued:false, InStock:true}
					]);
					]]>
					</fx:Script-->				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="SymbolGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="34" columnWidth="34" requestedColumnCount="7" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
										  paddingTop="5" paddingBottom="5" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Audi.png" 
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BartSimpson.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BeerGlass.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BerlinBears.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BettyBoop.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bird.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/BMW.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bowling.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cannabis.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Crown.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/DartBoard.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dog.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dolphin.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dragon.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Elephant.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/EuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/FerrisWheel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Football.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Ford.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/FormulaOne.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Helicopter.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/HelloKitty.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horseshoe.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>								
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargeHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargePeaceSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Lightning.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Left.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Right.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MAN.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Mercedes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MiddleFinger.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Moon&amp;Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Motorcycle.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/MusicalNotes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Opel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pacifier.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/PalmTree.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Peugot.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pistol.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Playboy.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Rings.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Scania.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SEAT.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Skull&amp;Crossbones.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmallHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmileyFace.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Soccer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/SpongeBob.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Telephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/TennisRacket.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Tractor.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Volkswagen.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/Windsurfer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/symbols/WinnieThePooh.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
			</mx:ViewStack>
			
		</s:BorderContainer>
		
		<s:Group id="DatesContainer"
				 width="38" height="100%"
				 minWidth="0" minHeight="0"
				 alpha="0">
			<mx:Text text="2 3" width="36" height="26" styleName="PlateDates" color="red"/>
			<mx:Text text="0 7" width="36" height="26" styleName="PlateDates" color="red"/>
			<mx:Text text="1 3" width="36" height="26" styleName="PlateDates" color="red"/>
		</s:Group>
		
	</s:BorderContainer>
	
</s:Application>