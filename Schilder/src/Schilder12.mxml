<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:layouts="org.flexlayouts.layouts.*"
			   xmlns:component="component.*"
			   xmlns:ns1="flexScript.*"
			   width="100%" height="100%"
			   creationComplete="SetDefaults();init();init2();">
	
	<!--Notes:
	- CenterSymbol implies that current Box is X2
	-->
	
	<fx:Style source="main.css"/>
	<fx:Declarations>
		<s:ArrayCollection id="ar1">
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Black.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkBlue.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkGreen.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkYellow.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterBlue.jpg" 
					 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGold.jpg"
					 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGreen.jpg" 
					 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterRed.jpg"
					 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/LightGreen.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Pink.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Rainbow.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Raindrops.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Red.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ReflexWhite.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ShockingPink.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Silver.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Space.jpg"
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
			<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/White.jpg" 
					 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="ar2">
			<!--<s:BorderContainer width="38" height="36" backgroundColor="black"
			click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);"/>								
			<s:BorderContainer id="BlackFoilPlate_OuterContainer" width="220" height="38"
			styleName="MiniPlateOuterContainer" backgroundColor="white"
			click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);">
			<s:layout>
			<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
			</s:layout>
			<s:BorderContainer id="BlackFoilPlate_InnerPlateContainer" 
			width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
			styleName="MiniPlateInnerContainer" backgroundColor="black">
			<s:layout>
			<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
			</s:layout>
			<s:BorderContainer id="BlackFoilPlate_CorePlateContainer" 
			width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
			styleName="MiniPlateCoreContainer" backgroundColor="white">
			</s:BorderContainer>
			</s:BorderContainer>
			</s:BorderContainer>
			<s:BorderContainer width="38" height="36" backgroundColor="white"
			click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);"/>								
			<s:BorderContainer id="WhiteFoilPlate_OuterContainer" width="220" height="38"
			styleName="MiniPlateOuterContainer" backgroundColor="black"
			click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);">
			<s:layout>
			<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
			</s:layout>
			<s:BorderContainer id="WhiteFoilPlate_InnerPlateContainer" 
			width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
			styleName="MiniPlateInnerContainer" backgroundColor="white">
			<s:layout>
			<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
			</s:layout>
			<s:BorderContainer id="WhiteFoilPlate_CorePlateContainer" 
			width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
			styleName="MiniPlateCoreContainer" backgroundColor="black">
			</s:BorderContainer>								
			</s:BorderContainer>
			</s:BorderContainer>-->
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="symbolList">
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Audi.png" 
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/BartSimpson.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/BeerGlass.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/BerlinBears.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/BettyBoop.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bird.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/BMW.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bowling.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Bus.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cannabis.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Cat.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Crown.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/DartBoard.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dog.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dolphin.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Dragon.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Elephant.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/EuroSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/FerrisWheel.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Football.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Ford.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/FormulaOne.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Helicopter.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/HelloKitty.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horse.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Horseshoe.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>								
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargeHeart.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargePeaceSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Lightning.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Left.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/LKW_Right.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/MAN.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Mercedes.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/MiddleFinger.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Moon&amp;Star.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Motorcycle.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/MusicalNotes.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Opel.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pacifier.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/PalmTree.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Peugot.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Pistol.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Playboy.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Rings.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Scania.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/SEAT.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Skull&amp;Crossbones.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmallHeart.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/SmileyFace.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Soccer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/SpongeBob.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Star.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Telephone.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/TennisRacket.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Tractor.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Volkswagen.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/Windsurfer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="stretch" source="assets/symbols/WinnieThePooh.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>			
		</s:ArrayCollection>

	</fx:Declarations>	
	<fx:Script>
		<![CDATA[
// !		
			import flash.utils.getQualifiedClassName;
			
			import mx.core.UIComponent;
			
			import spark.core.IGraphicElement;
			
			import utility.TexturedText;
			
			[Bindable] private var PlateReduction:Number = .24; //% reduction from actual plate size to radio button'ed plates
			
			private var Debugging:Boolean = false;
			
			import component.LargePreview;
			import flash.net.FileReference;
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import spark.layouts.*;
			import spark.layouts.supportClasses.LayoutBase;
			
			//Non-Preview constants
			public static const LargePlateWidth:uint = 520;
			public static const LargePlateHeight:uint = 113;			
			public static const MediumPlateWidth:uint = 400;
			public static const MediumPlateHeight:uint = 113;	
			public static const SmallPlateWidth:uint = 300;
			public static const SmallPlateHeight:uint = 90;
			public static const HousePlateWidth:uint = 173;
			public static const HousePlateHeight:uint = 113;
			
			public static const DateWidth:int = 36;
			public static const DateHeight:int = 82;
			
			public static const LargeFlagWidth:int = 45;
			public static const LargeFlagHeight:int = 97;
			public static const SmallFlagWidth:int = 22;
			public static const SmallFlagHeight:int = 50;
			
			public static const TallSymbolHeight:int = 80;
			public static const TallSymbolWidth:int = 40;
			public static const ShortSymbolHeight:int = 40;
			public static const ShortSymbolWidth:int = 20;
// !!
			public static const SymbolWidth:int = 70;
			public static const SymbolHeight:int = 70;
// !!
			
			public static const CharacterButtonWidth:int = 26;
			public static const CharacterButtonHeight:int = 37;
			public static const LargeCharacterWidth:int = 57;
			public static const LargeCharacterHeight:int = 77.5;
	//		public static const LargeCharacterFontSize:int = 96;
			public static const MediumCharacterWidth:int = 31;
			public static const MediumCharacterHeight:int = 58;
	//		public static const MediumCharacterFontSize:int = 31;
			public static const SmallCharacterWidth:int = 30;
			public static const SmallCharacterHeight:int = 42;
	//		public static const SmallCharacterFontSize:int = 30;
			
			[Embed(source="assets/down_triangle.png")]
			public static const DownTriangle:Class;
			
			[Bindable] private var PlateSize:String;
			[Bindable] private var PlateWidth:int;
			[Bindable] private var PlateHeight:int;
			[Bindable] private var PlateName:String;
			[Bindable] private var PlateColor:uint;
			[Bindable] private var PlateIsImage:Boolean;
			[Bindable] private var SelectedPlateImage:Object;
			[Bindable] private var Plate_MiniPlatePlateColor:uint;
			[Bindable] private var Plate_MiniPlateFoilColor:uint;
			private var PlateIsMetallic:Boolean;
			
			[Bindable] private var FoilName:String;
			[Bindable] private var FoilColor:uint;
			[Bindable] private var FoilIsImage:Boolean;
			[Bindable] private var SelectedFoilImage:Object;
			[Bindable] private var SelectedFoilSwatchImage:Object;
			[Bindable] private var Foil_MiniPlatePlateColor:uint;
			[Bindable] private var Foil_MiniPlateFoilColor:uint;
			
			[Bindable] private var SelectedDate1:String;
			[Bindable] private var SelectedDate2:String;
			[Bindable] private var SelectedDate3:String;
			private var DateCount:int;
			
			[Bindable] private var FlagSize:String;
			[Bindable] private var FlagWidth:int;
			[Bindable] private var FlagHeight:int;
			[Bindable] private var SelectedFlag:Object;
			private var FlagCountry:String;
			private var FlagCount:uint;
			
			[Bindable] private var SelectedSymbol:Object;
			[Bindable] private var SymbolSize:String;
			[Bindable] private var CenterSymbol:Boolean = false; //true means there is a center symbol
			private var TallSymbolCount:int;
			private var ShortSymbolCount:int;
			
			[Bindable] private var Holes:String;
			[Bindable] private var SelectedHoles:Object;
			private var HoleCount:int;
			private var CupCount:int;

			[Bindable] private var CharacterFontSize:int;
			[Bindable] private var CharacterSize:String;
			[Bindable] private var CharacterWidth:int;
			[Bindable] private var CharacterHeight:int;
			
			[Bindable] public var SelectedCharacter:String;
			private var ElementType:String;
			[Bindable] private var SwitchButtonImage:Object;
			[Bindable] private var SwitchButtonVisible:Boolean;
			[Bindable] private var vgap:int = 5;
			
			private var CharactersAdded:int = 0;
			private var X1_LineCount:int;
			private var X2_LineCount:int;
			private var LeftLoad:int;
			private var RightLoad:int;
			private var CurrentLine:String;
			private var CurrentBoxColor:uint;
			private var CurrentBox:String;
			private var TargetBox:String;
			private var LastBox:String;
			private var NextBox:String;
			
			private var X1A_Index:int = 1;
			private var X1B_Index:int = 1;
			private var X2A_Index:int = 1;
			private var X2B_Index:int = 1;
			
			[Bindable] private var OutlineColor:uint;
			[Bindable] private var CurrentOutlineAlpha:int;
			
			[Bindable] private var Price:int;
			[Bindable] private var DisplayPrice:String;
			[Bindable] private var ac:ArrayCollection;
					
			private var StackAction:Array = new Array();
			
			private function init2():void
			{
				HideShow();
				SetNextBoxAndSwitchButtonImage();
				Outlines();
			}

			public function init():void
			{
				//FoilGalleryList.dataProvider = ac;
				PlateGalleryList.dataProvider = ar1;
				
				//SelectedSymbolBC = symbolList.getItemAt(0) as BorderContainer;
				//SelectedSymbolBC.addElement(symbolList.getItemAt(0) as Image);
				var tt:TexturedText = new TexturedText();
				var imgTxt:Image = new Image();
				imgTxt.source = SelectedFoilSwatchImage;
				imgTxt.width = 38;
				imgTxt.height = 38;
				
				var imgTmp:Image = new Image();
				imgTmp.source = SelectedSymbol
				imgTmp.width = 38;
				imgTmp.height = 38;
				
				SelectedSymbolBC.addElement(tt.getTextMaskImage(imgTxt, imgTmp));	
				SelectedSymbolBC.visible = true;
				
				/*
				Foil_MiniPlateFrame.removeAllElements();
				var bc:BorderContainer = (event.currentTarget as BorderContainer);
				var img:Image = drawUISnapShot(bc);
				img.percentHeight = 100;
				img.percentWidth = 100;
				Foil_MiniPlateFrame.addElement(img);
				var img:Image = bc.getElementAt(0) as Image;
				SelectedFoilSwatchImage = img.source;
				*/
			
				var imgSrc:Image = new Image();
				imgSrc.source = SelectedFoilImage;
				imgSrc.width = 220;
				imgSrc.height = 38;
				imgSrc.fillMode = "scale";
				imgSrc.scaleMode = "stretch";
				
				var imgTmp2:Image = new Image();
				imgTmp2.source = "assets/foils/RedFoilSwatch.png";
				imgTmp2.width = imgSrc.width;
				imgTmp2.height = imgSrc.height;
				imgTmp2.fillMode = "scale";
				imgTmp2.scaleMode = "stretch";
				
				var bd:BorderContainer = tt.getTextMaskImage(imgTmp2, imgSrc);
				bd.addEventListener(MouseEvent.CLICK, SelectFoilGalleryImage);
				bd.addEventListener(MouseEvent.CLICK, CloseGallery);
				bd.width = imgSrc.width;
				bd.height = imgSrc.height;
				
				var img:Image = drawUISnapShot(bd);
				img.percentHeight = 100;
				img.percentWidth = 100;
		//		Foil_MiniPlateFrame.addElement(imgSrc);
				//var img:Image = bd.getElementAt(0) as Image;
				//SelectedFoilSwatchImage = img.source;
			}
			
			protected function updateFoilToSymbol():void
			{
				var imgTxt:Image;
				var imgTmp:Image;
				var imgSrc:Image;
				ac = new ArrayCollection();
				var tt:TexturedText = new TexturedText();
				for (var i:int=0; i < symbolList.length; i++)
				{
					imgTmp = symbolList.getItemAt(i) as Image;
					SelectedFoilSwatchImage;
					imgTxt = new Image();
					imgTxt.source = String(SelectedFoilSwatchImage);
					imgTxt.width = imgTmp.width;
					imgTxt.height = imgTmp.height;
					imgTxt.fillMode = imgTmp.fillMode;
					imgTxt.scaleMode = imgTmp.scaleMode;
					var bd:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
					bd.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
					bd.addEventListener(MouseEvent.CLICK, CloseGallery);
					ac.addItem(bd);
				}
				SymbolGalleryList.dataProvider = ac;
			}
			
			protected function updateFoilToPlateBorder():void
			{
				// TODO Auto-generated method stub
				trace("change");
				var imgTxt:Image;
				var imgTmp:Image;
				var imgSrc:Image;
				ac = new ArrayCollection();
				var tt:TexturedText = new TexturedText();
				for (var i:int=0; i < ar2.length; i++)
				{
					//even
					if (i%2 == 0)
					{
						imgTmp = ar2.getItemAt(i) as Image;
						imgTxt = new Image();
						imgTxt.source = imgTmp.source;
						imgTxt.width = imgTmp.width;
						imgTxt.height = imgTmp.height;
						imgTxt.fillMode = imgTmp.fillMode;
						imgTxt.scaleMode = imgTmp.scaleMode;
						imgTxt.addEventListener(MouseEvent.CLICK, SelectFoilGalleryImage);
						imgTxt.addEventListener(MouseEvent.CLICK, CloseGallery);
						
						//click="SelectFoilGalleryImage(event); CloseGallery(event);"
						ac.addItem(imgTxt);
					}
						//odd
					else
					{	
						imgTmp = ar2.getItemAt(i) as Image;
						imgSrc = new Image();
						imgSrc.source = imgTmp.source;
						imgSrc.width = imgTmp.width;
						imgSrc.height = imgTmp.height;
						imgSrc.fillMode = imgTmp.fillMode;
						imgSrc.scaleMode = imgTmp.scaleMode;
						
						var imgTmp2:Image = new Image();
						imgTmp2.source = imgTxt.source;
						imgTmp2.width = imgSrc.width;
						imgTmp2.height = imgSrc.height;
						imgTmp2.fillMode = imgTxt.fillMode;
						imgTmp2.scaleMode = imgTxt.scaleMode;
						
						var bd:BorderContainer = tt.getTextMaskImage(imgTmp2, imgSrc);
						bd.addEventListener(MouseEvent.CLICK, SelectFoilGalleryImage);
						bd.addEventListener(MouseEvent.CLICK, CloseGallery);
						ac.addItem(bd);
					}
				}
				FoilGalleryList.dataProvider = ac;				
			}
			
			protected function Galleries_changeHandler(event:IndexChangedEvent):void
			{
				trace(event.newIndex);
				//1:foil
				//2:hole
				//4:symbol
				//0:plate color
				if (event.newIndex == 1)
					updateFoilToPlateBorder();
				else if (event.newIndex == 4)
					updateFoilToSymbol();
			}
			
		/*	protected function Galleries_changeHandler(event:IndexChangedEvent):void
			{
				// TODO Auto-generated method stub
				trace("change");
				var imgTxt:Image;
				var imgTmp:Image;
				var imgSrc:Image;
				ac = new ArrayCollection();
				var tt:TexturedText = new TexturedText();
				for (var i:int=0; i < ar2.length; i++)
				{
					//even
					if (i%2 == 0)
					{
						imgTmp = ar2.getItemAt(i) as Image;
						imgTxt = new Image();
						imgTxt.source = imgTmp.source;
						imgTxt.width = imgTmp.width;
						imgTxt.height = imgTmp.height;
						imgTxt.fillMode = imgTmp.fillMode;
						imgTxt.scaleMode = imgTmp.scaleMode;
						
						ac.addItem(imgTxt);
					}
					//odd
					else
					{	
						imgTmp = ar2.getItemAt(i) as Image;
						imgSrc = new Image();
						imgSrc.source = imgTmp.source;
						imgSrc.width = imgTmp.width;
						imgSrc.height = imgTmp.height;
						imgSrc.fillMode = imgTmp.fillMode;
						imgSrc.scaleMode = imgTmp.scaleMode;
					
						var imgTmp2:Image = new Image();
						imgTmp2.source = imgTxt.source;
						imgTmp2.width = imgSrc.width;
						imgTmp2.height = imgSrc.height;
						imgTmp2.fillMode = imgTxt.fillMode;
						imgTmp2.scaleMode = imgTxt.scaleMode;
						
						ac.addItem(tt.getTextMaskImage(imgTmp2, imgSrc));
					}
				}
				FoilGalleryList.dataProvider = ac;
			} */
			
			private function SetDefaults():void
			{
				PlateSize = 'Large';
				SetPlateSize();

				SelectedPlateImage = 'assets/plates/DarkYellow.jpg';
				PlateColor = 0xffffff; //white
				PlateIsImage = false;
				Plate_MiniPlatePlateColor = PlateColor;
					if(Debugging) Alert.show('Plate_MiniPlateFoilColor:');
					if(Debugging) Alert.show(String(Plate_MiniPlateFoilColor));
				Plate_MiniPlateFoilColor = FoilColor;
				SetMiniPlatePlate();
				SetPreviewPlate();

				SelectedFoilImage = 'assets/foils/RedFoilPlate.png';
				FoilColor = 0x000000; //black
FoilIsImage = true;
				SelectedFoilSwatchImage = 'assets/texture/texture.jpg';
				Foil_MiniPlatePlateColor = PlateColor;
					if(Debugging) Alert.show('Foil_MiniPlateFoilColor:');
					if(Debugging) Alert.show(String(Foil_MiniPlateFoilColor));
				Foil_MiniPlateFoilColor = FoilColor;
				SetMiniPlateFoil();
				SetPreviewFoil();
				
				DateCount = 0;
				
				SetDefaultFlagSize();
				if(Debugging) Alert.show('FlagSize:');
				if(Debugging) Alert.show(FlagSize);
				if(Debugging) Alert.show(String(FlagWidth));
				if(Debugging) Alert.show(String(FlagHeight))
				SelectedFlag = 'assets/flags/D.jpg';
				FlagCount = 0;
				
				SelectedSymbol = 'assets/symbols/LargeHeart.png';
				TallSymbolCount = 0;
				ShortSymbolCount = 0;
				
				Holes = 'NoneNone';
				SelectedHoles = 'assets/holes/NoneNone.jpg';
				HoleCount = 0;
				CupCount = 0;
				SetPreviewHoles();
				
				SetDefaultCharacterSize();
				if(Debugging) Alert.show('CharacterSize:');
				if(Debugging) Alert.show(CharacterSize);
				if(Debugging) Alert.show(String(CharacterWidth));
				if(Debugging) Alert.show(String(CharacterHeight));
				
				LeftLoad = 0;
				RightLoad = 0;
				X1_LineCount = 1;
				X2_LineCount = 1;
				CurrentLine = 'Line 1';
				CurrentBox = 'X1A';
				CurrentBoxColor = 0xffff00;
				SwitchButtonVisible = false;
				OutlineColor = 0x00ced1;
				CurrentOutlineAlpha = 1;
				
				Outlines();
			}
			
			private function SetPlateSize():void
			{
				if (PlateSize == 'Large')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PlateWidth = LargePlateWidth;
					PlateHeight = LargePlateHeight;
				}
				else if (PlateSize == 'Medium')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateWidth = MediumPlateWidth;
					PlateHeight = MediumPlateHeight;
				}
				else if (PlateSize == 'Small')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateWidth = SmallPlateWidth;
					PlateHeight = SmallPlateHeight;
				}
				else if (PlateSize == 'House')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateWidth = HousePlateWidth;
					PlateHeight = HousePlateHeight;
				}
				
				CalculatePrice();
				
				EnableDisableControls();
			}
			
			private function EnableDisableControls():void
			{
				if (PlateSize == 'Large')
				{					
					DateChooser.enabled = true;
					FlagChooser.enabled = true;
					SymbolChooser.enabled = true;
					LinesChooser.enabled = true;
				}
				else if (PlateSize == 'Medium')
				{
					DateChooser.enabled = true;
					FlagChooser.enabled = true;
					SymbolChooser.enabled = true;
					LinesChooser.enabled = false;
				}
				else if (PlateSize == 'Small')
				{
					DateChooser.enabled = false;
					FlagChooser.enabled = false;
					SymbolChooser.enabled = false;
					LinesChooser.enabled = false;
				}
				else if (PlateSize == 'House')
				{
					DateChooser.enabled = false;
					FlagChooser.enabled = false;
					SymbolChooser.enabled = false;
					LinesChooser.enabled = true;
				}
			}
			
			private function ChangePlateSize(event:MouseEvent,RequestedPlateSize:String):void
			{
				PlateSize = RequestedPlateSize;
				SetPlateSize();
			}
			
			private function SetMiniPlatePlate():void
			{
				if (PlateIsImage == true)
				{
					Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
					Plate_MiniPlateNonImageContainer.includeInLayout = false; Plate_MiniPlateNonImageContainer.visible = false;
				}
				else if (PlateIsImage == false)
				{
					Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
					Plate_MiniPlateNonImageContainer.includeInLayout = true; Plate_MiniPlateNonImageContainer.visible = true;
				}
			}
//!!			
			private function SetMiniPlateFoil():void
			{
				if (FoilIsImage == true)
				{
					Foil_MiniPlateImageContainer.includeInLayout = true; Foil_MiniPlateImageContainer.visible = true;
//					Foil_MiniPlateNonImageContainer.includeInLayout = false; Foil_MiniPlateNonImageContainer.visible = false;
				}
				else if (FoilIsImage == false)
				{
					Foil_MiniPlateImageContainer.includeInLayout = false; Foil_MiniPlateImageContainer.visible = false;
//					Foil_MiniPlateNonImageContainer.includeInLayout = true; Foil_MiniPlateNonImageContainer.visible = true;
				}
			}
			
			// !!! Changing plate size may compel changing flag size
			private function SetFlagSize():void
			{
				if (FlagSize == 'Large')
				{
					FlagWidth = LargeFlagWidth;
					FlagHeight = LargeFlagHeight;
				}
				else if (FlagSize == 'Small')
				{
					FlagWidth = SmallFlagWidth;
					FlagHeight = SmallFlagHeight;
				}
			}

//Set flag based on geolocation			
			private function SetDefaultFlagSize():void
			{
				if (PlateSize == 'Large' || PlateSize == 'Medium')
				{
					FlagSize = 'Large';
				}
				else
				{
					FlagSize = 'Small';
				}
				
				SetFlagSize();
			}
			
			private function SetDefaultCharacterSize():void
			{
				if (PlateSize == 'Large')
				{
					CharacterSize = 'Medium';
				}
				else if (PlateSize == 'Medium')
				{
					CharacterSize = 'Medium';
				}
				else if (PlateSize == 'Small' || PlateSize == 'House')
				{
					CharacterSize = 'Small';
				}
				
				SetCharacterDimensions();
			}
			
			private function SetCharacterDimensions():void
			{
				if (CharacterSize == 'Large')
				{
					CharacterWidth = LargeCharacterWidth;
					CharacterHeight = LargeCharacterHeight;
//					CharacterFontSize = LargeCharacterFontSize;
				}
				else if (CharacterSize == 'Medium')
				{
					CharacterWidth = MediumCharacterWidth;
					CharacterHeight = MediumCharacterHeight;
//					CharacterFontSize = MediumCharacterFontSize;
				}
				else if (CharacterSize == 'Small')
				{
					CharacterWidth = SmallCharacterWidth;
					CharacterHeight = SmallCharacterHeight;
//					CharacterFontSize = SmallCharacterFontSize;
				}
			}

// !!! Changing character size needs to change existing characters, and could run into trouble
// !!! Changing plate size can compel changing character size
			private function ChangeCharacterSize(event:MouseEvent,RequestedCharacterSize:String):void
			{
				CharacterSize = RequestedCharacterSize;
				SetCharacterDimensions();
			}
			
			private function SetPreviewPlate():void
			{
				if (PlateIsImage == true)
				{			
					PlateImageBorder.includeInLayout = true; PlateImageBorder.visible = true;
					PlateNonImageBorder.includeInLayout = false; PlateNonImageBorder.visible = false;
					PreviewImageBorder.includeInLayout = true; PreviewImageBorder.visible = true;
					PreviewPlateImage.source = SelectedPlateImage;
					PreviewPlateImage.includeInLayout = true; PreviewPlateImage.visible = true;
				}
				else if (PlateIsImage == false)
				{
					PlateImageBorder.includeInLayout = false; PlateImageBorder.visible = false;
					PlateNonImageBorder.includeInLayout = true; PlateNonImageBorder.visible = true;
					PreviewImageBorder.includeInLayout = false; PreviewImageBorder.visible = false;
					PreviewPlateImage.includeInLayout = false; PreviewPlateImage.visible = false;
					PreviewContainer.setStyle('backgroundColor',Plate_MiniPlatePlateColor);
				}
			}
			
			private function SetPreviewFoil():void
			{
				if (FoilIsImage == true)
				{
						if(Debugging) Alert.show('SetPreviewFoil FoilIsImage=true');
						if(Debugging) Alert.show('SelectedFoilImage.source:');
						if(Debugging) Alert.show(String(SelectedFoilImage));
					PlateImageBorder.source=SelectedFoilImage;
					PreviewFoilImage.source = SelectedFoilImage;
					PreviewFoilImage.includeInLayout = true; PreviewFoilImage.visible = true;
				}
				else if (FoilIsImage == false)
				{
						if(Debugging) Alert.show('SetPreviewFoil FoilIsImage=false');
						if(Debugging) Alert.show('Foil_MiniPlatePlateColor:');
						if(Debugging) Alert.show(String(Foil_MiniPlateFoilColor));
						FoilColor = Foil_MiniPlateFoilColor;
					PreviewFoilImage.includeInLayout = false; PreviewFoilImage.visible = false;
					PlateNonImageBorder.setStyle('borderColor',FoilColor);	
				}				
			}
			
			/*private function OpenGallery(event:MouseEvent,GalleryName:String):void 
			{
				Galleries.selectedChild == GalleryName;
				GalleryWindow.visible = true;
			}*/
			
			private function OpenPlateGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = PlateGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Plate colors and patterns';
			}
			
			private function SelectPlateGalleryImage(event:MouseEvent,IsMetallic:Boolean):void 
			{
				PlateIsImage = true;
				Plate_MiniPlateNonImageContainer.includeInLayout = false; Plate_MiniPlateNonImageContainer.visible = false;
				Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
				
				var PlateGalleryImage:Image;
				PlateGalleryImage = event.currentTarget as Image;
				SelectedPlateImage = PlateGalleryImage as Image;
				
				if(Debugging) Alert.show('SelectPlateGalleryImage');
				if(Debugging) Alert.show('PlateGalleryImage:');
				if(Debugging) Alert.show(String(PlateGalleryImage));
				
//!! Wrong place to set this
				if (IsMetallic == true)
				{
					PlateIsMetallic = true;
				}
				else
				{
					PlateIsMetallic = false;
				}
			}
			
			private function SelectPlateGalleryNonImage(event:MouseEvent,PlateName:String):void 
			{;
				PlateIsImage = false;
				Plate_MiniPlateNonImageContainer.includeInLayout = true; Plate_MiniPlateNonImageContainer.visible = true;
				Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
				
				if (PlateName == 'BlackPlate')
				{
					Plate_MiniPlatePlateColor = 0x000000;
					Plate_MiniPlateFoilColor = 0x000000;
				}
				else if (PlateName == 'WhitePlate')
				{
					Plate_MiniPlatePlateColor = 0xffffff;
					Plate_MiniPlateFoilColor = 0xe6e6e6;
				}
				else if (PlateName == 'LimeGreenPlate')
				{
					Plate_MiniPlatePlateColor = 0x00ff00;
					Plate_MiniPlateFoilColor = 0x00e600;
				}
				
				if(Debugging) Alert.show('SelectPlateGalleryNonImage');
				if(Debugging) Alert.show('PlateName:');
				if(Debugging) Alert.show(PlateName);
			}
			
			private function OpenFoilGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FoilGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Foil colors and patterns';
			}
			
			private function drawUISnapShot(target:UIComponent):Image
			{
				            var UIBData:BitmapData = new BitmapData(target.width,target.height);
				            var UIMatrix:Matrix = new Matrix();
				            UIBData.draw(target, UIMatrix);
				            
				var img:Image = new Image();
				img.source= new Bitmap(UIBData);
				            invalidateDisplayList();
				return img;
			}
			
			private function SelectFoilGalleryImage(event:MouseEvent):void 
			{
			if(flash.utils.getQualifiedClassName(event.currentTarget) == "spark.components::BorderContainer")
				{
					Foil_MiniPlateFrame.removeAllElements();
					var bc:BorderContainer = (event.currentTarget as BorderContainer);
					var img:Image = drawUISnapShot(bc);
					img.percentHeight = 100;
					img.percentWidth = 100;
					//var img1:Image = bc.getElementAt(0) as Image;
					//var img2:Image = bc.getElementAt(1) as Image;
					//img1.percentHeight = 100;
					//img1.percentWidth = 100;
					//img2.percentHeight = 100;
					//img2.percentWidth = 100;
					//bc.percentHeight = 100;
					//bc.percentWidth = 100;
					Foil_MiniPlateFrame.addElement(img);
					var img:Image = bc.getElementAt(0) as Image;
					SelectedFoilSwatchImage = img.source;
					FoilIsImage = true;
				}
				/*
				FoilIsImage = true;
				SetMiniPlateFoil();
				var FoilGalleryImage:Image;
				FoilGalleryImage = event.currentTarget as Image;
				SelectedFoilImage = FoilGalleryImage;
				var SelectedFoilImageSource:String;
				SelectedFoilImageSource = FoilGalleryImage.source as String;
				
				if (SelectedFoilImageSource.indexOf("Black") >= 0)
				{
				FoilName = "BlackFoil";
				}
				else if (SelectedFoilImageSource.indexOf("White") >= 0)
				{
				FoilName = "WhiteFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Blue") >= 0)
				{
				FoilName = "BlueFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Gold") >= 0)
				{
				FoilName = "GoldFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Green") >= 0)
				{
				FoilName = "GreenFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Pink") >= 0)
				{
				FoilName = "PinkFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Red") >= 0)
				{
				FoilName = "RedFoil";
				}
				else if (SelectedFoilImageSource.indexOf("Silver") >= 0)
				{
				FoilName = "SilverFoil";
				}
				
				if(Debugging) Alert.show('SelectFoilGalleryImage');
				if(Debugging) Alert.show('FoilName:');
				if(Debugging) Alert.show(FoilName);
				
				SelectedFoilSwatchImage = ('assets/foils/' + FoilName + 'Swatch.jpg');
				if(Debugging) Alert.show('Selected foil swatch image' +''+SelectedFoilSwatchImage);
				*/
			}
			
			private function SelectFoilGalleryNonImage(event:MouseEvent,FoilName:String):void 
			{
				FoilIsImage = false;
				SetMiniPlateFoil();
				
				if (FoilName == 'BlackFoil')
				{
					Foil_MiniPlatePlateColor = 0x000000;
					Foil_MiniPlateFoilColor = 0x000000;
				}
				else if (FoilName == 'WhiteFoil')
				{
					Foil_MiniPlatePlateColor = 0xffffff;
					Foil_MiniPlateFoilColor = 0xe6e6e6;
				}
				
				if(Debugging) Alert.show('SelectFoilGalleryNonImage');
				if(Debugging) Alert.show('FoilName');
				if(Debugging) Alert.show(FoilName);
			}
			
			private function OpenFlagGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FlagGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'EU country plate stickers';
			}
			
			private function SelectFlagGalleryImage(event:MouseEvent,Country:String):void 
			{
				var FlagGalleryImage:Image;
				FlagGalleryImage = event.currentTarget as Image;
				SelectedFlag = FlagGalleryImage;
				FlagCountry = Country;
			}
			
			private function OpenSymbolGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Symbols';
			}
			
			private function SelectSymbolGalleryImage(event:MouseEvent):void 
			{
				var SymbolGalleryImage:Image;
				
				if(flash.utils.getQualifiedClassName(event.currentTarget) == "spark.components::BorderContainer")
				{
					//SelectedSymbol = event.currentTarget;
					//SelectedSymbolBC = event.currentTarget as BorderContainer
					SelectedSymbolBC.removeAllElements();
					SelectedSymbolBC.addElement(event.currentTarget as BorderContainer);
					SelectedSymbol = drawUISnapShot(event.currentTarget as BorderContainer);
				}
				else
				{
					SymbolGalleryImage = event.currentTarget as Image;
					SelectedSymbol = SymbolGalleryImage;
				}
				
				var SelectedSymbolSource:String;
				SelectedSymbolSource = SymbolGalleryImage.source as String;			
				
				if (SelectedSymbolSource.indexOf("SmallEuroSign") >= 0)
				{
					SymbolSize = 'Short'
				}
				else if (SelectedSymbolSource.indexOf("TinyEuroSign") >= 0)
				{
					SymbolSize = 'Short';
				}
				else if (SelectedSymbolSource.indexOf("SmallTelephone") >= 0)
				{
					SymbolSize = 'Short';
				}
				else
				{
					SymbolSize = 'Tall';
				}				
			}
			
			private function OpenHolesGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = HolesGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Hole and suction cup options';
			}		

			private function SelectHolesGalleryImage(event:MouseEvent):void 
			{
				var HolesGalleryImage:Image;
				HolesGalleryImage = event.currentTarget as Image;
				SelectedHoles = HolesGalleryImage;
				var SelectedHolesSource:String;
				SelectedHolesSource = HolesGalleryImage.source as String;
				
				if (SelectedHolesSource.indexOf("FourCups") >= 0)
				{
					Holes = 'FourCups'
				}
				else if (SelectedHolesSource.indexOf("TopCups") >= 0)
				{
					Holes = 'TopCups';
				}
				else if (SelectedHolesSource.indexOf("MiddleCups") >= 0)
				{
					Holes = 'MiddleCups';
				}
				else if (SelectedHolesSource.indexOf("BottomCups") >= 0)
				{
					Holes = 'BottomCups';
				}
				else if (SelectedHolesSource.indexOf("FourHoles") >= 0)
				{
					Holes = 'FourHoles';
				}
				else if (SelectedHolesSource.indexOf("TopHoles") >= 0)
				{
					Holes = 'TOpHoles';
				}
				else if (SelectedHolesSource.indexOf("MiddleHoles") >= 0)
				{
					Holes = 'MiddleHoles';
				}
				else if (SelectedHolesSource.indexOf("BottomHoles") >= 0)
				{
					Holes = 'BottomHoles';
				}
				else if (SelectedHolesSource.indexOf("NoneNone") >= 0)
				{
					Holes = 'NoneNone';
				}
			}
			
			private function CloseGallery(event:MouseEvent):void 
			{
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			private function CloseGallery_():void 
			{
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			private function SetPreviewHoles():void
			{
				if (Holes == 'FourCups')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = true;
					BottomRightCup.visible = true;
					HoleCount = 4;
					CupCount = 4;
				}
				else if (Holes == 'TopCups')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'MiddleCups')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = true;
					MiddleRightCup.visible = true;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'BottomCups')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'FourHoles')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'TopHoles')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'MiddleHoles')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'BottomHoles')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'NoneNone')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 0;
					CupCount = 0;
				}
				
				CalculatePrice();
			}
			
		/*	private function AddCreatePlateElementsContainerChildren():void
			{
				LeftFlagBox = new HGroup;
				LeftFlagBox.id = 'LeftFlagBox';
				LeftFlagBox.width = 0;
				LeftFlagBox.height = FlagHeight;
				LeftFlagBox.horizontalAlign = 'center';
				LeftFlagBox.verticalAlign = 'middle';
				LeftFlagBox.includeInLayout = false; LeftFlagBox.visible = false;
				PlateElementsContainer.addElement(LeftFlagBox);
				
				LeftDateBox = new VGroup;
				LeftDateBox.id = 'LeftDateBox';
				LeftDateBox.width = 0;
				LeftDateBox.height = DateHeight;
				LeftDateBox.horizontalAlign = 'center';
				LeftDateBox.verticalAlign = 'middle';
				LeftDateBox.setStyle('kerning',false);
				LeftDateBox.includeInLayout = false; LeftDateBox.visible = false;
				PlateElementsContainer.addElement(LeftDateBox);
				
				LeftSymbolBox = new HGroup;
				LeftSymbolBox.id = 'LeftSymbolBox';
				LeftSymbolBox.width = 0;
				LeftSymbolBox.height = SymbolHeight;
				LeftSymbolBox.horizontalAlign = 'center';
				LeftSymbolBox.verticalAlign = 'middle';
				LeftSymbolBox.includeInLayout = false; LeftSymbolBox.visible = false;
				PlateElementsContainer.addElement(LeftSymbolBox);
								
				CenterSymbolBox = new HGroup;
				CenterSymbolBox.id = 'CenterSymbolBox';
				CenterSymbolBox.width = 0;
				CenterSymbolBox.height = SymbolHeight;
				CenterSymbolBox.horizontalCenter = 0;
				CenterSymbolBox.verticalCenter = 0;
				CenterSymbolBox.horizontalAlign = 'center';
				CenterSymbolBox.verticalAlign = 'middle';
				CenterSymbolBox.includeInLayout = false; CenterSymbolBox.visible = false;
				PlateElementsContainer.addElement(CenterSymbolBox);
				
				X2A = new HGroup;
				X2A.id = 'X2A';
				X2A.width = CharacterWidth;
				X2A.percentWidth = 100;
				X2A.percentHeight = 100;
				X2A.clipAndEnableScrolling=true;
				X2A.horizontalCenter = 0;
				X2A.verticalCenter = 0;
				X2A.horizontalAlign = 'center';
				X2A.verticalAlign = 'middle';
				X2A.gap = 0;
				X2A.includeInLayout = false; X2A.visible = false;
				PlateElementsContainer.addElement(X2A);
				
				X2B = new HGroup;
				X2B.id = 'X2B';
				X2B.width = CharacterWidth;
				X2B.percentWidth = 100;
				X2B.percentHeight = 100;
				X2B.clipAndEnableScrolling=true;
				X2B.horizontalCenter = 0;
				X2B.verticalCenter = 0;
				X2B.horizontalAlign = 'center';
				X2B.verticalAlign = 'middle';
				X2B.gap = 0;
				X2B.includeInLayout = false; X2B.visible = false;
				PlateElementsContainer.addElement(X2B);
				
				RightSymbolBox = new HGroup;
				RightSymbolBox.id = 'RightSymbolBox';
				RightSymbolBox.width = 0;
				RightSymbolBox.height = SymbolHeight;
				RightSymbolBox.horizontalCenter = 0;
				RightSymbolBox.verticalCenter = 0;
				RightSymbolBox.horizontalAlign = 'center';
				RightSymbolBox.verticalAlign = 'middle';
				RightSymbolBox.includeInLayout = false; RightSymbolBox.visible = false;
				PlateElementsContainer.addElement(RightSymbolBox);
				
				RightDateBox = new VGroup;
				RightDateBox.id = 'RightDateBox';
				RightDateBox.width = 0;
				RightDateBox.height = DateHeight;
				RightDateBox.horizontalCenter = 0;
				RightDateBox.verticalCenter = 0;
				RightDateBox.horizontalAlign = 'center';
				RightDateBox.verticalAlign = 'middle';
				RightDateBox.setStyle('kerning',false);
				RightDateBox.includeInLayout = false; RightDateBox.visible = false;
				PlateElementsContainer.addElement(RightDateBox);
				
				RightFlagBox = new HGroup;
				RightFlagBox.id = 'RightFlagBox';
				RightFlagBox.width = 0;
				RightFlagBox.height = FlagHeight;
				RightFlagBox.horizontalCenter = 0;
				RightFlagBox.verticalCenter = 0;
				RightFlagBox.horizontalAlign = 'center';
				RightFlagBox.verticalAlign = 'middle';
				RightFlagBox.includeInLayout = false; RightFlagBox.visible = false;
				PlateElementsContainer.addElement(RightFlagBox);
			}	*/
			
			private function AddDateToDateBox(ElementType:String):void
			{
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				
			/*	var plategroup:VGroup = new VGroup;
				plategroup.width = DateWidth;
				plategroup.height = DateHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.gap = 5; */
				var plategroup:VGroup = new VGroup;
				plategroup.width = DateWidth;
				plategroup.height = DateHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.setStyle('contentBackgroundAlpha',0);
				plategroup.gap = 5;
				
				var D1:Label = new Label;
								
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				if(Debugging) Alert.show(D1.text);
				
				D1.width = 24;
				D1.styleName = 'PlateDates';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.width = 24;
				D2.styleName = 'PlateDates';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.width = 24;
				D3.styleName = 'PlateDates';
				D3.setStyle('color','black');
				
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
				
			/*	LeftDateBox.includeInLayout=true; LeftDateBox.visible=true;
				LeftDateBox.addElement(plategroup);	*/
				
				if (ElementType == 'LD')
				{
					//Remove any existing left date
					if (LeftDateBox.numElements > 0)
					{
						LeftDateBox.removeAllElements();
						
						AdjustBoxWidths('LeftDate','-');
					}
					
					LeftDateBox.width=DateWidth; 
					LeftDateBox.includeInLayout=true;
					LeftDateBox.addElement(plategroup);
					
					AdjustBoxWidths('LeftDate','+');
				}
				else if (ElementType == 'RD')
				{
					//Remove any existing right date
					if (RightDateBox.numElements > 0)
					{
						RightDateBox.removeAllElements();
						
						AdjustBoxWidths('RightDate','-');
					}
					
					RightDateBox.width=DateWidth;
					RightDateBox.includeInLayout=true;
					RightDateBox.addElement(plategroup);
					
					AdjustBoxWidths('RightDate','+');
				}
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				DateCount = (DateCount + 1);
				
				HideShow();
				
				CalculatePrice();
				
				StackAction.push(plategroup);
			}
			
/*			private function YAddDateToDateBox(ElementType:String):void 
			{
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				

				
				var D1:Label = new Label;
				
				if(Debugging) Alert.show('Date1Save:');
				if(Debugging) Alert.show(String(Date1Save));
				if(Debugging) Alert.show('Date2Save:');
				if(Debugging) Alert.show(String(Date2Save));
				if(Debugging) Alert.show('Date3Save:');
				if(Debugging) Alert.show(String(Date3Save));
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				if(Debugging) Alert.show(D1.text);
				
				D1.width = 24;
				D1.styleName = 'PlateDate';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.width = 24;
				D2.styleName = 'PlateDate';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.width = 24;
				D3.styleName = 'PlateDate';
				D3.setStyle('color','black');
				
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
				
				if (ElementType == 'LD')
				{
					//Remove any existing left date
					if (LeftDateBox.numElements > 0)
					{
						LeftDateBox.removeAllElements();
						
						AdjustBoxWidths('LeftDate','-');
					}
					
					LeftDateBox.width=DateWidth; 
					LeftDateBox.includeInLayout=true;
					LeftDateBox.addElement(plategroup);
					
					AdjustBoxWidths('LeftDate','+');
				}
				else if (ElementType == 'RD')
				{
					//Remove any existing right date
					if (RightDateBox.numElements > 0)
					{
						RightDateBox.removeAllElements();
						
						AdjustBoxWidths('RightDate','-');
					}
					
					RightDateBox.width=DateWidth;
					RightDateBox.includeInLayout=true;
					RightDateBox.addElement(plategroup);
					
					AdjustBoxWidths('RightDate','+');
				}
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				StackAction.push(plategroup);
				
				DateCount = (DateCount + 1);
				
				HideShow();
				
				CalculatePrice();
			} */

				
			
			private function XAddDateToDateBox(ElementType:String):void 
			{
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				
				var plategroup:VGroup = new VGroup;
				plategroup.width = DateWidth;
				plategroup.height = DateHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.setStyle('contentBackgroundAlpha',0);
				plategroup.gap = 5;
				
				var D1:Label = new Label;
				
				if(Debugging) Alert.show('Date1Save:');
				if(Debugging) Alert.show(String(Date1Save));
				if(Debugging) Alert.show('Date2Save:');
				if(Debugging) Alert.show(String(Date2Save));
				if(Debugging) Alert.show('Date3Save:');
				if(Debugging) Alert.show(String(Date3Save));
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				if(Debugging) Alert.show(D1.text);
				
				D1.width = 24;
				D1.styleName = 'PlateDate';
				D1.setStyle('color','black');
				
				var D2:Label = new Label;
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				D2.width = 24;
				D2.styleName = 'PlateDate';
				D2.setStyle('color','black');
				
				var D3:Label = new Label;
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				D3.width = 24;
				D3.styleName = 'PlateDate';
				D3.setStyle('color','black');
				
				if(Debugging) Alert.show('D1text:');
				if(Debugging) Alert.show(D1.text);
				plategroup.addElement(D1);
				plategroup.addElement(D2);
				plategroup.addElement(D3);
				
				if (ElementType == 'LD')
				{
					//Remove any existing left date
					if (LeftDateBox.numElements > 0)
					{
						LeftDateBox.removeAllElements();
						
						AdjustBoxWidths('LeftDate','-');
					}
					
					LeftDateBox.width=DateWidth; 
					LeftDateBox.includeInLayout=true;
					LeftDateBox.addElement(plategroup);
										
					AdjustBoxWidths('LeftDate','+');
				}
				else if (ElementType == 'RD')
				{
					//Remove any existing right date
					if (RightDateBox.numElements > 0)
					{
						RightDateBox.removeAllElements();
						
						AdjustBoxWidths('RightDate','-');
					}
					
					RightDateBox.width=DateWidth;
					RightDateBox.includeInLayout=true;
					RightDateBox.addElement(plategroup);
					
					AdjustBoxWidths('RightDate','+');
				}
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				StackAction.push(plategroup);
				
				DateCount = (DateCount + 1);
				
				HideShow();
				
				CalculatePrice();
			}
			
			private function AddFlagToFlagBox(event:MouseEvent,FlagBox:String):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlag;
				plateimage.width = FlagWidth;
				plateimage.height = FlagHeight;
				
				if (FlagBox == 'Left')
				{
					//Remove any existing left flag
					if (LeftFlagBox.numElements > 0)
					{
						LeftFlagBox.removeAllElements();
						
						AdjustBoxWidths('LeftFlag','-');
					}
					
					LeftFlagBox.width = FlagWidth;
					LeftFlagBox.includeInLayout=true; LeftFlagBox.visible=true;
					LeftFlagBox.addElement(plateimage);
					
					AdjustBoxWidths('LeftFlag','+');
				}
				else if (FlagBox == 'Right')
				{
					//Remove any existing right flag
					if (RightFlagBox.numElements > 0)
					{
						RightFlagBox.removeAllElements();
						
						AdjustBoxWidths('RightFlag','-');
					}
					
					RightFlagBox.width = FlagWidth;
					RightFlagBox.includeInLayout=true; RightFlagBox.visible=true;
					RightFlagBox.addElement(plateimage);
					
					AdjustBoxWidths('RightFlag','+');
				}

				StackAction.push(plateimage);
				
				FlagCount = (FlagCount + 1);
				
				CalculatePrice();
			}
			
			private function HideShow():void
			{
				if (LeftFlagBox.includeInLayout == false)
				{
					LeftFlagBox.visible = false;
				}
				else if (LeftFlagBox.includeInLayout == true)
				{
					LeftFlagBox.visible = true;
				}
				
				if (LeftDateBox.includeInLayout == false)
				{
					LeftDateBox.visible = false;
				}
				else if (LeftDateBox.includeInLayout == true)
				{
					LeftDateBox.visible = true;
				}
				
				if (LeftSymbolBox.includeInLayout == false)
				{
					LeftSymbolBox.visible = false;
				}
				else if (LeftSymbolBox.includeInLayout == true)
				{
					LeftSymbolBox.visible = true;
				}
				
				if (RightFlagBox.includeInLayout == false)
				{
					RightFlagBox.visible = false;
				}
				else if (RightFlagBox.includeInLayout == true)
				{
					RightFlagBox.visible = true;
				}
				
				if (RightDateBox.includeInLayout == false)
				{
					RightDateBox.visible = false;
				}
				else if (RightDateBox.includeInLayout == true)
				{
					RightDateBox.visible = true;
				}
				
				if (RightSymbolBox.includeInLayout == false)
				{
					RightSymbolBox.visible = false;
				}
				else if (RightSymbolBox.includeInLayout == true)
				{
					RightSymbolBox.visible = true;
				}
				
				if (CenterSymbolBox.includeInLayout == false)
				{
					CenterSymbolBox.visible = false;
				}
				else if (CenterSymbolBox.includeInLayout == true)
				{
					CenterSymbolBox.visible = true;
				}
				
				if (X1.includeInLayout == false)
				{
					X1.visible = false;
				}
				else if (X1.includeInLayout == true)
				{
					X1.visible = true;
				}
				
				if (X1A.includeInLayout == false)
				{
					X1A.visible = false;
				}
				else if (X1A.includeInLayout == true)
				{
					X1A.visible = true;
				}
				
				if (X1B.includeInLayout == false)
				{
					X1B.visible = false;
				}
				else if (X1B.includeInLayout == true)
				{
					X1B.visible = true;
				}
				
				if (X2.includeInLayout == false)
				{
					X2.visible = false;
				}
				else if (X2.includeInLayout == true)
				{
					X2.visible = true;
				}
				
				if (X2A.includeInLayout == false)
				{
					X2A.visible = false;
				}
				else if (X2A.includeInLayout == true)
				{
					X2A.visible = true;
				}
				
				if (X2B.includeInLayout == false)
				{
					X2B.visible = false;
				}
				else if (X2B.includeInLayout == true)
				{
					X2B.visible = true;
				}
				
		/*		if (X1B.includeInLayout == false && X2.includeInLayout == false)
				{
					SwitchButtonVisible = false;
				}
				else
				{
					SwitchButtonVisible = true;
				}
				
				Outlines();  */
			}

			private function Outlines():void
			{
				X1A.setStyle('borderAlpha',.25);
				X1B.setStyle('borderAlpha',.25);
				X2A.setStyle('borderAlpha',.25);
				X2B.setStyle('borderAlpha',.25);
				X1A.setStyle('backgroundColor',0xffffff);
				X1B.setStyle('backgroundColor',0xffffff);
				X2A.setStyle('backgroundColor',0xffffff);
				X2B.setStyle('backgroundColor',0xffffff);
				
				if (CurrentBox == 'X1A')
				{
					X1A.setStyle('borderAlpha',1);
					X1A.setStyle('borderColor',OutlineColor);
					X1A.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X1B')
				{
					X1B.setStyle('borderAlpha',1);
					X1B.setStyle('borderColor',OutlineColor);
					X1B.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X2A')
				{
					X2A.setStyle('borderAlpha',1);
					X2A.setStyle('borderColor',OutlineColor);
					X2A.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X2B')
				{
					X2B.setStyle('borderAlpha',1);
					X2B.setStyle('borderColor',OutlineColor);
					X2B.setStyle('backgroundColor',CurrentBoxColor);
				}
			}

			private function AddTextureImage(symbol:Image):BorderContainer
			{
				var img:Image = new Image();
				img.source = SelectedFoilSwatchImage;
				trace(img.width);
				trace(img.height);
				var tt:TexturedText = new TexturedText();
				return tt.getTextMaskImage(img,symbol);
				
				//fontFamily: GL-Nummernschild-Eng;
				//fontSize: 96;
				//fontWeight: normal;
				//kerning: true;
			}
			
			private function AddSymbolToCurrentBox(event:MouseEvent):void
			{
			/*	var plateimage:Image = new Image;
				plateimage.source = SelectedSymbol;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;	*/
				
				trace(SelectedSymbolBC.numElements);
				var bdTmp:BorderContainer = SelectedSymbolBC.getElementAt(0) as BorderContainer;
				var imgTxt1:Image = bdTmp.getElementAt(0) as Image;
				var imgTmp1:Image = bdTmp.getElementAt(1) as Image;
				
				var imgTxt:Image = new Image;
				imgTxt.source = imgTxt1.source;
				imgTxt.width = SymbolWidth;
				imgTxt.height = SymbolHeight;
				imgTxt.fillMode = imgTxt1.fillMode;
				imgTxt.scaleMode = imgTxt1.scaleMode;
				
				var imgTmp:Image = new Image;
				imgTmp.source = imgTmp1.source;
				imgTmp.width = SymbolWidth;
				imgTmp.height = SymbolHeight;
				imgTmp.fillMode = imgTmp1.fillMode;
				imgTmp.scaleMode = imgTmp1.scaleMode;
				
				var tt:TexturedText = new TexturedText();
				var plateimage:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
				plateimage.width=SymbolWidth;
				plateimage.height=SymbolHeight;
				
				//if (FoilIsImage == true)
				//{
					//var bd:BorderContainer = AddTextureImage(plateimage);
					//bd.width = plateimage.width;
					//bd.height = plateimage.height;	
				//}
				
				if (CurrentBox == 'X1A')
				{
					AdjustBoxWidths('1ASymbol','+');
					//if (FoilIsImage == true)
					//{
					//	X1A.addElement(bd);
					//}
					//else
					//{
						X1A.addElement(plateimage);
					//}
				}
				else if (CurrentBox == 'X1B')
				{
					AdjustBoxWidths('1BSymbol','+');
					//if (FoilIsImage == true)
					//{
					//	X1B.addElement(bd);
					//}
					//else
					//
						X1B.addElement(plateimage);
					//}
				}
				else if (CurrentBox == 'X2A')
				{
					AdjustBoxWidths('2ASymbol','+');
					//if (FoilIsImage == true)
					//
					//	X2A.addElement(bd);
					//}
					//else
					//{
						X2A.addElement(plateimage);
					//}
				}
				else if (CurrentBox == 'X2B')
				{
					AdjustBoxWidths('2BSymbol','+');
					//if (FoilIsImage == true)
					//{
					//	X2B.addElement(bd);
					//}
					//else
					//{
						X2B.addElement(plateimage);
					//}
				}
				
				HideShow();
				
				//	StackAction.push(bd);
				
				if (SymbolSize == 'Tall')
				{
					TallSymbolCount == (TallSymbolCount + 1);
				}
				else if (SymbolSize == 'Short')
				{
					ShortSymbolCount == (ShortSymbolCount + 1);
				}
			}
															 
			private function AddCharacterToPlate(event:MouseEvent):void
			{
				var keypadbutton:Button = event.target as Button;
				var platelabel:Label = new Label;
				
				if (FoilIsImage == true)
				{
					var char:String = keypadbutton.label as String;
					
					SelectedCharacter = char;
					
					var bd:BorderContainer = AddTextureText(SelectedCharacter);
					bd.width = CharacterWidth;
					bd.height = CharacterHeight;
				}
				
				// Do not set width or height on platelabel
				platelabel.text = keypadbutton.label as String;
				//platelabel.setStyle('color', FoilColor);
				platelabel.horizontalCenter = 0;
				platelabel.verticalCenter = 0;
				
				var bclayout:BasicLayout = new BasicLayout();
				bclayout.clipAndEnableScrolling = true;
				
				var bc:BorderContainer = new BorderContainer();
				bc.setStyle('borderColor',OutlineColor);
				bc.setStyle('backgroundAlpha',0);
				bc.verticalCenter = -44; //Compensate for problem font
				bc.horizontalCenter = 0;
				bc.layout = bclayout;
				
				/* It only works with BasicLayout		
				var bclayout:HorizontalLayout = new HorizontalLayout();
				//bclayout.clipAndEnableScrolling = true;
				bclayout.gap = 0;
				bclayout.horizontalAlign = 'center';
				bclayout.verticalAlign = 'bottom';
				bclayout.paddingTop = 0;
				bclayout.paddingBottom = 0;
				bclayout.paddingLeft = 0;
				bclayout.paddingBottom = 0;
				bclayout.clipAndEnableScrolling = true;
				
				var bc:BorderContainer = new BorderContainer();
				bc.setStyle('borderColor','blue');
				bc.setStyle('backgroundAlpha',0);
				bc.verticalCenter = 0;
				bc.horizontalCenter = 0;
				bc.layout = bclayout;
				*/
				
				if (CharacterSize == 'Small')
				{
					bc.width = SmallCharacterWidth;
					bc.height = SmallCharacterHeight;
					platelabel.styleName = 'PlateCharacterSmall';
				}
				else if (CharacterSize == 'Medium')
				{
					bc.width = MediumCharacterWidth;
					bc.height = MediumCharacterHeight;
					platelabel.styleName = 'PlateCharacterMedium';
				}
				else if (CharacterSize == 'Large')
				{
					bc.width = LargeCharacterWidth;
					bc.height = LargeCharacterHeight;
					platelabel.styleName = 'PlateCharacterLarge';
				}		
				
				TargetBox = CurrentBox;
			
				if (TargetBox == 'X1A')
				{
					X1.includeInLayout = true; 
					X1A.includeInLayout = true;
					
					bc.id = (TargetBox + String(X1A_Index));
					
					bc.addElement(platelabel);
					
					bc.addElement(platelabel);
					
					X1A.addElement(bc);
					
					X1A_Index = (X1A_Index + 1);
					
					CurrentBox = 'X1A';
				}
				else if (TargetBox == 'X1B')
				{
					X1.includeInLayout = true;
					X1B.includeInLayout = true;
					
					bc.id = (TargetBox + String(X1B_Index));
					
					bc.addElement(platelabel);
					
					X1B.addElement(bc);
					
					X1B_Index = (X1B_Index + 1);
					
					CurrentBox = 'X1B';
				}
				else if (TargetBox == 'X2A')
				{
					bc.id = (TargetBox + String(X2A_Index));
					
					bc.addElement(platelabel);
					
					X2A.addElement(bc);
					
					X2A_Index = (X2A_Index + 1);
					
					CurrentBox = 'X2A';
				}
				else if (TargetBox == 'X2B')
				{	
					bc.id = (TargetBox + String(X2B_Index));
					
					bc.addElement(platelabel);
					
					X1A.addElement(bc);
					
					X2B_Index = (X2B_Index + 1);
					
					CurrentBox = 'X2B';	
				}
				
				LastBox = CurrentBox;
				
				HideShow();
				Outlines();
				
				//ElementsArray.push(ElementId);		
			}
			
			private function AddSymbolToSymbolBox(event:MouseEvent,SymbolBox:String):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedSymbol;
				plateimage.width = SymbolWidth;
				plateimage.height = SymbolHeight;
				
				var bd:BorderContainer = AddTextureImage(plateimage);
				bd.width = plateimage.width;
				bd.height = plateimage.height;

/*
				if (SymbolSize == 'Tall')
				{
					child.width = ShortSymbolWidth;
					child.height = ShortSymbolHeight;
				}
				else if (SymbolSize == 'Short')
				{
					child.width = TallSymbolWidth;
					child.height = TallSymbolHeight;
				}
				child.setStyle('borderColor','green');
					
				parent.width = child.width;
				parent.percentHeight = 100;
				parent.setStyle('paddingTop',5);
				parent.setStyle('paddingBottom',5);
				parent.setStyle('borderColor','yellow');
*/
				if (SymbolBox == 'Left')
				{
					//Remove any existing left symbol
					if (LeftSymbolBox.numElements > 0)
					{
						LeftSymbolBox.removeAllElements();
						
						AdjustBoxWidths('LeftSymbol','-');
					}
					
					LeftSymbolBox.width = SymbolWidth;
					LeftSymbolBox.includeInLayout=true;
					
					//if (FoilIsImage == true)
					//{
					//	LeftSymbolBox.addElement(bd);
					//}
					//else
					//{
						LeftSymbolBox.addElement(bd);
					//}
					
					AdjustBoxWidths('LeftSymbol','+');
				}
				else if (SymbolBox == 'Center')
				{
					//Remove any existing center symbol					
					if (CenterSymbolBox.numElements > 0)
					{
						CenterSymbolBox.removeAllElements();
						
						AdjustBoxWidths('CenterSymbol','-');
					}
// ! move this
					if (X2.includeInLayout == false)
					{
						X2.includeInLayout = true;
						X2A.includeInLayout = true;
						
						if (X2_LineCount == 2)
						{
							X2B.includeInLayout = true;
						}
					}
					
					CenterSymbol=true;
				
					CenterSymbolBox.width = SymbolWidth;
					
					AdjustBoxWidths('CenterSymbol','+');
					
					CenterSymbolBox.includeInLayout=true;
// ! move this					
					if (X1A.numElements > 0 || X1B.numElements > 0)
					{
						SetNextBoxAndSwitchButtonImage();
					}

					//if (FoilIsImage == true)
					//{
					//	CenterSymbolBox.addElement(bd);
					//}
					//else
					//{
						CenterSymbolBox.addElement(bd);
					//}
				}
				else if (SymbolBox == 'Right')
				{
					//Remove any existing right symbol
					if (RightSymbolBox.numElements > 0)
					{
						RightSymbolBox.removeAllElements();
						
						AdjustBoxWidths('RightSymbol','-');
					}
					
					RightSymbolBox.width = SymbolWidth;
					RightSymbolBox.includeInLayout=true;
					
					//if (FoilIsImage == true)
					//{
					//	RightSymbolBox.addElement(bd);
					//}
					//else
					//
						RightSymbolBox.addElement(bd);
					//}
					
					AdjustBoxWidths('RightSymbol','+');
				}
				
				HideShow();
				
				StackAction.push(plateimage);
				
				if (SymbolSize == 'Tall')
				{
					TallSymbolCount = (TallSymbolCount + 1);
				}
				else if (SymbolSize == 'Short')
				{
					ShortSymbolCount = (ShortSymbolCount + 1);
				}
			}
			
			private function AddTextureText(SelectedCharacter:String):BorderContainer
			{
				var img:Image = new Image();
				img.source = SelectedFoilSwatchImage;
				var tt:TexturedText = new TexturedText();
				return tt.getTextMaskText(img,SelectedCharacter,CharacterFontSize,"normal","GL-Nummernschild-Eng");
				
				//fontFamily: GL-Nummernschild-Eng;
				//fontSize: 96;
				//fontWeight: normal;
				//kerning: true;
			}
						
			private function AdjustBoxWidths(Context:String,AorD:String):void
			{
				if (AorD == '+')
				{
					if (Context == 'LeftFlag')
					{
						LeftLoad = (LeftLoad + FlagWidth);
					}
					else if (Context == 'RightFlag')
					{
						RightLoad = (RightLoad + FlagWidth);
					}
					else if (Context == 'LeftDate')
					{
						LeftLoad = (LeftLoad + DateWidth);
					}
					else if (Context == 'RightDate')
					{
						RightLoad = (RightLoad + DateWidth);
					}
					else if (Context == 'LeftSymbol')
					{
						LeftLoad = (LeftLoad + SymbolWidth);
					}
					else if (Context == 'RightSymbol')
					{
						RightLoad = (RightLoad + SymbolWidth);
					}
					else if (Context == 'CenterSymbol')
					{
						LeftLoad = (LeftLoad + (SymbolWidth/2));
						RightLoad = (RightLoad + (SymbolWidth/2));
					}
				}
				else if (AorD == '-')
				{
					if (Context == 'LeftFlag')
					{
						LeftLoad = (LeftLoad - FlagWidth);
					}
					else if (Context == 'RightFlag')
					{
						RightLoad = (RightLoad - FlagWidth);
					}
					else if (Context == 'LeftDate')
					{
						LeftLoad = (LeftLoad - DateWidth);
					}
					else if (Context == 'RightDate')
					{
						RightLoad = (RightLoad - DateWidth);
					}
					else if (Context == 'LeftSymbol')
					{
						LeftLoad = (LeftLoad - SymbolWidth);
					}
					else if (Context == 'RightSymbol')
					{
						RightLoad = (RightLoad - SymbolWidth);
					}
					else if (Context == 'CenterSymbol')
					{
						LeftLoad = (LeftLoad - (SymbolWidth/2));
						RightLoad = (RightLoad - (SymbolWidth/2));
					}
				}
				
				if (X2.includeInLayout == true)
				{
					X1.width = ((PlateElementsContainer.width/2) - LeftLoad);
					X2.width = ((PlateElementsContainer.width/2) - RightLoad);
				}
				else
				{
					X1.width = (PlateElementsContainer.width- LeftLoad - RightLoad);
				}
			}
			
			private function SetLineCount(RequestedLineCount:int):void
			{
				// !! Need to preserve what has content, maybe disallow if both have content.  Can B be active and A not?
				if (RequestedLineCount == 1)
				{
					if (CurrentBox == 'X1A')
					{
						X1_LineCount = 1;
						X1B.includeInLayout = false;
					}
					else if (CurrentBox == 'X1B')
					{
						X1_LineCount = 1;
						X1B.includeInLayout = false;
					}
					else if (CurrentBox == 'X2A')
					{
						X2_LineCount = 1;
						X2B.includeInLayout = false;
					}
					else if (CurrentBox == 'X2B')
					{
						X2_LineCount = 1;
						X2B.includeInLayout = false;
					}
				}
				else if (RequestedLineCount == 2)
				{
					if (CurrentBox == 'X1A' || CurrentBox == 'X1B')
					{
						X2B.includeInLayout;
						X1_LineCount = 2;
					}
					else if (CurrentBox == 'X2A' || CurrentBox == 'X2B')
					{
						X2A.includeInLayout;
						X2_LineCount = 2;
					}
				}
				
				HideShow();
				Outlines();
			}
			
			// check for fullness?
			// ! Propagate calls to this in place of ad-hoc
			private function SetNextBoxAndSwitchButtonImage():void
			{
SwitchButtonImage = 'assets/switch/SPAN_CX1A_NX1B.jpg';
				if (CurrentBox == 'X1A')
				{
					if (CenterSymbol == false)
					{
						if (X1_LineCount == 2)
						{
							NextBox = 'X1B';
							SwitchButtonImage = 'assets/switch/SPAN_CX1A_NX1B.jpg';
							SwitchButtonVisible = true;
						}
						else
						{
							NextBox = CurrentBox;
							SwitchButtonImage = '';
							SwitchButtonVisible = false;
						}
					}
					else
					{
						NextBox = 'X2A';

						if (X1_LineCount == 1 && X2_LineCount == 1)
						{
							SwitchButtonImage = 'assets/switch/CX1_NX2.jpg';
						}
						else if (X1_LineCount == 1 && X2_LineCount == 2)
						{
							SwitchButtonImage = 'assets/switch/CX1A_NX2A.jpg';
						}
						else if (X1_LineCount == 2 && X2_LineCount == 1)
						{
							SwitchButtonImage = 'assets/switch/CX1A_NX2.jpg';
						}
						else if (X1_LineCount == 2 && X2_LineCount == 1)
						{
							SwitchButtonImage = 'assets/switch/CX1A_NX2A.jpg';
						}			
					}
					
					SwitchButtonVisible = true;
				}
				else if (CurrentBox == 'X1B')
				{
					NextBox = 'X1A.jpg';

					if (CenterSymbol == false)
					{
						if (X1_LineCount == 2)
						{
						SwitchButtonImage = 'assets/switch/SPAN_CX1B_NX1A.jpg';
						}
					}
					else
					{
						if (X1_LineCount == 2 && X2_LineCount == 1)
						{
							SwitchButtonImage = 'assets/switch/CX1B_NX1A_SPAN.jpg';
						}
						else if (X1_LineCount == 2 && X2_LineCount == 2)
						{
							SwitchButtonImage = 'assets/switch/CX1B_NX1A.jpg';
						}
					}
					
					SwitchButtonVisible = true;
				}
				else if (CurrentBox == 'X2A')
				{
					if (X1_LineCount == 1 && X2_LineCount == 1)
					{
						NextBox = 'X1A';
						SwitchButtonImage = 'assets/switch/CX2_NX1.jpg';
					}
					else if (X1_LineCount == 2 && X1_LineCount == 1)
					{
						NextBox = 'X1B';
						SwitchButtonImage = 'assets/switch/CX2_NX1B.jpg';
					}
					else if (X1_LineCount == 1 && X2_LineCount == 2)
					{
						NextBox = 'X2B';
						SwitchButtonImage = 'assets/switch/CX2A_NX2B_SPAN.jpg';
					}
					else if (X1_LineCount == 2 && X2_LineCount == 2)
					{
						NextBox = 'X2B';
						SwitchButtonImage = 'assets/switch/CX2A_NX2B.jpg';
					}
					
					SwitchButtonVisible = true;
				}
				else if (CurrentBox == 'X2B')
				{
					if (X1_LineCount == 1 && X2_LineCount == 2)
					{
						NextBox = 'X1A';
						SwitchButtonImage = 'assets/switch/CX2B_NX1.jpg';
					}
					else if (X1_LineCount == 2 && X2_LineCount == 2)
					{
						NextBox = 'X1B';
						SwitchButtonImage = 'assets/switch/CX2B_NX1B.jpg';
					}
					
					SwitchButtonVisible = true;
				}

				CurrentBox = NextBox;
				
				Outlines();
				
				SwitchButtonImage = 'assets/switch/SPAN_CX1A_NX1B.jpg';
			}
		
		/*	private function ChangeLineCount(event:MouseEvent,RequestedLineCount:int):void
			{
				if (RequestedLineCount == 2 && TwoLines == false)
				{
					TwoLines = true;
					
// !!					SwitchButton.visible = true;

					if (CharacterSize == 'Large')
					{
						CharacterSize = 'Medium';
					}
				}
				else if (RequestedLineCount == 1 && TwoLines == true)
				{
					TwoLines = false;
					
// !!				SwitchButton.visible = false;
				}
				
				SetCharacterDimensions();
				
				Outlines();
				
				CalculatePrice();
			}	*/
			
		/*	private function ChangeCurrentBox():void
			{
				if (TwoLines == false)
				{
					if (CurrentBox == 'X1A')
					{
						CurrentBox = 'X2A';
						X1B.includeInLayout=false; X1B.visible=false;
						X2.includeInLayout=true; X2.visible=true;
						X2A.includeInLayout=true; X2A.visible=true;
						X2B.includeInLayout=false; X2B.visible=false;
						CurrentLine = 'Line 1';
					}
					else if (CurrentBox == 'X1B')
					{
						CurrentLine = 'Line 2';
					}
				}
				else if (TwoLines == true)
				{
					if (CurrentBox == 'X1A')
					{
						CurrentBox = 'X1B';
						X1B.includeInLayout=true; X1B.visible=true;
						CurrentLine = 'Line 2';
					}
					if (CurrentBox == 'X1B')
					{
						CurrentBox = 'X2A';
						X2.includeInLayout=true; X2.visible=true;
						X2A.includeInLayout=true; X2A.visible=true;
						X2B.includeInLayout=true; X2B.visible=true;
						CurrentLine = 'Line 1';
					}
					if (CurrentBox == 'X2A')
					{
						CurrentBox = 'X2B';
						X2B.includeInLayout=true; X2B.visible=true;
						CurrentLine = 'Line 2';
					}
					if (CurrentBox == 'X2B')
					{
						CurrentLine = 'Line 2';
					}
				}
				Outlines();
			}	*/
						
			[Bindable] private var LP:LargePreview;
			
			private function SnapshotPreviewPlate(event:MouseEvent):void
			{
//				component.CustomSnapshot.target=PreviewContainer
				PopUpLargePreview();
			}
			
			private function PopUpLargePreview():void
			{
				LP = new LargePreview;
				PopUpManager.addPopUp(LP,this,false);
				PopUpManager.centerPopUp(LP);
			}
			
			public function CloseLargePreview():void
			{
				PopUpManager.removePopUp(LP);
			}
			
			private function UndoLastAction():void
			{
// ! Need to AdjustBoxWidths
				if (StackAction.length > 0)
				{
					CharactersAdded = (CharactersAdded - 1);
					PlateElementsContainer.removeElementAt(StackAction.length);
					StackAction.pop();
				}
			}
			
			private function ClearPreview():void
			{
				if (LeftFlagBox.numElements > 0)
				{
					LeftFlagBox.removeAllElements();
					
					FlagCount = (FlagCount - 1);
				}
				LeftFlagBox.width=0; LeftFlagBox.includeInLayout= false;
				
				if (LeftDateBox.numElements > 0)
				{
					LeftDateBox.removeAllElements();
					
					DateCount = (DateCount - 1);
				}
				LeftDateBox.width=0; LeftDateBox.includeInLayout= false;
				
				if (LeftSymbolBox.numElements > 0)
				{
					LeftSymbolBox.removeAllElements();
				}
				LeftSymbolBox.width=0; LeftSymbolBox.includeInLayout= false;
				
				if (X1A.numElements > 0)
				{
					X1A.removeAllElements();
				}
				
				if (X1B.numElements > 0)
				{
					X1B.removeAllElements();
				}
				
				if (X2A.numElements > 0)
				{
					X2A.removeAllElements();
				}
				
				if (X2B.numElements > 0)
				{
					X2B.removeAllElements();
				}
				
				if (RightFlagBox.numElements > 0)
				{
					RightFlagBox.removeAllElements();
					
					FlagCount = (FlagCount - 1);
				}
				RightFlagBox.width=0; RightFlagBox.includeInLayout= false;
				
				if (RightDateBox.numElements > 0)
				{
					RightDateBox.removeAllElements();
					
					DateCount = (DateCount - 1);
				}
				RightDateBox.width=0; RightDateBox.includeInLayout= false;
				
				if (RightSymbolBox.numElements > 0)
				{
					RightSymbolBox.removeAllElements();
				}
				RightSymbolBox.width=0; RightSymbolBox.includeInLayout= false;

				CharactersAdded = 0;
				CenterSymbol = false;
				
				LeftLoad = 0;
				RightLoad = 0;
				
				HideShow();
				CalculatePrice();
			}
			
			private function StartOver():void
			{
// ! also reset default symbol etc.
				ClearPreview();
				
				X1B.width=0; X1B.includeInLayout=false; X1B.visible=false;
				X2A.width=0; X2A.includeInLayout=false; X2A.visible=false;
				X2B.width=0; X2B.includeInLayout=false; X2B.visible=false;
				
				SetDefaults();
				
				CharactersAdded = 0;
			}
			
//!!! Put into vars, granular
			private function CalculatePrice():void
			{
				if (PlateSize == 'Large' || PlateSize == 'Medium')
				{
					Price = 12;
					
					if (PlateIsMetallic == true)
					{
						Price = (Price + 4);
					}
					
					Price = (Price + (FlagCount * 3));

					Price = (Price + (DateCount * 3));
				}
				else if (PlateSize == 'Small')
				{
					Price = 10;
				}
				
				Price = (Price + (HoleCount * 0));
				
				Price = (Price + (CupCount * 1));
				
				if (X1_LineCount == 2 || X2_LineCount == 2)
				{
					Price = (Price + 2);
				}
				
				DisplayPrice = String(Price);
			}
			
			/*		
			Constants:
			
			SmallPlateHeight (in mm)
			SmallPlateWidth (in mm)
			MediumPlateHeight (in mm)
			MediumPlateWidth (in mm)
			LargePlateHeight (in mm)
			LargePlateWidth (in mm)
			SmallCharacterWidth (in mm)
			SmallCharacterHeight (in mm)
			MediumCharacterWidth (in mm)
			MediumCharacterHeight (in mm)
			LargeCharacterHeight (in mm)
			LargeCharacterWidth (in mm)
			DateHeight (in mm)
			DatePairWidth (in mm)
			DatePairLeading (in mm)
			SymbolHeight (in mm)
			LargeFlagHeight (in mm)
			LargeFlagWidth (in mm)
			SmallFlagHeight (in mm)
			SmallFlagWidth (in mm)
			HoleCenterPointOffsetFromEdge (in mm)
			CupSize (in mm)
			HolesPriceEUR (float)
			CupsPriceEUR (float)
			*/
			
			/*			[Bindable]
			private var GermanCharacters_Small_AC:ArrayCollection = new ArrayCollection([
			//In points
			//For IDs C2, C17, and C24, need to prefix Label with "&#" and suffix with ";" when rendering (e.g., "&#196;")
			{ID:"C1", Label:"A", FontID:"1", FontSize:"25"},
			{ID:"C2", Label:"&#196;", FontID:"1", FontSize:"25"},
			{ID:"C3", Label:"B", FontID:"1", FontSize:"25"},
			{ID:"C4", Label:"C", FontID:"1", FontSize:"25"},
			{ID:"C5", Label:"D", FontID:"1", FontSize:"25"},
			{ID:"C6", Label:"E", FontID:"1", FontSize:"25"},
			{ID:"C7", Label:"F", FontID:"1", FontSize:"25"},
			{ID:"C8", Label:"G", FontID:"1", FontSize:"25"},
			{ID:"C9", Label:"H", FontID:"1", FontSize:"25"},
			{ID:"C10", Label:"I", FontID:"1", FontSize:"25"},
			{ID:"C11", Label:"J", FontID:"1", FontSize:"25"},
			{ID:"C12", Label:"K", FontID:"1", FontSize:"25"},
			{ID:"C13", Label:"L", FontID:"1", FontSize:"25"},
			{ID:"C14", Label:"M", FontID:"1", FontSize:"25"},
			{ID:"C15", Label:"N", FontID:"1", FontSize:"25"},
			{ID:"C16", Label:"O", FontID:"1", FontSize:"25"},
			{ID:"C17", Label:"&#214;", FontID:"1", FontSize:"25"},
			{ID:"C18", Label:"P", FontID:"1", FontSize:"25"},
			{ID:"C19", Label:"Q", FontID:"1", FontSize:"25"},
			{ID:"C20", Label:"R", FontID:"1", FontSize:"25"},
			{ID:"C21", Label:"S", FontID:"1", FontSize:"25"},
			{ID:"C22", Label:"T", FontID:"1", FontSize:"25"},
			{ID:"C23", Label:"U", FontID:"1", FontSize:"25"},
			{ID:"C24", Label:"&#220;", FontID:"1", FontSize:"25"},
			{ID:"C25", Label:"V", FontID:"1", FontSize:"25"},
			{ID:"C26", Label:"W", FontID:"1", FontSize:"25"},
			{ID:"C27", Label:"X", FontID:"1", FontSize:"25"},
			{ID:"C28", Label:"Y", FontID:"1", FontSize:"25"},
			{ID:"C29", Label:"Z", FontID:"1", FontSize:"25"},
			{ID:"C30", Label:"1", FontID:"1", FontSize:"25"},
			{ID:"C31", Label:"2", FontID:"1", FontSize:"25"},
			{ID:"C32", Label:"3", FontID:"1", FontSize:"25"},
			{ID:"C33", Label:"4", FontID:"1", FontSize:"25"},
			{ID:"C34", Label:"5", FontID:"1", FontSize:"25"},
			{ID:"C35", Label:"6", FontID:"1", FontSize:"25"},
			{ID:"C36", Label:"7", FontID:"1", FontSize:"25"},
			{ID:"C37", Label:"8", FontID:"1", FontSize:"25"},
			{ID:"C38", Label:"9", FontID:"1", FontSize:"25"},
			{ID:"C39", Label:"0", FontID:"1", FontSize:"25"},
			{ID:"C40", Label:"-", FontID:"1", FontSize:"25"},
			{ID:"C41", Label:".", FontID:"1", FontSize:"25"},
			{ID:"C42", Label:"?", FontID:"1", FontSize:"25"},
			]);  */
			
			/*			private var GermanCharacters_Medium_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"50"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"50"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"50"}
			//..
			]);
			
			private var GermanCharacters_Large_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"75"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"75"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"75"}
			//..
			]);
			
			[Bindable]
			private var Spacers_AC:ArrayCollection = new ArrayCollection([
			//in mm
			{Width:"20", Label:""},
			{Width:"30", Label:""},
			{Width:"40", Label:""}
			]);
			*/
			
			
			/*			
			[Bindable]
			private var SmallPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var MediumPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidRed", Label"Solid red", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargePlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidYellow", Label:"Solid Yellow", ColorSpec:"blue", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var FoilStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", Label:"Solid Blue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var Stickers_AC:ArrayCollection = new ArrayCollection([
			{ID:"Dalmation", Label:"Dalmation", Width:"20", Height:"50", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargeFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var SmallFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var DefaultsByCountry_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", LanguageID:"DE", PlateSizeID:"GL", PlateStyleID:"PlateStyleID",
			FoilStyleID:"FoilID", Date:"112233", SymbolID:"SymbolID", StickerID:"StickerID", FlagID:"FlagID", 
			Currency:"EUR"}
			]);	
			
			private function application1_creationCompleteHandler():void {
			Button_A.addEventListener(MouseEvent.CLICK, AddCharacterAToPlate);
			Button_Au.addEventListener(MouseEvent.CLICK, AddCharacterAuToPlate);
			ClearTextButton.addEventListener(MouseEvent.CLICK, ClearPreview);
			ClearPreviewButton.addEventListener(MouseEvent.CLICK, ClearAll);
			StartOverButton.addEventListener(MouseEvent.CLICK, StartOver);
			}
			
			private function ConvertMMtoPixels {
			//Varies by font family?
			}
			
			private function SetPlateSize(event:MouseEvent) {
			//Change dropdownlist content
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetPlateStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function SetFoilStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function Change1LineTo2Lines(event:MouseEvent) {
			//If plate size is not large, prompt to change
			//If character size is not small, prompt to change character size to small
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function Change2LinesTo1Line(event:MouseEvent) {
			//Prompt to increase character size to medium or large (large if text fits)
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetCharacterDimensions(event:MouseEvent) {
			//Prompt to clear text if new-size characters will not fit
			//Recalculate price
			}
			
			private function AddCharacterToPlate(event:MouseEvent) {	
			//Alert if no room to add
			}
			
			private function AddSymbolToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddDateToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddStickerToPlate {	
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddFlagToPlate {
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddHolesAndCupstoPlate {
			//Position as specified
			//Recalculate price
			}
			*/			
		]]>
	</fx:Script>
	
	<!-- Outer (basic) container -->
	<s:BorderContainer id="OuterContainer"
					   width="540" height="410" horizontalCenter="0" verticalCenter="0" borderVisible="true">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<!-- Inner (vertical) container -->
		<s:BorderContainer id="InnerContainer"
						   x="0" y="0" width="{OuterContainer.width-2}" height="{OuterContainer.height-2}" borderVisible="false" depth="2">
			<s:layout>
				<s:VerticalLayout paddingTop="10" paddingBottom="4" paddingLeft="10" paddingRight="10" gap="0"/>
			</s:layout>
			
			<!--Preview frame (fixed-sized for large plate)-->
			<s:BorderContainer id="PreviewFrame"
							   width="{LargePlateWidth}" height="{LargePlateHeight}" borderVisible="false" depth="1">
				<s:layout>
					<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"/>
				</s:layout>
				
				<!-- Preview container.  Background color or image set via functions -->
				<s:BorderContainer id="PreviewContainer"
								   width="{PlateWidth}" height="{PlateHeight}" horizontalCenter="0" verticalCenter="0"
								   borderVisible="true" borderWeight="2" cornerRadius="8">
					<s:layout>
						<s:BasicLayout clipAndEnableScrolling="true"/>
					</s:layout>
					
					<s:Rect id="PreviewImageBorder" 
							x="0" y="0" width="100%" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false" depth="3">
						<s:stroke>
							<s:SolidColorStroke color="black" weight="2"/>
						</s:stroke>
						<s:fill>
							<s:SolidColor alpha="0"/>
						</s:fill>
					</s:Rect>
					
					<s:Image id="PreviewPlateImage"
							 x="0" y="0" width="{PlateWidth}" height="{PlateHeight}" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false" depth="1"
							 fillMode="scale" scaleMode="stretch"/>
					<s:Image id="PreviewFoilImage"
							 x="0" y="0" width="{PlateWidth}" height="{PlateHeight}" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false" depth="2"
							 fillMode="scale" scaleMode="stretch"/>
					
					<!-- Holes -->
					<s:Ellipse id="TopLeftHole"
							   x="5" y="5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="TopRightHole"
							   x="501" y="5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleLeftHole"
							   x="5" y="49.5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleRightHole"
							   x="501" y="49.5" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomLeftHole"
							   x="5" y="94" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomRightHole"
							   x="501" y="94" visible="false" width="8" height="8" depth="11">
						<s:fill>
							<s:SolidColor color="white"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="gray" weight=".25"/>
						</s:stroke>
					</s:Ellipse>
					<!-- Suction cups -->
					<s:Ellipse id="TopLeftCup"
							   x="0" y="0" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="TopRightCup"
							   x="496" y="0" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleLeftCup"
							   x="0" y="44.5" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="MiddleRightCup"
							   x="496" y="44.5" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomLeftCup"
							   x="0" y="89" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<s:Ellipse id="BottomRightCup"
							   x="496" y="89" width="19" height="19" visible="false" depth="12">
						<s:fill>
							<s:SolidColor color="white" alpha=".5"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke color="white" weight="1.375"/>
						</s:stroke>
					</s:Ellipse>
					<!-- Plate outer (border) container which is bordered and transparent, with invisible border if plate is full size.  Border color is set via function. -->
					<s:BorderContainer id="PlateBorder"
									   x="1" y="1" width="{PreviewContainer.width-7}" height="{PreviewContainer.height-7}" depth="2" borderVisible="false" backgroundAlpha="0">
						<s:layout>
							<s:BasicLayout/>
						</s:layout>
						<!--Either NonImageBorder or ImageBorder will be shown, based on function-->
						<!-- NonImageBorder.  Border color and visibility are set via function. -->
						<s:BorderContainer id="PlateNonImageBorder"
										   x="0" y="0" width="{PlateBorder.width}" height="{PlateBorder.height}" includeInLayout="false" visible="false"
										   borderWeight="5" cornerRadius="8" borderStyle="inset" backgroundAlpha="0"/>
						<s:Image id="PlateImageBorder"
								 x="0" y="0" width="100%" height="100%" includeInLayout="false" visible="false"
								 fillMode="scale" scaleMode="stretch"/>
						
						<!-- Plate elements container.  BackgroundColor or image set via functions -->
						<s:BorderContainer id="PlateElementsContainer"
										   x="5" y="5" width="{PlateBorder.width-10}" height="{PlateBorder.height-10}" depth="20"
										   horizontalCenter="0" verticalCenter="0" borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"
													horizontalAlign="left" verticalAlign="middle" clipAndEnableScrolling="true"/>
							</s:layout>
								
							<!--s:BorderContainer id="X"  borderColor="red" backgroundAlpha="0"
											   width="100%" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="true" visible="true">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" 
														paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0" clipAndEnableScrolling="true"/>
								</s:layout-->
								
								<!--Multiple containers for potential elements, which are hidden and shown as needed.  Widths are reset by functions"-->
								<s:BorderContainer id="LeftFlagBox"
												   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
															paddingTop="0" paddingBottom="0" gap="0"/>
									</s:layout>
								</s:BorderContainer>
								
								<s:BorderContainer id="LeftDateBox"
												   width="{DateWidth}" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0" kerning="off">
									<s:layout>
										<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
									</s:layout>
								</s:BorderContainer>
								
								<s:BorderContainer id="LeftSymbolBox"
												   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
															paddingTop="0" paddingBottom="0" gap="0"/>
									</s:layout>
								</s:BorderContainer>
									
								<s:BorderContainer id="X1" borderColor="blue" backgroundAlpha="0"
												   width="{PlateElementsContainer.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="true" visible="true">
									<s:layout>
										<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="{vgap}" clipAndEnableScrolling="true"	  
														  paddingTop="0" paddingBottom="0"/>
									</s:layout>
									<s:BorderContainer id="X1A" 
													   width="{X1.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="true" visible="true"
													   borderColor="{OutlineColor}" borderAlpha=".25" backgroundAlpha="0">
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
										</s:layout>
									</s:BorderContainer>
									<s:BorderContainer id="X1B"
													   width="{X1.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false" 
													   borderColor="{OutlineColor}" borderAlpha=".25" backgroundAlpha="0">
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
										</s:layout>
									</s:BorderContainer>
								</s:BorderContainer>
								
								<!--No width set.  Let the symbol dictate the width-->
								<s:BorderContainer id="CenterSymbolBox" borderColor="green"
												   height="100%" verticalCenter="0" horizontalCenter="0" backgroundAlpha="0" includeInLayout="false" visible="false">
									<s:layout>
										<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
														  paddingTop="5" paddingBottom="5"/>
									</s:layout>
								</s:BorderContainer>
								
								<s:BorderContainer id="X2" borderColor="blue" backgroundAlpha="0"
												   width="0" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false" >
									<s:layout>
										<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="{vgap}" clipAndEnableScrolling="true"
														  paddingTop="0" paddingBottom="0"/>
									</s:layout>
									<s:BorderContainer id="X2A"
													   width="{X2.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false" 
													   borderColor="{OutlineColor}" borderAlpha=".25" backgroundAlpha="0">
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
										</s:layout>
									</s:BorderContainer>
									<s:BorderContainer id="X2B"
													   width="{X2.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false"
													   borderColor="{OutlineColor}" borderAlpha=".25" backgroundAlpha="0">
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"
																paddingTop="10" paddingBottom="10"/>
										</s:layout>
									</s:BorderContainer>
								</s:BorderContainer>
								
								<s:BorderContainer id="RightSymbolBox"
												   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
															paddingTop="0" paddingBottom="0"/>
									</s:layout>
								</s:BorderContainer>
								
								<s:BorderContainer id="RightDateBox"
												   width="{DateWidth}" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0" kerning="off">
									<s:layout>
										<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
									</s:layout>
								</s:BorderContainer>
									
								<s:BorderContainer id="RightFlagBox"
												   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
												   borderColor="red" borderAlpha=".25" backgroundAlpha="0">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
															paddingTop="0" paddingBottom="0"/>
									</s:layout>
								<!--/s:BorderContainer-->
							</s:BorderContainer>							
							
						</s:BorderContainer>
					</s:BorderContainer>
					
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="3"/>

			<!-- Error message and control to clear plate elements -->
			<s:BorderContainer width="100%" height="16" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
				</s:layout>
				<!-- Controls to reset plate elements -->
				<s:BorderContainer width="100%" height="16" borderVisible="false">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"
											paddingTop="1" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="5"/>				
					</s:layout>
					<s:Button label="LARGE PREVIEW" 
							  width="200" height="14" fontFamily="Arial" fontSize="11" fontWeight="bold"
							  click="SnapshotPreviewPlate(event)"/>
					<s:Spacer width="100%"/>
					<s:BorderContainer width="70" height="16" borderVisible="true" backgroundColor="red">
						<s:layout>
							<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" paddingLeft="2" paddingRight="2"/>
						</s:layout>
						<s:Label text="Price:" styleName="DisplayPrice"/>
						<s:Label text="&#0128;" fontFamily="Arial" fontSize="12"/>
						<s:Label text="{DisplayPrice}" styleName="DisplayPrice" fontWeight="bold"/>
					</s:BorderContainer>
					<s:Spacer width="100%"/>
					<s:HGroup horizontalAlign="right">					
						<s:Button id="UndoButton" label="Undo" 
								  width="35" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="UndoLastAction()"/>
						<s:Button id="ClearButton" label="Clear plate" 
								  width="65" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="ClearPreview()"/>
						<s:Button id="ResetButton" label="Start over"
								  width="55" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="StartOver()"/>
					</s:HGroup>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Controls to set the plate size -->
			<s:BorderContainer width="100%" height="33.9" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout gap="4" verticalAlign="middle"/>
				</s:layout>
				<s:BorderContainer width="30" height="34" borderVisible="false">
					<s:layout>
						<s:VerticalLayout verticalAlign="middle"
										  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<s:Label text="Plate"
							 width="30" height="14" verticalCenter="0"
							 styleName="DirectiveLabel"/>
					<s:Label text="size"
							 width="30" height="14" verticalCenter="0"
							 styleName="DirectiveLabel"/>
				</s:BorderContainer>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   selected="true"
							   click="ChangePlateSize(event,'Large')"/>
				<s:BorderContainer width="{LargePlateWidth*PlateReduction}" height="{LargePlateHeight*PlateReduction}" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout  horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="52cm x 11.3cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'Medium')"/>
				<s:BorderContainer width="{MediumPlateWidth*PlateReduction}" height="{MediumPlateHeight*PlateReduction}" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="40cm x 11.3cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'Small')"/>
				<s:BorderContainer width="{SmallPlateWidth*PlateReduction}" height="{SmallPlateHeight*PlateReduction}" borderVisible="true" cornerRadius="5">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="29cm x 7.5cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'House')"/>
				<s:BorderContainer width="{HousePlateLabel.width}" height="100%" borderVisible="false">
					<s:layout>
						<s:BasicLayout clipAndEnableScrolling="true"/>
					</s:layout>
					<s:BorderContainer x="0" y="2" width="{HousePlateWidth*PlateReduction}" height="{HousePlateHeight*PlateReduction}" cornerRadius="3" depth="1"/>
					<s:Label id="HousePlateLabel" text="17.3cm x 11.3cm"
							 x="0" width="60" verticalCenter="0" depth="2" 
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="1"/>
			
			<!-- Controls to choose orientation et al -->
			<s:BorderContainer width="50%" height="24" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"/>				
				</s:layout>
				
				<s:HGroup id="LinesChooser" width="100%" height="19" verticalAlign="baseline">
					<mx:Text text="Lines"
							 width="40" verticalCenter="0"
							 styleName="DirectiveLabel"/>
					<s:RadioButton groupName="LineCount" 
								   width="10" verticalCenter="0" symbolColor="blue"
								   selected="true"							   
								   click="SetLineCount(1)"/>
					<mx:Text text="1 line"
							 width="34" verticalCenter="0"
							 fontFamily="Arial" fontSize="11"/>
					<s:RadioButton groupName="LineCount" 
								   width="10" verticalCenter="0"
								   click="SetLineCount(2)"/>
					<mx:Text text="2 lines"
							 width="36" verticalCenter="0"
							 fontFamily="Arial" fontSize="11"/>
				</s:HGroup>
					
				<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch"
						 source="{SwitchButtonImage}"/>
				
				<!--Switch button image is set and visibility is toggled via function-->
				<!--s:BorderContainer id="SwitchButton" width="110" height="22" horizontalCenter="0" verticalCenter="0" visible="{SwitchButtonVisible}" 
								   chromeColor="gray" borderColor="black" cornerRadius="3" 
								   useHandCursor="true" buttonMode="true" 
								   click="SetNextBoxAndSwitchButtonImage()">
					<s:layout>
						<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
										  paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2"/>
					</s:layout>
					<s:BorderContainer width="100%" height="100%" borderVisible="true" borderWeight=".5">
						<s:layout>
							<s:HorizontalLayout clipAndEnableScrolling="false"/>
						</s:layout>
						<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch"
								 source="{SwitchButtonImage}"/>
					<!/s:BorderContainer>
				</s:BorderContainer-->
				
				<!--Switch button image is set and visibility is toggled via function-->
				<!--s:BorderContainer id="SwitchButton" width="110" height="22" horizontalCenter="13" verticalCenter="0"
								   chromeColor="gray" borderColor="black" cornerRadius="3"
								   useHandCursor="true" buttonMode="true" visible="{SwitchButtonVisible}" click="SetNextBoxAndSwitchButtonImage()">
					<s:layout>
						<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
										  paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4"/>
					</s:layout>
					<s:BorderContainer width="100%" height="100%" borderVisible="true" borderWeight=".5">
						<s:layout>
							<s:HorizontalLayout clipAndEnableScrolling="true"/>
						</s:layout>
						<s:Image fillMode="scale" scaleMode="stretch" source="{SwitchButtonImage}"/>
					</s:BorderContainer> 
				</s:BorderContainer-->
				<!--s:HGroup id="SwitchButton" width="100" visible="{SwitchVisible}">
					<mx:Text text="Switch:"
							 fontFamily="Arial" fontSize="11" fontWeight="bold"/>
					<s:Button label="{CurrentLine}" height="16" width="80"
							  fontFamily="Arial" fontSize="11" fontWeight="bold"
							  click="Switch()"/>
				</s:HGroup-->

				<s:Spacer width="10"/>
				<s:HGroup width="196">
					<mx:Text text="Date, symbols, colors, and holes"
							 width="191.4" verticalCenter="0" horizontalCenter="114"
							 leading="0" textAlign="center"
							 styleName="DirectiveLabel"/>
				</s:HGroup>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Outer container for plate content controls -->
			<s:BorderContainer width="100%" height="196" 
							   borderVisible="false">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="8"/>
				</s:layout>
				<s:BorderContainer width="100%" height="100%" 
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<!-- Outer container for character buttons -->
					<s:BorderContainer id="CharacterButtonContainer"
									   width="320" height="164"
									   borderVisible="true">
						<s:layout>
							<s:VerticalLayout paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4"
											  gap="2"/>
						</s:layout>
						<s:BorderContainer width="100%" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C1_Button" label="A"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0"
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C2_Button" label="&#196;"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C3_Button" label="B"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C4_Button" label="C" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C5_Button" label="D" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C6_Button" label="E" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C7_Button" label="F" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C8_Button" label="G" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C9_Button" label="H" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C10_Button" label="I" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C11_Button" label="J" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C12_Btn" label="K" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C13_Button" label="L" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C14_Button" label="M" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C15_Button" label="N" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C16_Button" label="O" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C17_Button" label="&#214;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C18_Button" label="P" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C19_Button" label="Q" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C20_Button" label="R" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C21_Button" label="S" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C22_Button" label="T" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C23_Button" label="U" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C24_Button" label="&#220;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C25_Button" label="V" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C26_Button" label="V" color="red"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C27_Button" label="X" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C28_Button" label="Y" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C29_Button" label="Z" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C30_Button" label="1" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C31_Button" label="2" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C32_Button" label="3" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C33_Button" label="4" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C34_Button" label="5" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C35_Button" label="6" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C36_Button" label="7" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C37_Button" label="8" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C38_Button" label="9" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C39_Button" label="0" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C40_Button" label="-" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C41_Button" label="." 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C42_Button" label="?" 
									  width="{CharacterButtonWidth}" height="37"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Spacer width="1"/>
							<s:BorderContainer width="52" 
											   height="37"
											   borderVisible="false">
								<s:layout>
									<s:VerticalLayout horizontalAlign="left" verticalAlign="top"
													  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
								</s:layout>
								<s:BorderContainer width="52"
												   height="22"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" verticalAlign="top"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
															gap="2"/>
									</s:layout>
									<s:Button id="S1_Button" label="" 
											  width="23" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S2_Button" label=""
											  width="15" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S3_Button" label="" 
											  width="10" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
								</s:BorderContainer>
								<s:BorderContainer width="52"
												   height="12"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="bottom"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
									</s:layout>
									<s:Label text="Spaces"
											 width="40" height="12"
											 fontFamily="Arial" fontSize="11" fontWeight="normal"/>
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<s:Spacer height="4"/>
					
					<!-- Controls to set the plate size -->
					<s:BorderContainer width="100%" height="15" borderVisible="false">
						<s:layout>
							<s:HorizontalLayout gap="0" verticalAlign="middle"/>
						</s:layout>
						<mx:Text text="Text size"
								 width="63"
								 verticalCenter="0"
								 styleName="DirectiveLabel"/>
						<s:RadioButton groupName="CharacterSize" width="15" symbolColor="blue"
									   click="ChangeCharacterSize(event,'Large')"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="19.75"/>
						<mx:Text text="(79mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="12"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="CharacterSize" width="15" symbolColor="blue"
									   selected="true"
									   click="ChangeCharacterSize(event,'Medium')"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="14.5"/>
						<mx:Text text="(58mm)" 
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
						<s:Spacer width="100%"/>
						<s:RadioButton groupName="CharacterSize" width="15" symbolColor="blue"
									   click="ChangeCharacterSize(event,'Small')"/>
						<mx:Text text="ABC"
								 verticalCenter="0"
								 fontFamily="GL-Nummernschild-Eng" fontSize="10"/>
						<mx:Text text="(40mm)"
								 verticalCenter="0"
								 fontFamily="Arial Narrow" fontSize="11"/>
					</s:BorderContainer>		
				</s:BorderContainer>
				
				<!-- Outer container for date controls and flag -->
				<s:BorderContainer width="42" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="2" paddingLeft="0" paddingRight="0"
										  gap="6"
										  horizontalAlign="left"/>
					</s:layout>
					
					<!-- Outer container for date controls -->		
					<s:BorderContainer id="DateChooser"
									   width="100%" height="97" 
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center"
											  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="4"/>
						</s:layout>
						
						<!--Can be disabled by function-->
						<s:NumericStepper id="Date1"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDate"/>
						<s:NumericStepper id="Date2"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="31"
										  styleName="NumericStepperDate"/>
						<s:NumericStepper id="Date3"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="99"
										  styleName="NumericStepperDate"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddDateToLeftDateBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDateToDateBox('LD')"/>
							<s:Button id="AddDateToRightDateBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddDateToDateBox('RD')"/>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Flag chooser -->
					<s:BorderContainer id="FlagChooser"
									   width="100%" height="60" borderVisible="false">
						<s:layout>
							<s:VerticalLayout gap="0" horizontalAlign="center" verticalAlign="top"/>
						</s:layout>
						<s:BorderContainer width="30" height="60" borderVisible="true">
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image id="SelectedFlagImage"
									 width="100%" height="100%" horizontalAlign="center" verticalAlign="top"
									 source="{SelectedFlag}" fillMode="scale" scaleMode="stretch"									 
									 buttonMode="true" 
									 click="OpenFlagGallery(event)"/>
						</s:BorderContainer>
						<s:Image id="FlagGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenFlagGallery(event)"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddFlagToLeftFlagBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToFlagBox(event,'Left')"/>
							<s:Button id="AddFlagFlagBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddFlagToFlagBox(event,'Right')"/>
						</s:BorderContainer>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!-- Outer container for symbols, plate style, foil style, and holes -->
				<s:BorderContainer width="140.4" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="10"/>
					</s:layout>
					
					<!-- Outer container for symbols -->
					<s:BorderContainer width="100%" height="57"
									   borderVisible="false">
						<s:layout>
							<s:HorizontalLayout verticalAlign="top"
												paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												gap="0"/>
						</s:layout>
						
						<!-- Symbol chooser -->
						<s:BorderContainer id="SymbolChooser" width="57" height="63" horizontalCenter="0" verticalCenter="0" borderVisible="false">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0"/>
							</s:layout>
							<s:BorderContainer width="57" height="57" horizontalCenter="0" verticalCenter="0" borderVisible="true">
								<s:layout>
									<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"/>
								</s:layout>	
								<!--s:Image id="SelectedSymbolImage"
										 width="100%" height="100%" horizontalCenter="0" verticalCenter="0" horizontalAlign="center" verticalAlign="middle"
										 source="{SelectedSymbol}" fillMode="scale"
										 buttonMode="true" click="AddSymbolToCurrentBox(event)"/-->
								<s:BorderContainer id="SelectedSymbolBC"
												   width="100%" height="100%" horizontalCenter="0" verticalCenter="0"
												   buttonMode="true" click="AddSymbolToCurrentBox(event)" borderVisible="false"/>
							</s:BorderContainer>
							<s:Image id="SymbolGalleryButton"
									 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
									 source="{DownTriangle}"
									 buttonMode="true" click="OpenSymbolGallery(event)"/>
						</s:BorderContainer>
						<s:Spacer width="3"/>
						<s:BorderContainer width="14" height="59" borderVisible="false" enabled="{SymbolChooser.enabled}">
							<s:layout>
								<s:VerticalLayout gap="1"/>
							</s:layout>
							<s:Button id="AddSymbolToCurrentBoxButton" label="X"
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToCurrentBox(event)"/>
							<s:Button id="AddSymbolToLeftSymbolBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToSymbolBox(event,'Left')"/>
							<s:Button id="AddSymbolToCenterSymbolBox" label="C" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToSymbolBox(event,'Center')"/>
							<s:Button id="AddSymbolToRightSymbolBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  click="AddSymbolToSymbolBox(event,'Right')"/>
						</s:BorderContainer>
						
						<s:Spacer width="8"/>
						
					</s:BorderContainer>
					
					<!-- Outer container for plate, foil, and holes controls -->
					<s:BorderContainer width="140" height="100%" borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="top" gap="0"/>
						</s:layout>
						
						<!-- Plate chooser -->
						<s:BorderContainer id="Plate_MiniPlateFrame"
										   width="140.4" height="30.51" borderVisible="true" borderColor="black" 
										   click="SetPreviewPlate()">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<s:BorderContainer id="Plate_MiniPlateNonImageContainer" includeInLayout="false" visible="false"
											   width="100%" height="{Plate_MiniPlateFrame.height-5}"
											   cornerRadius="3" borderVisible="true" borderColor="{Plate_MiniPlateFoilColor}" borderAlpha="1" borderWeight="2">
								<s:layout>
									<s:VerticalLayout paddingTop=".175" paddingBottom=".175" paddingLeft=".175" paddingRight=".175" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate NonImage-->
								<s:BorderContainer id="Plate_MiniPlateInnerNonImageContainer"
												   width="{Plate_MiniPlateNonImageContainer.width-4.25}" height="{Plate_MiniPlateNonImageContainer.height-4}" 
												   borderWeight=".175" cornerRadius="3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="{Plate_MiniPlatePlateColor}" backgroundAlpha="1"/>
							</s:BorderContainer>
							
							<s:BorderContainer id="Plate_MiniPlateImageContainer" includeInLayout="false" visible="false"
											   width="{Plate_MiniPlateFrame.width-2}" height="{Plate_MiniPlateFrame.height-4}"
											   cornerRadius="3" borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1">
								<s:layout>
									<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate image-->
								<s:BorderContainer id="Plate_MiniPlateInnerImageContainer"
												   width="100%" height="100%" cornerRadius="3" borderVisible="false">					   
									<s:layout>
										<s:BasicLayout clipAndEnableScrolling="true"/>
									</s:layout>
									<s:Image id="Plate_MiniPlateImage" width="100%" height="{Plate_MiniPlateImageContainer.height-3}" depth="1"
											 horizontalAlign="center" verticalAlign="middle"
											 source="{SelectedPlateImage}" fillMode="scale" scaleMode="stretch"/>
									<s:Rect id="Plate_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3" depth="2">                          
										<s:stroke>
											<s:SolidColorStroke weight="2" color="black" alpha="1"/>
										</s:stroke>
										<s:fill>
											<s:SolidColor alpha="0"/>
										</s:fill>
									</s:Rect>
								</s:BorderContainer>
								
							</s:BorderContainer>
							
						</s:BorderContainer>
						
						<s:Image id="PlateGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenPlateGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Foil chooser -->
						<s:BorderContainer id="Foil_MiniPlateFrame" width="140.4" height="30.51" horizontalCenter="0" verticalCenter="0" borderVisible="true"					   
										   click="SetPreviewFoil()">
							<s:layout>
								<s:VerticalLayout paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2" gap="0" 
												  horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<!--Foil MiniPlate NonImage-->
							<!--s:BorderContainer id="Foil_MiniPlateNonImageContainer"
											   width="100%" height="{Foil_MiniPlateFrame.height-6}" 
											   horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
											   borderWeight="2.5" cornerRadius="3" borderColor="{Foil_MiniPlateFoilColor}">
							</s:BorderContainer-->
							
							<!--Foil MiniPlate image-->
							<s:BorderContainer id="Foil_MiniPlateImageContainer"
											   width="100%" height="{Foil_MiniPlateFrame.height-6}" includeInLayout="{FoilIsImage}" visible="{FoilIsImage}"
											   horizontalCenter="0" verticalCenter="0" cornerRadius="3" borderWeight="1">			   
								<s:layout>
									<s:HorizontalLayout clipAndEnableScrolling="true"/>
								</s:layout>
								<s:Image id="Foil_MiniPlateImage" 
										 width="100%" height="100%" horizontalCenter="0" verticalCenter="0" depth="1"
										 horizontalAlign="center" verticalAlign="middle"
										 source="{SelectedFoilImage}" fillMode="scale" scaleMode="stretch">
								</s:Image>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<s:Image id="FoilGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenFoilGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Holes chooser -->
						<s:BorderContainer width="140.4" height="30.51"
										   minWidth="0" minHeight="0"
										   borderVisible="true">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0"/>
							</s:layout>
							
							<s:Image id="SelectedHolesImage"
									 width="100%" height="100%" 
									 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
									 source="{SelectedHoles}" fillMode="scale" scaleMode="stretch"
									 buttonMode="true" click="SetPreviewHoles()"/>
						</s:BorderContainer>
						<s:Image id="HolesGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenHolesGallery(event)"/>
					</s:BorderContainer>
				</s:BorderContainer>
				
			</s:BorderContainer>
		</s:BorderContainer>
		
		<!--Height and width and padding involve GalleryList-->
		<component:CustomTitleWindow id="GalleryWindow" title=""
									 x="10" y="127" width="323" height="268" headerHeight="14" visible="false"
									 borderVisible="true" borderColor="blue" dropShadowVisible="true" skinClass="skins.CustomTitleWindowSkin" depth="10"
									 close="CloseGallery_()">
			<s:VGroup width="100%" height="100%" paddingTop="-5" paddingBottom="-5" paddingLeft="10" paddingRight="0" gap="0" clipAndEnableScrolling="true">
			
			<mx:ViewStack id="Galleries" width="100%" height="100%" clipContent="true" creationPolicy="auto"
						  paddingTop="5" paddingBottom="5" paddingRight="0" change="Galleries_changeHandler(event)">
				
				<s:NavigatorContent id="PlateGallery" width="100%" height="100%">			
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="PlateGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingLeft="0" paddingRight="5"
										  horizontalAlign="center" verticalAlign="middle"
										  clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer id="GP_A_Black" width="100%" height="100%"
												   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'BlackPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_Black" width="{GP_A_Black.width-2}" height="{GP_A_Black.height-2}"
													   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_Black" width="{GP_B_Black.width-6}" height="{GP_B_Black.height-6}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_White" width="100%" height="100%"
												   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'WhitePlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_White" width="{GP_A_White.width-2}" height="{GP_A_White.height-2}"
													   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_White" width="{GP_B_White.width-6}" height="{GP_B_White.height-6}"
														   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer id="GP_A_LimeGreen" width="100%" height="100%"
												   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
												   click="SelectPlateGalleryNonImage(event,'LimeGreenPlate'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="GP_B_LimeGreen" width="{GP_A_LimeGreen.width-2}" height="{GP_A_LimeGreen.height-2}"
													   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="GP_C_LimeGreen" width="{GP_B_LimeGreen.width-6}" height="{GP_B_LimeGreen.height-6}"
														   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/White.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Black.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkBlue.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkGreen.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/DarkYellow.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterBlue.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGold.jpg"
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterGreen.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GlitterRed.jpg"
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/LightGreen.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Pink.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Rainbow.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Raindrops.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Red.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ReflexWhite.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/ShockingPink.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Silver.jpg" 
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Space.jpg"
										 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/Bayern.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/GermanFlagColors.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<s:Image width="33.3%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/HouseWhite.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								<s:Image width="33.3%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/HouseBlue.jpg" 
										 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
							</s:ArrayList>
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<!--s:NavigatorContent>					
				<s:Group>
				<s:layout>
				<layouts:FlowLayout/>
				</s:layout>
				</s:Group>
				</s:NavigatorContent-->
				
				<s:NavigatorContent id="FoilGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FoilGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<layouts:FlowLayout padding="10" horizontalGap="3" verticalGap="6"/>
							<!--s:TileLayout rowHeight="38" columnWidth="135" requestedColumnCount="2" requestedRowCount="6" orientation="columns"
							columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="1" verticalGap="3"
							paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/-->
						</s:layout>
						<!--<s:dataProvider>
							<s:ArrayList>
								<s:BorderContainer width="38" height="36" backgroundColor="black"
												   click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="BlackFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="white"
												   click="SelectFoilGalleryNonImage(event,'BlackFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="BlackFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="black">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="BlackFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="white">
										</s:BorderContainer>
									</s:BorderContainer>
								</s:BorderContainer>
								<s:BorderContainer width="38" height="36" backgroundColor="white"
												   click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);"/>								
								<s:BorderContainer id="WhiteFoilPlate_OuterContainer" width="220" height="38"
												   styleName="MiniPlateOuterContainer" backgroundColor="black"
												   click="SelectFoilGalleryNonImage(event,'WhiteFoil'); CloseGallery(event);">
									<s:layout>
										<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
									</s:layout>
									<s:BorderContainer id="WhiteFoilPlate_InnerPlateContainer" 
													   width="{BlackFoilPlate_InnerPlateContainer.width-2}" height="{BlackFoilPlate_InnerPlateContainer.height-2}" 
													   styleName="MiniPlateInnerContainer" backgroundColor="white">
										<s:layout>
											<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="WhiteFoilPlate_CorePlateContainer" 
														   width="{BlackFoilPlate_CorePlateContainer.width-6}" height="{BlackFoilPlate_CorePlateContainer.height-6}"
														   styleName="MiniPlateCoreContainer" backgroundColor="black">
										</s:BorderContainer>								
									</s:BorderContainer>
								</s:BorderContainer>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="220" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
										 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>-->
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="HolesGallery" width="100%" height="100%" >
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="HolesGalleryList" width="100%" height="100%" 
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomCups.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomHoles.png" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/NoneNone.jpg" 
										 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								<!--s:BorderContainer width="100%" height="100%"
								borderVisible="true" borderWeight="1.5" cornerRadius="3">
								<s:layout>
								<s:BasicLayout/>
								</s:layout>
								<s:Rect x="2.5" y="2.5" width="100%" height="100%" radiusX="3" radiusY="3">                              
								<s:stroke>
								<s:SolidColorStroke weight="2" color="gray"/>
								</s:stroke>
								</s:Rect>
								<s:Ellipse depth="11" x="5.5" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:Ellipse depth="11" x="18" y="5.5" width="6" height="6">
								<s:fill>
								<s:SolidColor color="white" alpha="1"/>
								</s:fill>
								<s:stroke>
								<s:SolidColorStroke color="black" alpha="1" weight=".25"/>
								</s:stroke>
								</s:Ellipse>
								<s:BorderContainer x="3" y="3"
								width="100%" height="100%" borderVisible="false" 
								horizontalCenter="0" verticalCenter="0">
								<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
								</s:layout>
								<mx:Text text="Holes in corners" styleName="NumericStepperDate"/>
								</s:BorderContainer>
								</s:BorderContainer-->
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
				<s:NavigatorContent id="FlagGallery" width="100%" height="100%">				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="FlagGalleryList" width="100%" height="100%"
							borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="68" columnWidth="34" requestedColumnCount="7" requestedRowCount="3"
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
										  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/A.jpg" 
										 click="SelectFlagGalleryImage(event,'Austria'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/AL.jpg" 
										 click="SelectFlagGalleryImage(event,'Albania'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/B.jpg" 
										 click="SelectFlagGalleryImage(event,'Belgium'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/BG.jpg" 
										 click="SelectFlagGalleryImage(event,'Bulgaria'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/BIH.jpg" 
										 click="SelectFlagGalleryImage(event,'Bosnia'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/CZ.jpg" 
										 click="SelectFlagGalleryImage(event,'Czech Republic'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/D.jpg" 
										 click="SelectFlagGalleryImage(event,'Germany'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/DK.jpg" 
										 click="SelectFlagGalleryImage(event,'Denmark'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/E.jpg" 
										 click="SelectFlagGalleryImage(event,'Spain'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/EST.jpg" 
										 click="SelectFlagGalleryImage(event,'Estonia'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/F.jpg" 
										 click="SelectFlagGalleryImage(event,'France'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/FIN.jpg" 
										 click="SelectFlagGalleryImage(event,'Finland'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/GB.jpg" 
										 click="SelectFlagGalleryImage(event,'Great Britain'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/GR.jpg" 
										 click="SelectFlagGalleryImage(event,'Greece'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/H.jpg" 
										 click="SelectFlagGalleryImage(event,'Hungary'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/IRL.jpg" 
										 click="SelectFlagGalleryImage(event,'Ireland'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/L.jpg" 
										 click="SelectFlagGalleryImage(event,'Luxembourg'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/M.jpg" 
										 click="SelectFlagGalleryImage(event,'Malta'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/NL.jpg" 
										 click="SelectFlagGalleryImage(event,'Netherlands'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/P.jpg" 
										 click="SelectFlagGalleryImage(event,'Portugal'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/PL.jpg" 
										 click="SelectFlagGalleryImage(event,'Poland'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/RO.jpg" 
										 click="SelectFlagGalleryImage(event,'Romania'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/S.jpg" 
										 click="SelectFlagGalleryImage(event,'Sweden'); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/SK.jpg" 
										 click="SelectFlagGalleryImage(event,'Slovakia'); CloseGallery(event);"/>
							</s:ArrayList>		
						</s:dataProvider>
					</s:List>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="SymbolGallery" width="100%" height="100%">
					<!--fx:Script>
					<![CDATA[
					private var Symbols_AC:ArrayList = new ArrayList
					([
					{s:"Image", source:"assets/symbols/Audi.png"},
					{ID:"Audi", source:"assets/symbols/Audi.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BartSimpson", imageSource:"assets/symbols/BartSimpson.png", PriceEUR:"0.00", Discontinued:false, InStock:true},
					{ID:"BeerGlass", imageSource:"assets/symbols/BeerGlass", PriceEUR:"0.00", Discontinued:false, InStock:true}
					]);
					]]>
					</fx:Script-->				
					<!--Height and width and padding involve GalleryWindow-->
					<s:List id="SymbolGalleryList" width="100%" height="100%" borderVisible="false"
							horizontalScrollPolicy="off" verticalScrollPolicy="auto"
							itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
							horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:TileLayout rowHeight="40" columnWidth="40" requestedColumnCount="6" requestedRowCount="8" 
										  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="5" verticalGap="5"
										  horizontalAlign="center" verticalAlign="middle" paddingTop="5" paddingBottom="5" paddingRight="5" clipAndEnableScrolling="true"/>
						</s:layout>
						<s:dataProvider>
							<s:ArrayList>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Audi.png" 
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BartSimpson.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="85%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Basketball.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="5.3%" height="5.3%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BeerGlass.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BerlinBears.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BettyBoop.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bird.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BMW.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Boat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bowling.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="98%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cannabis.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="63%" height="63%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Crown.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/DartBoard.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="68%" height="68%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dog.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dolphin.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dragon.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Elephant.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="30%" height="30%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/EuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="29%" height="29.2%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallEuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FerrisWheel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="59%" height="59%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Football.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Ford.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FormulaOne.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Frame.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Helicopter.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/HelloKitty.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Hockey.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="68%" height="68%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horseshoe.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>				
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargeHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PeaceSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Lightning.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="94%" height="94%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Left.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="94%" height="94%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Right.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MAN.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mercedes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MiddleFinger.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Moon&amp;Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle2.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="85%" height="85%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mouse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="73%" height="73%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MusicalNotes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Opel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="46%" height="46%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pacifier.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="65%" height="65%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PalmTree.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Peugot.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pistol.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Playboy.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rabbit.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rings.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Scania.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SantaClaus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SEAT.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Skull&amp;Crossbones.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmileyFace.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Soccer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SpongeBob.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="46%" height="46%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Telephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="30%" height="30%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallTelephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/TennisRacket.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Tractor.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Volkswagen.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Windsurfer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<!--s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/WinnieThePooh.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/-->
							</s:ArrayList>
							<!--s:ArrayList including unlicensed>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Audi.png" 
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BartSimpson.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="85%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Basketball.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="5.3%" height="5.3%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BeerGlass.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BerlinBears.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BettyBoop.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bird.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BMW.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Boat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bowling.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="98%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cannabis.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="63%" height="63%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cat.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Crown.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/DartBoard.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="68%" height="68%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dog.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dolphin.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dragon.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Elephant.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="30%" height="30%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/EuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="29%" height="29.2%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallEuroSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FerrisWheel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="59%" height="59%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Football.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Ford.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FormulaOne.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Frame.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Helicopter.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/HelloKitty.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Hockey.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="68%" height="68%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horseshoe.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>				
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargeHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallHeart.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargePeaceSign.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Lightning.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="94%" height="94%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Left.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="94%" height="94%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Right.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MAN.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mercedes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="60%" height="60%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MiddleFinger.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Moon&amp;Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle2.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="85%" height="85%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mouse.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="73%" height="73%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MusicalNotes.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Opel.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="46%" height="46%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pacifier.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="65%" height="65%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PalmTree.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Peugot.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pistol.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Playboy.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rabbit.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rings.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Scania.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SantaClaus.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SEAT.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Skull&amp;Crossbones.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmileyFace.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="80%" height="80%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Soccer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SpongeBob.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="46%" height="46%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Star.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="55%" height="55%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Telephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="30%" height="30%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallTelephone.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="70%" height="70%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/TennisRacket.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Tractor.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Volkswagen.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Windsurfer.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
								<s:Image width="100%" height="100%" fillMode="scale" scaleMode="letterbox" source="assets/symbols/WinnieThePooh.png"
										 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
							</s:ArrayList-->
						</s:dataProvider>
					</s:List>					
				</s:NavigatorContent>
				
			</mx:ViewStack>
			
			</s:VGroup>
		</component:CustomTitleWindow>
		
	</s:BorderContainer>
	
</s:Application>