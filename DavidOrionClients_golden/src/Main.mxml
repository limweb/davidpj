<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:component="component.*"
			   xmlns:pages="david.pages.*"
			   width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	
	<fx:Style source="Styles.css"/>
	   
	<fx:Script>
		<![CDATA[
			import david.configs.Constants;
			
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.LinkButton;
			import mx.core.FlexGlobals;
			import mx.effects.Move;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			
			import spark.effects.Resize;
			
			[Bindable] public var isLogin:Boolean = false;
			[Bindable] public var userModel:UserModel = new UserModel();
			[Bindable] public var linkBarDataProvider:ArrayCollection = new ArrayCollection();
			[Bindable] public var titleText:String = null;
			[Bindable] public var searchBoxDataProvider:ArrayCollection = new ArrayCollection();
			
			[Bindable] [Embed(source="../assets/logout.png")]
			public var ICON_TEST:Class;
			
			[Bindable] [Embed(source="../assets/documents.png")]
			public var ICON_DOC:Class;
			
			[Bindable] [Embed(source="../assets/manage.png")]
			public var ICON_WORK:Class;
			
			[Bindable] [Embed(source="../assets/report.png")]
			public var ICON_REPORT:Class;
			
			[Bindable] [Embed(source="../assets/config.png")]
			public var ICON_CONFIG:Class;
			
			[Bindable] [Embed(source="assets/folderopen.jpg")]
			public var FLODER_OPEN:Class;
			
			[Bindable] [Embed(source="assets/folderclose.jpg")]
			public var FLODER_CLOSE:Class;
			
			[Bindable] [Embed(source="assets/folderopen.jpg")]
			public var FLODER_OPEN2:Class;
			
			[Bindable] [Embed(source="assets/folderclose.jpg")]
			public var FLODER_CLOSE2:Class;
			
			[Bindable] [Embed(source="assets/folderopen.jpg")]
			public var FLODER_OPEN3:Class;
			
			[Bindable] [Embed(source="assets/folderclose.jpg")]
			public var FLODER_CLOSE3:Class;
			
			
			//-- Createion Complete
			protected function creationCompleteHandler(event:FlexEvent):void {
				mainStackID.selectedChild = homeID;
				titleText = Constants.HOME;
				setNotificationBtnColour('I');
			}
			
			private function setNotificationBtnColour(action:String):void {
				if ( action == 'A' ) {
					nofBtn1ID.setStyle("chromeColor", "#00ff0000");
					nofBtn2ID.setStyle("chromeColor", "#00ff8000");
					nofBtn3ID.setStyle("chromeColor", "#00ffff00");
					nofBtn4ID.setStyle("chromeColor", "#0000bfff");
					nofBtn5ID.setStyle("chromeColor", "#000000ff");
				
				} else { //action == I
					nofBtn1ID.setStyle("chromeColor", "#A4A4A4");
					nofBtn2ID.setStyle("chromeColor", "#A4A4A4");
					nofBtn3ID.setStyle("chromeColor", "#A4A4A4");
					nofBtn4ID.setStyle("chromeColor", "#A4A4A4");
					nofBtn5ID.setStyle("chromeColor", "#A4A4A4");
				}
			}
			
			//-- Log-in
			public function login(user:String, pass:String):void {
				if (user != null && user.length > 0) {
					if ( user == "admin" ) { //Admin
						linkBarDataProvider.removeAll();
						linkBarDataProvider.addItem( { label:Constants.DOC_EXP_LABEL, data:Constants.DOC_EXP_LABEL, icon:ICON_DOC } );
						linkBarDataProvider.addItem( { label:Constants.WORK_MANAGER_LABEL, data:Constants.WORK_MANAGER_LABEL, icon:ICON_WORK } );
						//linkBarDataProvider.addItem( { label:"WM_backup", data:"WM_Backup", icon:ICON_WORK } ); //Test
						linkBarDataProvider.addItem( { label:Constants.CHART_REPORT_LABEL, data:Constants.CHART_REPORT_LABEL, icon:ICON_REPORT } );
						linkBarDataProvider.addItem( { label:Constants.CONFIG_ADMIN_LABEL, data:Constants.CONFIG_ADMIN_LABEL, icon:ICON_CONFIG } );
						userModel.userName = user;
						userModel.userRole = Constants.ADMIN_ROLE;
						isLogin = true;
						setNotificationBtnColour('A');
						AlertNotifyButton.enabled=true;
						DashboardButton.enabled=true;
						
					} else if ( user == "user" ) { //User
						linkBarDataProvider.removeAll();
						linkBarDataProvider.addItem( { label:Constants.DOC_EXP_LABEL, data:Constants.DOC_EXP_LABEL, icon:ICON_DOC } );
						linkBarDataProvider.addItem( { label:Constants.WORK_MANAGER_LABEL, data:Constants.WORK_MANAGER_LABEL, icon:ICON_WORK } );
						linkBarDataProvider.addItem( { label:Constants.CHART_REPORT_LABEL, data:Constants.CHART_REPORT_LABEL, icon:ICON_REPORT } );
						isLogin = true;
						userModel.userName = user;
						userModel.userRole = Constants.USER_ROLE;
						setNotificationBtnColour('A');
						AlertNotifyButton.enabled=true;
						DashboardButton.enabled=true;
						
					} else {
						Alert.show("Invalid user account name \n\n Username >> 'admin' or 'user'");
					}
					
				} else {
					Alert.show("Enter user account name \n\n Username >> 'admin' or 'user' ");
				}
			}
			
			//-- Log-out
			public function logout():void {
				userModel.userName = null;
				userModel.userRole = null;
				isLogin = false;
				linkBarDataProvider.removeAll();
				mainStackID.selectedChild = homeID;
				titleText = Constants.HOME;
				searchBoxDataProvider.removeAll();
				setNotificationBtnColour('I');
			}
			
			//-- Link-bar selected
			public function linkBarChangePage(event:ItemClickEvent):void {
				event.currentTarget.enabled = false;
				event.currentTarget.enabled = true;
				LinkButton(event.relatedObject).enabled = false;
				
				var linkBarSelected:String = event.item.data;
				
				if (linkBarSelected == Constants.DOC_EXP_LABEL) { //DE
					mainStackID.selectedChild = documentExplorerID;
					documentExplorerID.init();
					setSearchBoxDataProvider(Constants.DOC_EXP_LABEL);
					titleText = Constants.DOC_EXP_LABEL;
				
				} else if (linkBarSelected == Constants.WORK_MANAGER_LABEL) { //WM
					mainStackID.selectedChild = workManagerID;
					workManagerID.init();
					setSearchBoxDataProvider(Constants.WORK_MANAGER_LABEL);
					titleText = Constants.WORK_MANAGER_LABEL;
				
				} else if (linkBarSelected == Constants.CHART_REPORT_LABEL) { //CR
					mainStackID.selectedChild = chartReportID;
					chartReportID.init();
					setSearchBoxDataProvider(Constants.CHART_REPORT_LABEL);
					titleText = Constants.CHART_REPORT_LABEL;
				
				} else if (linkBarSelected == Constants.CONFIG_ADMIN_LABEL) { //CA
					mainStackID.selectedChild = configAdminID;
					configAdminID.init();
					setSearchBoxDataProvider(Constants.CONFIG_ADMIN_LABEL);
					titleText = Constants.CONFIG_ADMIN_LABEL;
				
				} /* else if (linkBarSelected == "WM_Backup") { //Test
					mainStackID.selectedChild = workManager_bk_ID;
					workManager_bk_ID.init();
					setSearchBoxDataProvider(Constants.CONFIG_ADMIN_LABEL);
					titleText = Constants.CONFIG_ADMIN_LABEL;
				} */
			}
			
			//User login click
			public function userLoginSelectPage(selectPage:String):void {
				if ( selectPage == "DE" ) { //DE
					AppLaunchBar.selectedIndex = 0;
					mainStackID.selectedChild = documentExplorerID;
					documentExplorerID.init();
					setSearchBoxDataProvider(Constants.DOC_EXP_LABEL);
					titleText = Constants.DOC_EXP_LABEL;
				
				} else if ( selectPage == "WM" ) { //WM
					AppLaunchBar.selectedIndex = 1;
					mainStackID.selectedChild = workManagerID;
					workManagerID.init();
					setSearchBoxDataProvider(Constants.WORK_MANAGER_LABEL);
					titleText = Constants.WORK_MANAGER_LABEL;
					
				} else if ( selectPage == "CR" ) { //CR
					AppLaunchBar.selectedIndex = 2;
					mainStackID.selectedChild = chartReportID;
					chartReportID.init();
					setSearchBoxDataProvider(Constants.CHART_REPORT_LABEL);
					titleText = Constants.CHART_REPORT_LABEL;
					
				} else { //CA
					AppLaunchBar.selectedIndex = 3;
					mainStackID.selectedChild = configAdminID;
					configAdminID.init();
					setSearchBoxDataProvider(Constants.CONFIG_ADMIN_LABEL);
					titleText = Constants.CONFIG_ADMIN_LABEL;
				}
			}
			
			//Set search box data provider
			private function setSearchBoxDataProvider(page:String):void {
				if (page == Constants.DOC_EXP_LABEL) {
					searchBoxDataProvider.removeAll();
					searchBoxDataProvider.addItem( {label:"All the words"} );
					searchBoxDataProvider.addItem( {label:"Any of the words"} );
					searchBoxDataProvider.addItem( {label:"The phrase"} );
				
				} else if (page == Constants.WORK_MANAGER_LABEL) {
					searchBoxDataProvider.removeAll();
					searchBoxDataProvider.addItem( {label:"Batches"} );
					searchBoxDataProvider.addItem( {label:"SubBatches"} );
					searchBoxDataProvider.addItem( {label:"Objects"} );
					
				} else if (page == Constants.CHART_REPORT_LABEL) {
					searchBoxDataProvider.removeAll();
					searchBoxDataProvider.addItem( {label:"Charts"} );
					searchBoxDataProvider.addItem( {label:"Reports"} );
					searchBoxDataProvider.addItem( {label:"Audit Trails"} );
					
				} else if (page == Constants.CONFIG_ADMIN_LABEL) {
					searchBoxDataProvider.removeAll();
					searchBoxDataProvider.addItem( {label:"System"} );
					searchBoxDataProvider.addItem( {label:"Users"} );
					searchBoxDataProvider.addItem( {label:"Groups"} );
					searchBoxDataProvider.addItem( {label:"Roles"} );
					searchBoxDataProvider.addItem( {label:"Folders"} );
					searchBoxDataProvider.addItem( {label:"Document Types"} );
					searchBoxDataProvider.addItem( {label:"Workflow Procedures"} );
				}
			}
			
			public function closePopup(e:CloseEvent):void
			{
				PopUpManager.removePopUp(e.currentTarget as TitleWindow);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var ttw:TitleWindow = new TitleWindow();
				ttw.addEventListener(CloseEvent.CLOSE,closePopup);
				ttw.showCloseButton=true;
				ttw.width=700;
				ttw.height=0;
				ttw.addElement(new Button);
				ttw.addElement(new TextInput);

				ttw.x = 0;
				ttw.y = 37;
				PopUpManager.addPopUp(ttw,this,false);
				
				var resize:Resize = new Resize();
				resize.target = ttw;
				resize.heightBy = 100;
				resize.end();
				resize.play();				
			}
			
			protected function ToggleDashboardOpenClose(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var ttw:TitleWindow = new TitleWindow();
				ttw.addEventListener(CloseEvent.CLOSE,closePopup);
				ttw.showCloseButton=true;
				ttw.width=200;
				ttw.height=0;
				ttw.x = this.width - 200;
				ttw.y = this.height - 20;
				PopUpManager.addPopUp(ttw,this,false);
				
				var move1:Move = new Move();
				move1.target = ttw;
				move1.yBy = -100;
				move1.duration = 200;
				move1.end();
				move1.play();
				
				var resize:Resize = new Resize();
				resize.target = ttw;
				resize.heightBy = 100;
				resize.duration = 210;
				resize.end();
				resize.play();		
			}
			
		]]>
	</fx:Script>
	
	<mx:Canvas width="100%" height="100%">
		<s:BorderContainer width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
			</s:layout>
			
			<!--##### Common header #####-->
			<s:BorderContainer id="CommonHeader"
							   width="100%" height="36" borderVisible="false" styleName="BackgroundBlue">
				<s:layout>
					<s:HorizontalLayout paddingBottom="0" paddingLeft="5" paddingRight="5"
										paddingTop="0" verticalAlign="middle"/>
				</s:layout>
				<s:BorderContainer width="55%" height="{CommonHeader.height}" borderVisible="false" styleName="BackgroundBlue" >
					<s:layout>
						<s:HorizontalLayout paddingBottom="0" paddingTop="0" gap="5" verticalAlign="middle"/>
					</s:layout>
					<s:Label text="{titleText}" 
							 verticalAlign="top" styleName="ClientTitleText"/>
				</s:BorderContainer>
				<s:BorderContainer width="370" height="{CommonHeader.height}" borderVisible="false" styleName="BackgroundBlue">
					<s:layout>
						<s:HorizontalLayout paddingBottom="0" paddingTop="0" gap="5" verticalAlign="middle"/>
					</s:layout>
					<s:Label text="Alerts &amp; Notifications"
							 styleName="ClientLabelLight"/>
					<mx:Canvas width="120" height="21">
						<s:Button id="AlertNotifyButton" 
								  x="0" y="0" width="120" height="21" buttonMode="true"
								  click="button1_clickHandler(event)" enabled="{isLogin}"/>
						
						<s:Image x="5" width="12" height="12" verticalCenter="0" enabled="{isLogin}"
								 source="@Embed('../assets/alarm.png')" 
								 click="button1_clickHandler(event)"/>
						<s:Image x="20" width="12" height="12" verticalCenter="0" enabled="{isLogin}"
								 source="@Embed('../assets/mail.png')"
								 click="button1_clickHandler(event)"/>
						
						<s:Button id="nofBtn1ID" label="1"
								  x="40" width="13" height="13" verticalCenter="0" buttonMode="true" enabled="{isLogin}"
								  styleName="AlertNotifyMiniButton"
								  skinClass="skin.myButtonSkin"
								  click="button1_clickHandler(event)"/>
						<s:Button id="nofBtn2ID" label="2"
								  x="55" width="13" height="13" verticalCenter="0" buttonMode="true" enabled="{isLogin}"
								  styleName="AlertNotifyMiniButton"
								  skinClass="skin.myButtonSkin"
								  click="button1_clickHandler(event)"/>
						<s:Button id="nofBtn3ID" label="3"
								  x="70" width="13" height="13" verticalCenter="0" buttonMode="true" enabled="{isLogin}"
								  styleName="AlertNotifyMiniButton"
								  skinClass="skin.myButtonSkin"
								  click="button1_clickHandler(event)"/>
						<s:Button id="nofBtn4ID" label="4"
								  x="85" width="13" height="13" verticalCenter="0" buttonMode="true" enabled="{isLogin}"
								  styleName="AlertNotifyMiniButton"
								  skinClass="skin.myButtonSkin"
								  click="button1_clickHandler(event)"/>
						<s:Button id="nofBtn5ID" label="5"
								  x="100" width="13" height="13" verticalCenter="0" buttonMode="true" enabled="{isLogin}"
								  styleName="AlertNotifyMiniButton"
								  skinClass="skin.myButtonSkin"
								  click="button1_clickHandler(event)"/>
					</mx:Canvas>
					<s:Spacer width="10"/>
					<s:Label text="Help"
							 styleName="ClientLabelLight"/>
				</s:BorderContainer>
				
				<s:BorderContainer width="45%" height="{CommonHeader.height}" borderVisible="false" styleName="BackgroundBlue">
					<s:layout>
						<s:HorizontalLayout paddingTop="0" paddingBottom="0" gap="5" horizontalAlign="right" verticalAlign="middle"/>
					</s:layout>
					<s:Label text="Theme"
							 styleName="ClientLabelLight"/>
					<component:CustomDropDownList width="50"/>
					<s:Spacer width="5"/>
					<s:Label text="Language"
							 styleName="ClientLabelLight"/>
					<component:CustomDropDownList width="50"/>
					<s:Spacer width="5"/>
					<s:Label text="username"
							 styleName="ClientLabelLight"/>
					<s:Button label="Log off" 
							  height="21" buttonMode="true"
							  styleName="logOffButton"
							  click="FlexGlobals.topLevelApplication.logout()"/>
					<s:BitmapImage width="20" height="20" fillMode="scale" scaleMode="stretch"
								   source="@Embed('../assets/settingsicon.jpg')"/>
				</s:BorderContainer>
			</s:BorderContainer>
			<mx:HRule width="100%" strokeColor="black" strokeWidth="1"/>
			<!--##### End Common Header #####-->
			
			<s:Spacer height="3"/>
			
			<!--##### App launch bar #####-->
			<s:BorderContainer width="100%" height="26" borderVisible="false">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<mx:LinkBar id="AppLaunchBar"
							x="191" width="1010" height="24" horizontalAlign="center" horizontalGap="10"
							visible="{(mainStackID.selectedChild != homeID)?true:false}"
							includeInLayout="{(mainStackID.selectedChild != homeID)?true:false}"
							styleName="AppLaunchBar" iconField="icon"						
							dataProvider="{linkBarDataProvider}"
							itemClick="linkBarChangePage(event)"/>
			</s:BorderContainer>
			<!--##### End App launch bar #####-->
			
			<s:Spacer height="5"/>
			
			<!--##### Stage #####-->
			<s:BorderContainer id="Stage" width="100%" height="100%" borderVisible="false">
				<s:layout>
					<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
				</s:layout>
				
				<!--Logo and Search box-->
				<s:BorderContainer id="LogoAndSearchBox" width="100%" height="40" borderVisible="false">
					<s:layout>
						<s:BasicLayout/>
					</s:layout>
					<!--Logo-->
					<s:BorderContainer id="ClientLogos"
									   x="5" y="-33" width="175" height="70" borderVisible="false">
						<s:layout>
							<s:BasicLayout/>
						</s:layout>
						<s:BitmapImage width="97%" height="100%"
									   source="@Embed('../assets/orionlogo.jpg')" scaleMode="stretch" fillMode="scale"/>
						<s:BitmapImage x="3" y="3" width="70" height="25"
									   source="@Embed('../assets/MagSoftlogo.jpg')" scaleMode="stretch" fillMode="scale"/>
					</s:BorderContainer>
					
					<!--SearchBox container-->
					<s:HGroup x="190" width="100%">
						<s:BorderContainer width="100%" height="35" borderVisible="true"
										   visible="{(mainStackID.selectedChild != homeID)?true:false}"
										   includeInLayout="{(mainStackID.selectedChild != homeID)?true:false}"
										   styleName="SearchBox">
							<s:layout>
								<s:HorizontalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="5" verticalAlign="middle"/>
							</s:layout>
							<s:Label text="Search for"
									 height="21" verticalAlign="middle"
									 styleName="SearchBoxLabel"/>
							<component:CustomDropDownList id="searchBoxID" 
											width="145" height="21"
											styleName="DropDownListText" dropShadowVisible="false"
											dataProvider="{searchBoxDataProvider}"/>
							<s:TextInput width="100%"/>
							<s:Button height="21" label="Search" buttonMode="true"
									  styleName="searchButton"/>
						</s:BorderContainer>
						<s:Spacer width="0"/>
					</s:HGroup>
				</s:BorderContainer>
				
				<!--Entity chooser-->
				<s:BorderContainer id="EntityChooser" 
								   width="100%" height="100%" borderVisible="false">
					<s:layout>
						<s:HorizontalLayout paddingTop="0" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="10"/>
					</s:layout>
					
					<!-- View Stack of (DE,WM,CR,CA) -->
					<mx:ViewStack id="mainStackID" width="100%" height="100%" creationPolicy="all">
						<pages:Home id="homeID"/>
						<pages:CA id="configAdminID"/>
						<pages:WM id="workManagerID"/>
						<pages:CR id="chartReportID"/>
						<pages:DE id="documentExplorerID"/>
					</mx:ViewStack>
					<!-- View Stack of (DE,WM,CR,CA) -->
					
				</s:BorderContainer>
				
			</s:BorderContainer>
			<!--##### End stage #####-->
			
			<s:Spacer height="5"/>
			
			<!--##### Common footer #####-->
			<s:BorderContainer width="100%" height="18" borderVisible="false" styleName="BackgroundBlue" >
				<s:layout>
					<s:HorizontalLayout paddingLeft="5" paddingRight="5" verticalAlign="middle"/>
				</s:layout>
				<s:HGroup width="100%" horizontalAlign="left">
					<s:Label text="This copy of Orion Xerver is licensed to: CustomerName"
							 styleName="ClientLabelLight"/>			
				</s:HGroup>
				<s:HGroup width="100%" horizontalAlign="center">
					<!--Commented out by David
					<s:Label text="Copyright 2014 Magsoft"
							 styleName="ClientLabelLight"/-->
				</s:HGroup>
				<!--s:HGroup width="100%" horizontalAlign="center">
				<s:Label text="Credits" 
				         styleName="ClientLabelLight"/				
				</s:HGroup-->
				<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle">
					<s:Button id="DashboardButton" label="DASHBOARD" enabled="false"
							  height="13"
							  styleName="DashBoardButton"
							  click="ToggleDashboardOpenClose(event)"/>	
				</s:HGroup>
			</s:BorderContainer>
			<!--##### End common footer #####-->
			
		</s:BorderContainer>
	</mx:Canvas>
	
</s:Application>