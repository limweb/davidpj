<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:ascomponent="th.co.shopsthai.ascomponent.*" 
		 width="100%" height="100%" 
		 creationComplete="init()" 
		 >
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flex.utils.spark.resize.ResizableComboBoxSkin;
			
			import mx.binding.utils.BindingUtils;
			import mx.core.FlexGlobals;
			import mx.core.IUIComponent;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			import mx.utils.ObjectUtil;
			
			import spark.components.Button;
			import spark.components.ComboBox;
			import spark.layouts.HorizontalLayout;
			import spark.layouts.TileLayout;
			
			import th.co.shopsthai.ascomponent.rzmvasBroderContainer;
			import th.co.shopsthai.resize.rzmvasBroderContainerSkin;
			
			private var _currentTarget:UIComponent;
			
			
			public function init():void {
			
			}
			
			
			private function dragEnterHandler(event:DragEvent):void {
				DragManager.acceptDragDrop(event.currentTarget as IUIComponent);
			}
			
			
			
			private function dragDropHandler(event:DragEvent):void {
				
				if(event.dragSource.hasFormat('NEW')){
					
					if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'BOX'		){
						//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
//						br.layout = new VerticalLayout(); 
						br.id = 'BOX' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						event.currentTarget.addElement(br);
						br.MV = true;
						br.RR = true;
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'PANEL'		){
						//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
//						br.layout = new VerticalLayout(); 
						br.id = 'PANEL' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						event.currentTarget.addElement(br);
						br.MV = true;
						br.RR = true;
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'TBBOX'		){
						//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
//						br.layout = new VerticalLayout(); 
						br.id = 'TBBOX' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						event.currentTarget.addElement(br);
						br.MV = true;
						br.RR = true;
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
						
					} else	if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'VBOX'		){
							//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
							var br:rzmvasBroderContainer = new rzmvasBroderContainer();
							br.layout = new VerticalLayout(); 
							br.id = 'VBOX' + FlexGlobals.topLevelApplication.getIdx;
							br.setStyle('skinClass',rzmvasBroderContainerSkin);
							event.currentTarget.addElement(br);
							br.MV = true;
							br.RR = true;
							br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
							br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
							br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
							br.x = event.currentTarget.x;
							br.y = event.currentTarget.y;
							//						acContainer.addItem(br);
						} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'VPANEL'		){
							//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
							var br:rzmvasBroderContainer = new rzmvasBroderContainer();
							br.layout = new VerticalLayout(); 
							br.id = 'VPANEL' + FlexGlobals.topLevelApplication.getIdx;
							br.setStyle('skinClass',rzmvasBroderContainerSkin);
							event.currentTarget.addElement(br);
							br.MV = true;
							br.RR = true;
							br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
							br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
							br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
							br.x = event.currentTarget.x;
							br.y = event.currentTarget.y;
							//						acContainer.addItem(br);
						} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'VTBBOX'		){
							//					&& event.dragSource.dataForFormat('NEW') == 'NEW' 
							var br:rzmvasBroderContainer = new rzmvasBroderContainer();
							br.layout = new VerticalLayout(); 
							br.id = 'VTBBOX' + FlexGlobals.topLevelApplication.getIdx;
							br.setStyle('skinClass',rzmvasBroderContainerSkin);
							event.currentTarget.addElement(br);
							br.MV = true;
							br.RR = true;
							br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
							br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
							br.addEventListener(MouseEvent.ROLL_OVER,mouseRollOverHander);
							br.x = event.currentTarget.x;
							br.y = event.currentTarget.y;
							//						acContainer.addItem(br);
							
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'TILEBOX' ) {
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
						var ly:TileLayout = new TileLayout();
						ly.paddingBottom = 10;
						ly.paddingLeft = 10;
						ly.paddingTop = 10;
						ly.paddingRight = 10;
						
						br.id = 'TILEBOX' + FlexGlobals.topLevelApplication.getIdx;
						BindingUtils.bindProperty(br,'minWidth',ly,'columnWidth');
						
						
						
						br.minWidth = ly.columnWidth * ly.columnCount;
						br.minHeight = ly.rowHeight * ly.rowCount;
						br.layout = ly;
						br.MV = true;
						br.RR = true;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						event.currentTarget.addElement(br);
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
						
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'HBOX' ) {
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
						br.layout = new HorizontalLayout(); 
						br.id = 'HBOX' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						br.MV = true;
						br.RR = true;
						event.currentTarget.addElement(br);
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'HPANEL' ) {
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
						br.layout = new HorizontalLayout(); 
						br.id = 'HPANEL' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						br.MV = true;
						br.RR = true;
						event.currentTarget.addElement(br);
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'HTBBOX' ) {
						var br:rzmvasBroderContainer = new rzmvasBroderContainer();
						br.layout = new HorizontalLayout(); 
						br.id = 'HTBBOX' + FlexGlobals.topLevelApplication.getIdx;
						br.setStyle('skinClass',rzmvasBroderContainerSkin);
						br.MV = true;
						br.RR = true;
						event.currentTarget.addElement(br);
						br.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						br.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						br.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						br.x = event.currentTarget.x;
						br.y = event.currentTarget.y;
						//						acContainer.addItem(br);
						
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'rzBUTTON' ) {
						var bt:Button = new Button();
						bt.setStyle('skinClass',th.co.shopsthai.resize.rzmvButtonSkin);
						bt.id = 'btn' + FlexGlobals.topLevelApplication.getIdx;
						event.currentTarget.addElement(bt);
//						bt.addEventListener(MouseEvent.MOUSE_DOWN,select);
						//					bt.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						//					bt.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						//					bt.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						bt.x = event.currentTarget.x;
						bt.y = event.currentTarget.y;
						//						acContainer.addItem(bt);
						
					} else if(event.dragSource.hasFormat('cType') && event.dragSource.dataForFormat('cType') == 'rzCOMBO' ) {
						var cmb:ComboBox = new ComboBox();
						cmb.setStyle('skinClass',ResizableComboBoxSkin);
						cmb.id = 'cmb' + FlexGlobals.topLevelApplication.getIdx;
						event.currentTarget.addElement(cmb);
//						cmb.addEventListener(MouseEvent.MOUSE_DOWN,select);
						//					cmb.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler);
						//					cmb.addEventListener(DragEvent.DRAG_DROP,dragDropHandler);
						//					cmb.addEventListener(MouseEvent.MOUSE_OVER,mouseRollOverHander);
						cmb.x = event.currentTarget.x;
						cmb.y = event.currentTarget.y;
						//						acContainer.addItem(cmb);
						
					} 
					
					var i:int=0;
					var arr:Array = new Array();
					var o:Object;
					for(i=0;i< event.target.numElements;i++ ){
						o = new Object();
						if(Object(event.target.getElementAt(i)).id != id){
							trace('element at ',i,event.target.getElementAt(i).x,event.target.getElementAt(i).y);
							o.idx = i;
							o.x = event.target.getElementAt(i).x;
							o.y = event.target.getElementAt(i).y;
							o.id = Object(event.target.getElementAt(i)).id;
						} else {
							o.idx = i;
							o.x = event.localX;
							o.y = event.localY;
							o.id = id;
						}
						arr.push(o);
					}
					
					arr.sortOn(['y'],Array.NUMERIC);
					trace('arr',ObjectUtil.toString(arr));
					
					var n:uint = 0;
					for each (var item:Object in arr) 
					{
						if(item.id == id ){
							trace(n,item.id);
							event.target.setElementIndex(event.target.getElementAt(item.idx),n);
							break;
						}
						n++;
					}
					
				} else {
					
					if(event.dragSource.hasFormat('cType')){
						trace('aaa');
						var data:* = event.dragSource.dataForFormat('item');
						trace('data.id',data.id);
						event.currentTarget.addElement(data);
						
						var i:int=0;
						var arr:Array = new Array();
						var o:Object;
						for(i=0;i< event.target.numElements;i++ ){
							o = new Object();
							if(Object(event.target.getElementAt(i)).id != id){
								trace('element at ',i,event.target.getElementAt(i).x,event.target.getElementAt(i).y);
								o.idx = i;
								o.x = event.target.getElementAt(i).x;
								o.y = event.target.getElementAt(i).y;
								o.id = Object(event.target.getElementAt(i)).id;
							} else {
								o.idx = i;
								o.x = event.localX;
								o.y = event.localY;
								o.id = id;
							}
							arr.push(o);
						}
						
						arr.sortOn(['y'],Array.NUMERIC);
						trace('arr',ObjectUtil.toString(arr));
						
						var n:uint = 0;
						for each (var item:Object in arr) 
						{
							if(item.id == id ){
								trace(n,item.id);
								event.target.setElementIndex(event.target.getElementAt(item.idx),n);
								break;
							}
							n++;
						}
						event.target.layout = new VerticalLayout();
					}
				}
			}    
			
			protected function mouseRollOverHander(event:MouseEvent):void
			{
				trace('mouve over horver');
			}
			
			protected function mainParent_dragOverHandler(event:DragEvent):void
			{
				trace('local xy', event.localX,":",event.localY);
				
			}
		]]>
	</fx:Script>
	<mx:VBox top="0" width="100%" height="100%" horizontalCenter="0">
		<mx:VBox id="frmMainID" width="100%" height="100%" borderColor="black" borderStyle="solid"
				 verticalGap="0">
			<mx:VBox id="frmTitleBox" width="100%" height="20" backgroundColor="blue"
					 horizontalAlign="center" verticalAlign="middle">
				<mx:Text text="form Title Label" id="lblfrmTitle" />
			</mx:VBox>
			<mx:VBox id="frmSub" width="100%" height="20" backgroundColor="yellow">
				<mx:Text text="form Title Label" id="lblfrmSubTitle" />
			</mx:VBox>
			<ascomponent:rzmvasBroderContainer id="mainParent"  backgroundAlpha="1" width="100%" height="100%"
											   dragEnter="dragEnterHandler(event);"  
											   dragDrop="dragDropHandler(event);"
											   dragOver="mainParent_dragOverHandler(event)"
											   mouseMove="mouseRollOverHander(event)"
											   skinClass="th.co.shopsthai.resize.rzmvasBroderContainerSkin"
											   backgroundColor="#565DEB" borderColor="#f1f1f1" horizontalCenter="0">
				<ascomponent:layout>
					<s:VerticalLayout   paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"/>
				</ascomponent:layout>
			</ascomponent:rzmvasBroderContainer>	
			</mx:VBox>
	</mx:VBox>
</s:Group>
