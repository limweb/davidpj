<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:layouts="org.flexlayouts.layouts.*"
			   xmlns:component="component.*"
			   xmlns:ns1="flexScript.*"
			   width="100%" height="100%"
			   creationComplete="SetDefaults(); init()">
	
	<fx:Style source="main.css"/>
	
	<fx:Declarations>
		<s:ArrayCollection id="Foils_SmallPlate_AC">
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="97.64" height="25.25" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="Foils_MediumPlate_AC">
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="134.51" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="Foils_LargePlate_AC">
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="174.87" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="Foils_HousePlate_AC">
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlackFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/BlackFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/WhiteFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/WhiteFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/BlueFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/BlueFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GoldFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/GoldFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/GreenFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/GreenFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/PinkFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/PinkFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RedFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/RedFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/SilverFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/SilverFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36" fillMode="scale" scaleMode="stretch" source="assets/foils/RainbowFoilSwatch.jpg" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="58.29" height="38" fillMode="scale" scaleMode="stretch" source="assets/foils/houseplate/RainbowFoilPlate.png" 
					 click="SelectFoilGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="Symbols_AC">  <!--Only unlicensed symbols-->
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Basketball.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="27.36" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BeerGlass.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bird.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Boat.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bowling.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="37.24" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bus.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="24.7" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cannabis.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="23.94" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cat.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36.1" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Crown.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/DartBoard.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="25.84" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dog.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36.1" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dolphin.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dragon.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="26.6" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Elephant.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="26.20" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargeEuroSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="11.02" height="7.6" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallEuroSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FerrisWheel.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.42" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Football.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="30.4" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Frame.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Helicopter.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="41.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Hockey.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="25.84" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horse.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="26.6" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horseshoe.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>				
			<s:Image width="26.6" height="22.8" fillMode="scale" scaleMode="stretch" source="assets/symbols/LargeHeart.png"
					 horizontalCenter="5" verticalCenter="5"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallHeart.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LightningBot.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="35.72" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Left.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="35.72" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Right.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MiddleFinger.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle2.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="32.3" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mouse.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="27.74" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MusicalNotes.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="17.48" height="13.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pacifier.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="24.7" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PalmTree.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PeaceSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pistol.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rabbit.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rings.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SantaClaus.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Skull&amp;Crossbones.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmileyFace.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Soccer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="17.48" height="15.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Star.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallTelephone.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="26.6" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/TennisRacket.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="30.4" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Tractor.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Turkey.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Windsurfer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="AllSymbols_AC">  <!--Including licensed symbols-->
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Audi.png" 
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BartSimpson.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Basketball.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="27.36" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BeerGlass.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BerlinBears.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BettyBoop.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bird.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/BMW.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Boat.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bowling.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="37.24" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Bus.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="24.7" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cannabis.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="23.94" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Cat.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36.1" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Crown.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/DartBoard.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="25.84" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dog.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="36.1" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dolphin.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Dragon.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="26.6" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Elephant.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="26.20" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargeEuroSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="11.02" height="7.6" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallEuroSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FerrisWheel.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.42" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Football.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Ford.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/FormulaOne.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="30.4" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Frame.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Helicopter.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/HelloKitty.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="41.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Hockey.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="25.84" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horse.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="26.6" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Horseshoe.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>				
			<s:Image width="26.6" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LargeHeart.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallHeart.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="20.9" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LightningBot.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="35.72" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Left.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="35.72" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/LKW_Right.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MAN.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mercedes.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="22.8" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MiddleFinger.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Motorcycle2.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="32.3" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Mouse.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="27.74" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/MusicalNotes.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Opel.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="17.48" height="13.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pacifier.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="24.7" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PalmTree.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/PeaceSign.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Peugot.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="32.3" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Pistol.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Playboy.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rabbit.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="24.7" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Rings.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Scania.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SantaClaus.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SEAT.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="34.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Skull&amp;Crossbones.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmileyFace.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="30.4" height="28.5" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Soccer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SpongeBob.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="17.48" height="15.2" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Star.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/SmallTelephone.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="26.6" height="22.8" fillMode="scale" scaleMode="letterbox" source="assets/symbols/TennisRacket.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="30.4" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Tractor.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="20.9" height="19" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Turkey.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Volkswagen.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/Windsurfer.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
			<s:Image width="38" height="38" fillMode="scale" scaleMode="letterbox" source="assets/symbols/WinnieThePooh.png"
					 click="SelectSymbolGalleryImage(event); CloseGallery(event);"/>
		</s:ArrayCollection>
		
	</fx:Declarations>	
	<fx:Script>
		<![CDATA[
			// !		
			import flash.utils.getQualifiedClassName;
			
			import mx.core.UIComponent;
			
			import spark.core.IGraphicElement;
			
			import flashx.textLayout.operations.RedoOperation;
			
			import utility.TexturedText;
			
			[Bindable] private var PlateReduction:Number = .24; //% reduction from actual plate size to radio button'ed plates
			
			private var Debugging:Boolean = false;
			
			import component.LargePreview;
			import flash.net.FileReference;
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import spark.layouts.*;
			import spark.layouts.supportClasses.LayoutBase;
			
			//Non-Preview constants
			public static const LargePlateOuterWidth:uint = 520;
			public static const LargePlateOuterHeight:uint = 113;
			public static const LargePlateInnerWidth:uint = 505
			public static const LargePlateInnerHeight:uint = 100;	
			public static const MediumPlateOuterWidth:uint = 400;
			public static const MediumPlateOuterHeight:uint = 113;	
			public static const MediumPlateInnerWidth:uint = 385;
			public static const MediumPlateInnerHeight:uint = 100;	
			public static const SmallPlateOuterWidth:uint = 290;
			public static const SmallPlateOuterHeight:uint = 75;
			public static const SmallPlateInnerWidth:uint = 278
			public static const SmallPlateInnerHeight:uint = 64;
			public static const HousePlateOuterWidth:uint = 173.33;
			public static const HousePlateOuterHeight:uint = 113;
			public static const HousePlateInnerWidth:uint = 168.33;
			public static const HousePlateInnerHeight:uint = 100;
			
			public static const DateWidth:int = 36;
			public static const DateHeight:int = 82;
			
			public static const LargeFlagWidth:int = 45;
			public static const LargeFlagHeight:int = 97;
			public static const SmallFlagWidth:int = 22;
			public static const SmallFlagHeight:int = 50;

			public static const CharacterButtonWidth:int = 26;
			public static const CharacterButtonHeight:int = 37;
			public static const LargeCharacterWidth:int = 57;
			public static const LargeCharacterHeight:int = 77.5;
			public static const MediumCharacterWidth:int = 31;
			public static const MediumCharacterHeight:int = 58;
			public static const SmallCharacterWidth:int = 30;
			public static const SmallCharacterHeight:int = 42;
			
			public static const VerticalScrollbarWidth:int = 16;
			
			[Embed(source="assets/down_triangle.png")]
			public static const DownTriangle:Class;
			
			[Embed(source="assets/switch/CX1_NX2.png")]
			public static const CX1_NX2:Class;
			
			[Embed(source="assets/switch/CX1_NX2A.png")]
			public static const CX1_NX2A:Class;
			
			[Embed(source="assets/switch/CX1A_NX2.png")]
			public static const CX1A_NX2:Class;
			
			[Embed(source="assets/switch/CX1A_NX2A.png")]
			public static const CX1A_NX2A:Class;
			
			[Embed(source="assets/switch/SPAN_CX1A_NX1B.png")]
			public static const CX1A_NX1B:Class;
			
			[Embed(source="assets/switch/CX1B_NX1A.png")]
			public static const CX1B_NX1A:Class;
			
			[Embed(source="assets/switch/CX1B_NX1A_SPAN.png")]
			public static const CX1B_NX1A_SPAN:Class;
			
			[Embed(source="assets/switch/SPAN_CX1B_NX1A.png")]
			public static const SPAN_CX1B_NX1A:Class;
			
			[Embed(source="assets/switch/CX2_NX1.png")]
			public static const CX2_NX1:Class;
			
			[Embed(source="assets/switch/CX2_NX1B.png")]
			public static const CX2_NX1B:Class;
			
			[Embed(source="assets/switch/CX2A_NX2B.png")]
			public static const CX2A_NX2B:Class;
			
			[Embed(source="assets/switch/CX2A_NX2B_SPAN.png")]
			public static const CX2A_NX2B_SPAN:Class;
			
			[Embed(source="assets/switch/CX2B_NX1.png")]
			public static const CX2B_NX1:Class;
			
			[Embed(source="assets/switch/CX2B_NX1B.png")]
			public static const CX2B_NX1B:Class;
			
			[Bindable] private var PlateSize:String;
			[Bindable] private var PlateOuterWidth:uint;
			[Bindable] private var PlateOuterHeight:uint;
			[Bindable] private var PlateInnerWidth:uint;
			[Bindable] private var PlateInnerHeight:uint;
			[Bindable] private var PlateName:String;
			[Bindable] private var PlateColor:uint;
			[Bindable] private var PlateIsImage:Boolean;
			[Bindable] private var SelectedPlateImage:Object;
			private var PlateIsMetallic:Boolean;
			
			[Bindable] private var CurrentFoilName:String;
			[Bindable] private var LastFoilName:String;
			[Bindable] private var SelectedFoilBorderImage:Object;
			[Bindable] private var SelectedFoilSwatchImage:Object;
			[Bindable] private var FoilGalleryListHorizontalGap:Number;
			
			[Bindable] private var Date1MaxValue:Number;
			[Bindable] private var Date2MaxValue:Number;
			[Bindable] private var Date1ToolTip:String;
			[Bindable] private var Date2ToolTip:String;
			[Bindable] private var Date3ToolTip:String;
			[Bindable] private var SelectedDate1:String;
			[Bindable] private var SelectedDate2:String;
			[Bindable] private var SelectedDate3:String;
			private var DateCount:int;
			
			[Bindable] private var FlagSize:String;
			[Bindable] private var FlagWidth:int;
			[Bindable] private var FlagHeight:int;
			[Bindable] private var SelectedFlag:Object;
			private var FlagCountry:String;
			private var FlagCount:uint;
			
			[Bindable] private var SelectedSymbol:Object;
			[Bindable] private var SymbolSize:String;
			private var SymbolWidth:Number;
			[Bindable] private var CenterSymbol:Boolean = false; //true means there is a center symbol
			private var TallSymbolCount:int;
			private var ShortSymbolCount:int;
			
			[Bindable] private var Holes:String;
			[Bindable] private var SelectedHoles:Object;
			private var HoleCount:int;
			private var CupCount:int;
			
			[Bindable] private var CharacterFontSize:int;
			[Bindable] private var CharacterSize:String;
			[Bindable] private var CharacterWidth:int;
			[Bindable] private var CharacterHeight:int;
			
			[Bindable] public var SelectedCharacter:String;
			private var ElementType:String;
			[Bindable] private var vgap:int = 5;
			
			private var CharactersAdded:int = 0;
			private var X1_LineCount:int;
			private var X2_LineCount:int;
			private var LeftLoad:int;
			private var RightLoad:int;
			private var CurrentLine:String;
			private var CurrentBoxColor:uint;
			private var CurrentBox:String;
			private var TargetBox:String;
			private var LastBox:String;
			private var NextBox:String;
			
			private var X1A_Index:int = 1;
			private var X1B_Index:int = 1;
			private var X2A_Index:int = 1;
			private var X2B_Index:int = 1;
			
			[Bindable] private var OutlineColor:uint;
			[Bindable] private var CurrentOutlineAlpha:int;
			
			[Bindable] private var Price:int;
			[Bindable] private var DisplayPrice:String;
			[Bindable] private var ac:ArrayCollection;
			[Bindable] private var PreviewElementsAC:ArrayCollection;
			
			private var StackAction:Array = new Array();
			
			private function SetDefaults():void
			{
				PlateSize = 'Large';
				SetPlateSize();
				
				//SelectedPlateImage = 'assets/plates/DarkYellow.jpg';
				PlateIsImage = false;
				PlateColor = 0xffffff; //white 0xffffff
				SetMiniPlatePlate();
				SetPreviewPlate();
				
				SelectedFoilBorderImage = 'assets/foils/BlackFoilPlate.png';
				SelectedFoilSwatchImage = 'assets/foils/BlackFoilSwatch.jpg';
				CurrentFoilName = 'BlackFoil';
			//	LastFoilName = CurrentFoilName;
				
				Date1ToolTip="Click on the arrows to set the 2-digit day of the month." +
					"Once the day, month, and year have been set, click the 'L' or 'R' button to place the date";
				Date2ToolTip="Click on the arrows to set the 2-digit month of the year." +
					"Once the day, month, and year have been set, click the 'L' or 'R' button to place the date";
				Date3ToolTip="Click on the arrows to set the 2-digit year." +
					"Once the day, month, and year have been set, click the 'L' or 'R' button to place the date"
				Date1MaxValue = 31;
				Date2MaxValue = 12;
				DateCount = 0;
				
				SetDefaultFlagSize();
				SelectedFlag = 'assets/flags/D.jpg';
				FlagCount = 0;
				
				SelectedSymbol = 'assets/symbols/LargeHeart.png';
				TallSymbolCount = 0;
				ShortSymbolCount = 0;
				
				Holes = 'NoneNone';
				SelectedHoles = 'assets/holes/NoneNone.jpg';
				HoleCount = 0;
				CupCount = 0;
				SetPreviewHoles();
				
				SetDefaultCharacterSize();
				
				LeftLoad = 0;
				RightLoad = 0;
				X1_LineCount = 1;
				X2_LineCount = 0;
				CurrentLine = 'Line 1';
				CurrentBox = 'X1A';
				CurrentBoxColor = 0xff0000; //yellow = 0xffff00
				OutlineColor = 0x00ced1; //sky blue
				CurrentOutlineAlpha = 1;
				
				Outlines();
			}
			
			private function init():void
			{
				var img:Image = new Image();
				img.source = SelectedSymbol;
				img.height = 26.6;
				img.width = 22.8;
				//var bc:BorderContainer = new BorderContainer();
				//bc.setStyle('borderVisible',false);
				//bc.addElement(img as Image);
				
				
				SelectedFoilSwatchImage;
				var imgTxt:Image = new Image();
				imgTxt.source = String(SelectedFoilSwatchImage);
				imgTxt.width = img.width;
				imgTxt.height = img.height;
				imgTxt.fillMode = 'scale';
				imgTxt.scaleMode = 'letterbox';
				var bc:BorderContainer = (new TexturedText).getTextMaskImage(imgTxt, img);
				bc.id = img.source as String;
				bc.setStyle('borderVisible',false);
				//bc.addElement(img as Image);
				
				var bclayout:HorizontalLayout = new HorizontalLayout();
				bclayout.horizontalAlign = 'center';
				bclayout.verticalAlign = 'bottom';
				bc.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
				bc.addEventListener(MouseEvent.CLICK, CloseGallery);
				//ac.addItem(bc);
				
				
				SelectedSymbolFrame.addElement(bc);
				
				PreviewElementsAC = new ArrayCollection();
				
			//	PreviewElementsAC.addItem(bc);
				
				HideShow();
				
				SetNextBoxAndSwitchButtonImage();
				
				Outlines();
			}
			
			private function TextureSymbolGallery():void
			{
				if (CurrentFoilName != LastFoilName)
				{
					var imgTxt:Image;
					var imgTmp:Image;
					var imgSrc:Image;
					ac = new ArrayCollection();
					id = 'TexturedSymbols_AC';
					var tt:TexturedText = new TexturedText();
					
					for (var i:int=0; i < Symbols_AC.length; i++)
					{
						imgTmp = Symbols_AC.getItemAt(i) as Image;	
						if (String(imgTmp.source) == "assets/symbols/Football.png")
						{
							trace("");
						}
						SelectedFoilSwatchImage;
						imgTxt = new Image();
						imgTxt.source = String(SelectedFoilSwatchImage);
						imgTxt.width = imgTmp.width;
						imgTxt.height = imgTmp.height;
						imgTxt.fillMode = 'scale';
						imgTxt.scaleMode = 'letterbox';
						var bc:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
						bc.id = imgTmp.source as String;
						bc.width = 42;
						bc.height = 42;
						var bclayout:HorizontalLayout = new HorizontalLayout();
						bclayout.horizontalAlign = 'center';
						bclayout.verticalAlign = 'bottom';
						bclayout.clipAndEnableScrolling = false;
						bc.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
						bc.addEventListener(MouseEvent.CLICK, CloseGallery);
						ac.addItem(bc);
					}
					
					SymbolGalleryList.dataProvider = ac;
				}
				else
				{
					SymbolGalleryList.dataProvider = Symbols_AC;
				}
			}
			
			private function TextureFoilGallery():void
			{
				var imgTxt:Image;
				var imgTmp:Image;
				var imgSrc:Image;
				ac = new ArrayCollection();
				var tt:TexturedText = new TexturedText();
				for (var i:int=0; i < FoilGalleryList.dataProvider.length; i++)
				{
					//even
					if (i%2 == 0)
					{
						imgTmp = FoilGalleryList.dataProvider.getItemAt(i) as Image;
						imgTxt = new Image();
						imgTxt.source = imgTmp.source;
						imgTxt.width = imgTmp.width;
						imgTxt.height = imgTmp.height;
						imgTxt.fillMode = imgTmp.fillMode;
						imgTxt.scaleMode = imgTmp.scaleMode;
						imgTxt.addEventListener(MouseEvent.CLICK, SelectFoilGalleryImage);
						imgTxt.addEventListener(MouseEvent.CLICK, CloseGallery);
						
						//click="SelectFoilGalleryImage(event); CloseGallery(event);"
						ac.addItem(imgTxt);
					}
						//odd
					else
					{	
						imgTmp = FoilGalleryList.dataProvider.getItemAt(i) as Image;
						imgSrc = new Image();
						imgSrc.source = imgTmp.source;
						imgSrc.width = imgTmp.width;
						imgSrc.height = imgTmp.height;
						imgSrc.fillMode = imgTmp.fillMode;
						imgSrc.scaleMode = imgTmp.scaleMode;
						
						var imgTmp2:Image = new Image();
						imgTmp2.source = imgTxt.source;
						imgTmp2.width = imgSrc.width;
						imgTmp2.height = imgSrc.height;
						imgTmp2.fillMode = imgTxt.fillMode;
						imgTmp2.scaleMode = imgTxt.scaleMode;
						
						var bd:BorderContainer = tt.getTextMaskImage(imgTmp2, imgSrc);
						bd.addEventListener(MouseEvent.CLICK, SelectFoilGalleryImage);
						bd.addEventListener(MouseEvent.CLICK, CloseGallery);
						ac.addItem(bd);
					}
				}
				
				FoilGalleryList.dataProvider = ac;				
			}
			
			private function Galleries_changeHandler(event:IndexChangedEvent):void
			{
				/*
				0:SmallPlateGallery
				1:MediumPlateGallery
				2:LargePlateGallery
				3:HousePlateGallery
				4:FoilGallery
				5:HolesGallery
				6:FlagGallery
				7:SymbolGallery
				*/
				trace(event.newIndex);
				
				//0:SmallPlateGallery
				if (event.newIndex == 0)
				{
					
				}
				//1:MediumPlateGallery
				else if (event.newIndex == 1)
				{
					
				}
				//2:LargePlateGallery
				else if (event.newIndex == 2)
				{
					
				}
				//3:HousePlateGallery
				else if (event.newIndex == 3)
				{
					
				}
				//4:FoilGallery
				else if (event.newIndex == 4)
				{
					SetDataOpenFoilGallery();
					TextureFoilGallery();
				}
				//5:HolesGallery
				else if (event.newIndex == 5)
				{
					
				}
				//6:FlagGallery
				else if (event.newIndex == 6)
				{
					
				}
				//7:SymbolGallery
				else if (event.newIndex == 7)
				{
					TextureSymbolGallery();
				}
			}
			
			/*	protected function Galleries_changeHandler(event:IndexChangedEvent):void
			{
			// TODO Auto-generated method stub
			trace("change");
			var imgTxt:Image;
			var imgTmp:Image;
			var imgSrc:Image;
			ac = new ArrayCollection();
			var tt:TexturedText = new TexturedText();
			for (var i:int=0; i < foillist.length; i++)
			{
			//even
			if (i%2 == 0)
			{
			imgTmp = foillist.getItemAt(i) as Image;
			imgTxt = new Image();
			imgTxt.source = imgTmp.source;
			imgTxt.width = imgTmp.width;
			imgTxt.height = imgTmp.height;
			imgTxt.fillMode = imgTmp.fillMode;
			imgTxt.scaleMode = imgTmp.scaleMode;
			
			ac.addItem(imgTxt);
			}
			//odd
			else
			{	
			imgTmp = foillist.getItemAt(i) as Image;
			imgSrc = new Image();
			imgSrc.source = imgTmp.source;
			imgSrc.width = imgTmp.width;
			imgSrc.height = imgTmp.height;
			imgSrc.fillMode = imgTmp.fillMode;
			imgSrc.scaleMode = imgTmp.scaleMode;
			
			var imgTmp2:Image = new Image();
			imgTmp2.source = imgTxt.source;
			imgTmp2.width = imgSrc.width;
			imgTmp2.height = imgSrc.height;
			imgTmp2.fillMode = imgTxt.fillMode;
			imgTmp2.scaleMode = imgTxt.scaleMode;
			
			ac.addItem(tt.getTextMaskImage(imgTmp2, imgSrc));
			}
			}
			FoilGalleryList.dataProvider = foillist;
			} */
			
			private function SetPlateSize():void
			{
				if (PlateSize == 'Large')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PlateOuterWidth = LargePlateOuterWidth;
					PlateOuterHeight = LargePlateOuterHeight;
					PlateInnerWidth = LargePlateInnerWidth;
					PlateInnerHeight = LargePlateInnerHeight;
				}
				else if (PlateSize == 'Medium')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateOuterWidth = MediumPlateOuterWidth;
					PlateOuterHeight = MediumPlateOuterHeight;
					PlateInnerWidth = MediumPlateInnerWidth;
					PlateInnerHeight = MediumPlateInnerHeight;
				}
				else if (PlateSize == 'Small')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateOuterWidth = SmallPlateOuterWidth;
					PlateOuterHeight = SmallPlateOuterHeight;
					PlateInnerWidth = SmallPlateInnerWidth;
					PlateInnerHeight = SmallPlateInnerHeight;
				}
				else if (PlateSize == 'House')
				{
					PreviewFrame.setStyle('borderVisible',false);
					PreviewFrame.setStyle('borderWeight',1);
					PreviewFrame.setStyle('cornerRadius',0);
					PlateOuterWidth = HousePlateOuterWidth;
					PlateOuterHeight = HousePlateOuterHeight;
					PlateInnerWidth = HousePlateInnerWidth;
					PlateInnerHeight = HousePlateInnerHeight;
				}
				
				CalculatePrice();
				
				EnableDisableControls();
			}
			
			private function EnableDisableControls():void
			{				
				if (PlateSize == 'Large')
				{					
					DateChooser.enabled = true;
					FlagChooser.enabled = true;
					SymbolChooser.enabled = true;
					LinesChooser1.visible = true;
					LinesChooser1.enabled = true;
					LinesChooser2.enabled = true;
					LargeCharacterRadioButton.enabled = true;
					MediumCharacterRadioButton.enabled = true;
					SmallCharacterRadioButton.enabled = true;
				}
				else if (PlateSize == 'Medium')
				{
					DateChooser.enabled = true;
					FlagChooser.enabled = true;
					SymbolChooser.enabled = true;
					LinesChooser1.visible = true;
					LinesChooser1.enabled = true;
					LinesChooser2.enabled = true;
					LargeCharacterRadioButton.enabled = true;
					MediumCharacterRadioButton.enabled = true;
					SmallCharacterRadioButton.enabled = true;
				}
				else if (PlateSize == 'Small')
				{
					DateChooser.enabled = false;
					FlagChooser.enabled = false;
					SymbolChooser.enabled = false;
					LinesChooser1.visible = false;
					LinesChooser1.enabled = false;
					LinesChooser2.enabled = false;
					LargeCharacterRadioButton.enabled = false;
					MediumCharacterRadioButton.enabled = false;
					SmallCharacterRadioButton.enabled = true;
				}
				else if (PlateSize == 'House')
				{
					DateChooser.enabled = false;
					FlagChooser.enabled = false;
					SymbolChooser.enabled = false;
					LinesChooser1.visible = true;
					LinesChooser1.enabled = true;
					LinesChooser2.enabled = true;
					LargeCharacterRadioButton.enabled = true;
					MediumCharacterRadioButton.enabled = true;
					SmallCharacterRadioButton.enabled = true;
				}
				
				if (((CurrentBox == 'X1A' || CurrentBox == 'X1B') && X1_LineCount == 2) || ((CurrentBox == 'X2A' || CurrentBox == 'X2B') && X2_LineCount == 2))
				{
					LargeCharacterRadioButton.enabled = false;
					MediumCharacterRadioButton.enabled = false;
					SmallCharacterRadioButton.enabled = true;
					AddSymbolToCurrentBoxButton.enabled = false;
				}
			}
			
			private function ChangePlateSize(event:MouseEvent,RequestedPlateSize:String):void
			{
				PlateSize = RequestedPlateSize;
				SetPlateSize();
			}
			
			private function SetMiniPlatePlate():void
			{
				if (PlateIsImage == true)
				{
					Plate_MiniPlateImageContainer.includeInLayout = true; Plate_MiniPlateImageContainer.visible = true;
					Plate_MiniPlateNonImageContainer.includeInLayout = false; Plate_MiniPlateNonImageContainer.visible = false;
				}
				else if (PlateIsImage == false)
				{
					Plate_MiniPlateImageContainer.includeInLayout = false; Plate_MiniPlateImageContainer.visible = false;
					Plate_MiniPlateNonImageContainer.includeInLayout = true; Plate_MiniPlateNonImageContainer.visible = true;
				}
			}
			
			// !!! Changing plate size may compel changing flag size
			private function SetFlagSize():void
			{
				if (FlagSize == 'Large')
				{
					FlagWidth = LargeFlagWidth;
					FlagHeight = LargeFlagHeight;
				}
				else if (FlagSize == 'Small')
				{
					FlagWidth = SmallFlagWidth;
					FlagHeight = SmallFlagHeight;
				}
			}
			
			//Set flag based on geolocation			
			private function SetDefaultFlagSize():void
			{
				if (PlateSize == 'Large' || PlateSize == 'Medium')
				{
					FlagSize = 'Large';
				}
				else
				{
					FlagSize = 'Small';
				}
				
				SetFlagSize();
			}
			
			private function SetDefaultCharacterSize():void
			{
				if (PlateSize == 'Large')
				{
					CharacterSize = 'Medium';
				}
				else if (PlateSize == 'Medium')
				{
					CharacterSize = 'Medium';
				}
				else if (PlateSize == 'Small' || PlateSize == 'House')
				{
					CharacterSize = 'Small';
				}
				
				SetCharacterDimensions();
			}

			// !!! Changing character size needs to change existing characters, and could run into trouble
			// !!! Changing plate size can compel changing character size
			private function SetCharacterSize(RequestedCharacterSize:String):void
			{
				CharacterSize = RequestedCharacterSize;
				
				if (CharacterSize == 'Large')
				{
					LargeCharacterRadioButton.selected = true;
				}
				else if (CharacterSize == 'Medium')
				{
					MediumCharacterRadioButton.selected = true;
				}
				else if (CharacterSize == 'Small')
				{
					SmallCharacterRadioButton.selected = true;
				}
				
				SetCharacterDimensions();
			}
			
			private function SetCharacterDimensions():void
			{
				if (CharacterSize == 'Large')
				{
					CharacterWidth = LargeCharacterWidth;
					CharacterHeight = LargeCharacterHeight;
					//CharacterFontSize = LargeCharacterFontSize;
				}
				else if (CharacterSize == 'Medium')
				{
					CharacterWidth = MediumCharacterWidth;
					CharacterHeight = MediumCharacterHeight;
					//CharacterFontSize = MediumCharacterFontSize;
				}
				else if (CharacterSize == 'Small')
				{
					CharacterWidth = SmallCharacterWidth;
					CharacterHeight = SmallCharacterHeight;
					//CharacterFontSize = SmallCharacterFontSize;
				}
			}
			
			private function SetPreviewPlate():void
			{
				if (PlateIsImage == true)
				{
					PreviewPlateImageContainer.includeInLayout = true; PreviewPlateImageContainer.visible = true;
					PreviewPlateNonImageContainer.includeInLayout = false; PreviewPlateNonImageContainer.visible = false;
				}
				else if (PlateIsImage == false)
				{
					PreviewPlateImageContainer.includeInLayout = false; PreviewPlateImageContainer.visible = false;
					PreviewPlateNonImageContainer.includeInLayout = true; PreviewPlateNonImageContainer.visible = true;	
				}
			}
			
			/*private function OpenGallery(event:MouseEvent,GalleryName:String):void 
			{
			Galleries.selectedChild == GalleryName;
			GalleryWindow.visible = true;
			}*/
			
			private function OpenPlateGallery(event:MouseEvent):void
			{
				if (PlateSize == 'Small')
				{
					Galleries.selectedChild = SmallPlateGallery;
					GalleryWindow.title = 'Small plate colors and patterns';
				}
				else if (PlateSize == 'Medium')
				{
					Galleries.selectedChild = MediumPlateGallery;
					GalleryWindow.title = 'Medium plate colors and patterns';
				}
				else if (PlateSize == 'Large')
				{
					Galleries.selectedChild = LargePlateGallery;
					GalleryWindow.title = 'Large plate colors and patterns';
				}
				else if (PlateSize == 'House')
				{
					Galleries.selectedChild = HousePlateGallery;
					GalleryWindow.title = 'House plate colors and patterns';
				}

				GalleryWindow.visible = true;
			}
			
			private function SelectPlateGalleryImage(event:MouseEvent,IsMetallic:Boolean):void 
			{
				PlateIsImage = true;
				SetMiniPlatePlate();
				SetPreviewPlate();
				
				var PlateGalleryImage:Image;
				PlateGalleryImage = event.currentTarget as Image;
				SelectedPlateImage = PlateGalleryImage as Image;
				var SelectedPlateImageSource:String = PlateGalleryImage.source as String;
				
				if (SelectedPlateImageSource.indexOf("solid") >= 0)
				{
					PlateIsMetallic = false;
				}
				else
				{
					PlateIsMetallic = true;
				}
			}
			
			private function SelectPlateGalleryNonImage(event:MouseEvent,PlateName:String):void 
			{
				PlateIsImage = false;
				SetMiniPlatePlate();
				SetPreviewPlate();
				
				if (PlateName == 'BlackPlate')
				{
					PlateColor = 0x000000;
				}
				else if (PlateName == 'WhitePlate')
				{
					PlateColor = 0xffffff;
				}
				else if (PlateName == 'LimeGreenPlate')
				{
					PlateColor = 0x00ff00;
				}
			}
			
			//Gap is reduced by 20px to account for list (left and right) padding
			private function SetDataOpenFoilGallery():void
			{
				if (PlateSize == 'Small')
				{
					FoilGalleryListHorizontalGap = (GalleryWindow.width - 38 - 60 - 97.64);
					FoilGalleryList.dataProvider = Foils_SmallPlate_AC;
					GalleryWindow.title = 'Small plate foil colors and patterns';
				}
				else if (PlateSize == 'Medium')
				{
					FoilGalleryListHorizontalGap = (GalleryWindow.width - 38 - 60 - 134.51);
					FoilGalleryList.dataProvider = Foils_MediumPlate_AC;
					GalleryWindow.title = 'Medium plate foil colors and patterns';
				}
				else if (PlateSize == 'Large')
				{
					FoilGalleryListHorizontalGap = (GalleryWindow.width - 38 - 60 - 174.87);
					FoilGalleryList.dataProvider = Foils_LargePlate_AC;
					GalleryWindow.title = 'Large plate foil colors and patterns';
				}
				else if (PlateSize == 'House')
				{
					FoilGalleryListHorizontalGap = (GalleryWindow.width - 38 - 60 - 58.29);
					FoilGalleryList.dataProvider = Foils_HousePlate_AC;
					GalleryWindow.title = 'House plate foil colors and patterns';
				}				
			}
			
			private function OpenFoilGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FoilGallery;
				/*
				if (PlateSize == 'Small')
				{
					FoilGalleryListHorizontalGap = 153;
					FoilGalleryList.dataProvider = Foils_SmallPlate_AC;
					GalleryWindow.title = 'Small plate foil colors and patterns';
				}
				else if (PlateSize == 'Medium')
				{
					FoilGalleryListHorizontalGap = 83;
					FoilGalleryList.dataProvider = Foils_MediumPlate_AC;
					GalleryWindow.title = 'Medium plate foil colors and patterns';
				}
				else if (PlateSize == 'Large')
				{
					FoilGalleryListHorizontalGap = 43;
					FoilGalleryList.dataProvider = Foils_LargePlate_AC;
					GalleryWindow.title = 'Large plate foil colors and patterns';
				}
				else if (PlateSize == 'House')
				{
					FoilGalleryListHorizontalGap = 159;
					FoilGalleryList.dataProvider = Foils_HousePlate_AC;
					GalleryWindow.title = 'House plate foil colors and patterns';
				}
				*/
				GalleryWindow.visible = true;
			}
			
			private function drawUISnapShot(target:UIComponent):Image
			{
				var UIBData:BitmapData = new BitmapData(target.width,target.height,true,0x00ffffff);
				var UIMatrix:Matrix = new Matrix();
				UIBData.draw(target, UIMatrix);
				            
				var img:Image = new Image();
				img.source= new Bitmap(UIBData);
				invalidateDisplayList();
				return img;
			}
			
			private function SelectFoilGalleryImage(event:MouseEvent):void 
			{	
				Foil_MiniPlateImageContainer.removeAllElements();
				PreviewBorderImageContainer.removeAllElements();
				
				var bc:BorderContainer = (event.currentTarget as BorderContainer);
				bc.percentWidth = 100;
				bc.percentHeight = 100;
				bc.setStyle('backgroundAlpha',0);	//Required for transparency of plate border
				
				var img:Image = drawUISnapShot(bc);
				img.percentHeight = 105; //was 105
				img.percentWidth = 105;  //was 105
				
				var img2:Image = drawUISnapShot(bc);
				img2.width = PlateOuterWidth;
				img2.height = PlateOuterHeight;
				img2.fillMode = 'scale';
				img2.scaleMode = 'stretch';
				
				Foil_MiniPlateImageContainer.addElement(img);
				PreviewBorderImageContainer.addElement(img2);
				
				var img3:Image = bc.getElementAt(0) as Image;
				SelectedFoilSwatchImage = img3.source;
				var SelectedFoilImageName:String = new String;
				SelectedFoilImageName = SelectedFoilSwatchImage as String;
				
				var FoilName:String;
				
				if (SelectedFoilImageName.indexOf("Black") >= 0)
				{
					FoilName = "BlackFoil";
				}
				else if (SelectedFoilImageName.indexOf("White") >= 0)
				{
					FoilName = "WhiteFoil";
				}
				else if (SelectedFoilImageName.indexOf("Blue") >= 0)
				{
					FoilName = "BlueFoil";
				}
				else if (SelectedFoilImageName.indexOf("Gold") >= 0)
				{
					FoilName = "GoldFoil";
				}
				else if (SelectedFoilImageName.indexOf("Green") >= 0)
				{
					FoilName = "GreenFoil";
				}
				else if (SelectedFoilImageName.indexOf("Pink") >= 0)
				{
					FoilName = "PinkFoil";
				}
				else if (SelectedFoilImageName.indexOf("Red") >= 0)
				{
					FoilName = "RedFoil";
				}
				else if (SelectedFoilImageName.indexOf("Silver") >= 0)
				{
					FoilName = "SilverFoil";
				}
				else if (SelectedFoilImageName.indexOf("Rainbow") >= 0)
				{
					FoilName = "RainbowFoil";
				}
				
				CurrentFoilName = FoilName;
				
				if (FoilName != LastFoilName)
				{
					CurrentFoilName = FoilName;
					
					ChangePreviewElementsFoil();		
				}
				
				var base:BorderContainer = SelectedSymbolFrame.getElementAt(0) as BorderContainer;
				if (base.numElements > 1)
				{
					var imgTmp1:Image = base.getElementAt(0) as Image;
					var imgTmp2:Image = base.getElementAt(1) as Image;
					
					var imgCpy1:Image = new Image();
					imgCpy1.source = String(SelectedFoilSwatchImage);
					imgCpy1.width = imgTmp1.width;
					imgCpy1.height = imgTmp1.height;
					imgCpy1.fillMode = 'scale';
					imgCpy1.scaleMode = 'letterbox';
					var imgCpy2:Image = new Image();
					imgCpy2.source = imgTmp2.source;
					imgCpy2.width = imgTmp2.width;
					imgCpy2.height = imgTmp2.height;
					imgCpy2.fillMode = 'scale';
					imgCpy2.scaleMode = 'letterbox';
					var tt:TexturedText = new TexturedText();
					var bcCpy:BorderContainer = tt.getTextMaskImage(imgCpy1, imgCpy2);
					bcCpy.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
					bcCpy.addEventListener(MouseEvent.CLICK, CloseGallery);
					SelectedSymbolFrame.removeAllElements();
					SelectedSymbolFrame.addElement(bcCpy);					
				}
				else
				{
					var imgTmp4:Object = base.getElementAt(0);
				}
				/*
				var imgTmp1:Image = (event.currentTarget as BorderContainer).getElementAt(0) as Image;
				var imgTmp2:Image = (event.currentTarget as BorderContainer).getElementAt(1) as Image;
				
				var imgCpy1:Image = new Image();
				imgCpy1.source = imgTmp1.source;
				imgCpy1.width = imgTmp1.width;
				imgCpy1.height = imgTmp1.height;
				imgCpy1.fillMode = 'scale';
				imgCpy1.scaleMode = 'letterbox';
				var imgCpy2:Image = new Image();
				imgCpy2.source = imgTmp2.source;
				imgCpy2.width = imgTmp2.width;
				imgCpy2.height = imgTmp2.height;
				imgCpy2.fillMode = 'scale';
				imgCpy2.scaleMode = 'letterbox';
				var tt:TexturedText = new TexturedText();
				var bcCpy:BorderContainer = tt.getTextMaskImage(imgCpy1, imgCpy2);
				bcCpy.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
				bcCpy.addEventListener(MouseEvent.CLICK, CloseGallery);
				SelectedSymbolFrame.addElement(bcCpy);
				*/
			}
			
			private function ChangePreviewElementsFoil():void
			{
				for (var i:int=0; i < PreviewElementsAC.length; i++)
				{
					var imgTmp:Image = PreviewElementsAC.getItemAt(i) as Image;
					var array1:Array = String(imgTmp.source).split("_");
					var array2:Array = String(SelectedFoilSwatchImage).split(".");
					
					if (array1.length > 1)
					{
						imgTmp.source = String(array2[0]) + "_" + String(array1[1]);
					}
					else if (array1.length == 1)
					{
						imgTmp.source = String(SelectedFoilSwatchImage);
					}
					else
					{
						
					}
				}	
			}

			private function OpenFlagGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = FlagGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'EU country plate stickers';
			}
			
			private function SelectFlagGalleryImage(event:MouseEvent,Country:String):void 
			{
				var FlagGalleryImage:Image;
				FlagGalleryImage = event.currentTarget as Image;
				SelectedFlag = FlagGalleryImage;
				FlagCountry = Country;
			}
			
			private function OpenSymbolGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Symbols';
			}
			
			private function SelectSymbolGalleryImage(event:MouseEvent):void 
			{
				var SelectedSymbolImageName:String;
				
				SelectedSymbolFrame.removeAllElements();
				
				if(flash.utils.getQualifiedClassName(event.currentTarget) == "spark.components::BorderContainer")
				{
					SelectedSymbolImageName = event.currentTarget.id;
					
					SelectedSymbol = drawUISnapShot(event.currentTarget as BorderContainer);
					
					/*
					imgTmp = Symbols_AC.getItemAt(i) as Image;	
					SelectedFoilSwatchImage;
					imgTxt = new Image();
					imgTxt.source = String(SelectedFoilSwatchImage);
					imgTxt.width = imgTmp.width;
					imgTxt.height = imgTmp.height;
					imgTxt.fillMode = 'scale';
					imgTxt.scaleMode = 'letterbox';
					var bc:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
					bc.id = imgTmp.source as String;
					bc.width = 42;
					bc.height = 42;
					var bclayout:HorizontalLayout = new HorizontalLayout();
					bclayout.horizontalAlign = 'center';
					bclayout.verticalAlign = 'bottom';
					bc.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
					bc.addEventListener(MouseEvent.CLICK, CloseGallery);
					ac.addItem(bc);
					*/
					
					var imgTmp1:Image = (event.currentTarget as BorderContainer).getElementAt(0) as Image;
					var imgTmp2:Image = (event.currentTarget as BorderContainer).getElementAt(1) as Image;
					
					var imgCpy1:Image = new Image();
					imgCpy1.source = imgTmp1.source;
					imgCpy1.width = imgTmp1.width;
					imgCpy1.height = imgTmp1.height;
					imgCpy1.fillMode = 'scale';
					imgCpy1.scaleMode = 'letterbox';
					var imgCpy2:Image = new Image();
					imgCpy2.source = imgTmp2.source;
					imgCpy2.width = imgTmp2.width;
					imgCpy2.height = imgTmp2.height;
					imgCpy2.fillMode = 'scale';
					imgCpy2.scaleMode = 'letterbox';
					var tt:TexturedText = new TexturedText();
					var bcCpy:BorderContainer = tt.getTextMaskImage(imgCpy1, imgCpy2);
					bcCpy.addEventListener(MouseEvent.CLICK, SelectSymbolGalleryImage);
					bcCpy.addEventListener(MouseEvent.CLICK, CloseGallery);
					
					//SelectedSymbolFrame.addElement(event.currentTarget as BorderContainer);
					SelectedSymbolFrame.addElement(bcCpy);
									
				//	PreviewElementsAC.addItem(event.currentTarget as BorderContainer);
				}
				else
				{
					var img:Image = new Image();
					img = event.currentTarget as Image;
					SelectedSymbolImageName = img.source as String;
					
					var bc:BorderContainer = new BorderContainer();
					bc.setStyle('borderVisible',false);
					bc.addElement(event.currentTarget as Image);
					SelectedSymbolFrame.addElement(bc);				
					
				//	PreviewElementsAC.addItem(bc);
				}
				
				if (SelectedSymbolImageName != null)
				{				
					if (SelectedSymbolImageName.indexOf("SmallEuroSign") >= 0)
					{
						SymbolSize = 'Short';
					}
					else if (SelectedSymbolImageName.indexOf("SmallTelephone") >= 0)
					{
						SymbolSize = 'Short';
					}
					else
					{
						SymbolSize = 'Tall';
					}				
				}
			}
			
			private function OpenHolesGallery(event:MouseEvent):void
			{
				Galleries.selectedChild = HolesGallery;
				GalleryWindow.visible = true;
				GalleryWindow.title = 'Hole and suction cup options';
			}		
			
			private function SelectHolesGalleryImage(event:MouseEvent):void 
			{
				var HolesGalleryImage:Image;
				HolesGalleryImage = event.currentTarget as Image;
				SelectedHoles = HolesGalleryImage;
				var SelectedHolesSource:String;
				SelectedHolesSource = HolesGalleryImage.source as String;
				
				if (SelectedHolesSource.indexOf("FourCups") >= 0)
				{
					Holes = 'FourCups'
				}
				else if (SelectedHolesSource.indexOf("TopCups") >= 0)
				{
					Holes = 'TopCups';
				}
				else if (SelectedHolesSource.indexOf("MiddleCups") >= 0)
				{
					Holes = 'MiddleCups';
				}
				else if (SelectedHolesSource.indexOf("BottomCups") >= 0)
				{
					Holes = 'BottomCups';
				}
				else if (SelectedHolesSource.indexOf("FourHoles") >= 0)
				{
					Holes = 'FourHoles';
				}
				else if (SelectedHolesSource.indexOf("TopHoles") >= 0)
				{
					Holes = 'TOpHoles';
				}
				else if (SelectedHolesSource.indexOf("MiddleHoles") >= 0)
				{
					Holes = 'MiddleHoles';
				}
				else if (SelectedHolesSource.indexOf("BottomHoles") >= 0)
				{
					Holes = 'BottomHoles';
				}
				else if (SelectedHolesSource.indexOf("NoneNone") >= 0)
				{
					Holes = 'NoneNone';
				}
				
				SetPreviewHoles();
			}
			
			
			private function SetPreviewHoles():void
			{
				if (Holes == 'FourCups')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = true;
					BottomRightCup.visible = true;
					HoleCount = 4;
					CupCount = 4;
				}
				else if (Holes == 'TopCups')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = true;
					TopRightCup.visible = true;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'MiddleCups')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = true;
					MiddleRightCup.visible = true;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'BottomCups')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 2;
				}
				else if (Holes == 'FourHoles')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'TopHoles')
				{
					TopLeftHole.visible = true;
					TopRightHole.visible = true;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'MiddleHoles')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = true;
					MiddleRightHole.visible = true;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'BottomHoles')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = true;
					BottomRightHole.visible = true;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 2;
					CupCount = 0;
				}
				else if (Holes == 'NoneNone')
				{
					TopLeftHole.visible = false;
					TopRightHole.visible = false;
					MiddleLeftHole.visible = false;
					MiddleRightHole.visible = false;
					BottomLeftHole.visible = false;
					BottomRightHole.visible = false;
					TopLeftCup.visible = false;
					TopRightCup.visible = false;
					MiddleLeftCup.visible = false;
					MiddleRightCup.visible = false;
					BottomLeftCup.visible = false;
					BottomRightCup.visible = false;
					HoleCount = 0;
					CupCount = 0;
				}
				
				CalculatePrice();
			}
			
			private function CloseGallery(event:MouseEvent):void 
			{
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			private function CloseGallery_():void 
			{
				//Galleries.selectedChild = SymbolGallery;
				GalleryWindow.visible=false;
			}
			
			/*	private function AddCreatePlateElementsContainerChildren():void
			{
			LeftFlagBox = new HGroup;
			LeftFlagBox.id = 'LeftFlagBox';
			LeftFlagBox.width = 0;
			LeftFlagBox.height = FlagHeight;
			LeftFlagBox.horizontalAlign = 'center';
			LeftFlagBox.verticalAlign = 'middle';
			LeftFlagBox.includeInLayout = false; LeftFlagBox.visible = false;
			PlateElementsContainer.addElement(LeftFlagBox);
			
			LeftDateBox = new VGroup;
			LeftDateBox.id = 'LeftDateBox';
			LeftDateBox.width = 0;
			LeftDateBox.height = DateHeight;
			LeftDateBox.horizontalAlign = 'center';
			LeftDateBox.verticalAlign = 'middle';
			LeftDateBox.setStyle('kerning',false);
			LeftDateBox.includeInLayout = false; LeftDateBox.visible = false;
			PlateElementsContainer.addElement(LeftDateBox);
			
			LeftSymbolBox = new HGroup;
			LeftSymbolBox.id = 'LeftSymbolBox';
			LeftSymbolBox.width = 0;
			LeftSymbolBox.height = SymbolHeight;
			LeftSymbolBox.horizontalAlign = 'center';
			LeftSymbolBox.verticalAlign = 'middle';
			LeftSymbolBox.includeInLayout = false; LeftSymbolBox.visible = false;
			PlateElementsContainer.addElement(LeftSymbolBox);
			
			CenterSymbolBox = new HGroup;
			CenterSymbolBox.id = 'CenterSymbolBox';
			CenterSymbolBox.width = 0;
			CenterSymbolBox.height = SymbolHeight;
			CenterSymbolBox.horizontalCenter = 0;
			CenterSymbolBox.verticalCenter = 0;
			CenterSymbolBox.horizontalAlign = 'center';
			CenterSymbolBox.verticalAlign = 'middle';
			CenterSymbolBox.includeInLayout = false; CenterSymbolBox.visible = false;
			PlateElementsContainer.addElement(CenterSymbolBox);
			
			X2A = new HGroup;
			X2A.id = 'X2A';
			X2A.width = CharacterWidth;
			X2A.percentWidth = 100;
			X2A.percentHeight = 100;
			X2A.clipAndEnableScrolling=true;
			X2A.horizontalCenter = 0;
			X2A.verticalCenter = 0;
			X2A.horizontalAlign = 'center';
			X2A.verticalAlign = 'middle';
			X2A.gap = 0;
			X2A.includeInLayout = false; X2A.visible = false;
			PlateElementsContainer.addElement(X2A);
			
			X2B = new HGroup;
			X2B.id = 'X2B';
			X2B.width = CharacterWidth;
			X2B.percentWidth = 100;
			X2B.percentHeight = 100;
			X2B.clipAndEnableScrolling=true;
			X2B.horizontalCenter = 0;
			X2B.verticalCenter = 0;
			X2B.horizontalAlign = 'center';
			X2B.verticalAlign = 'middle';
			X2B.gap = 0;
			X2B.includeInLayout = false; X2B.visible = false;
			PlateElementsContainer.addElement(X2B);
			
			RightSymbolBox = new HGroup;
			RightSymbolBox.id = 'RightSymbolBox';
			RightSymbolBox.width = 0;
			RightSymbolBox.height = SymbolHeight;
			RightSymbolBox.horizontalCenter = 0;
			RightSymbolBox.verticalCenter = 0;
			RightSymbolBox.horizontalAlign = 'center';
			RightSymbolBox.verticalAlign = 'middle';
			RightSymbolBox.includeInLayout = false; RightSymbolBox.visible = false;
			PlateElementsContainer.addElement(RightSymbolBox);
			
			RightDateBox = new VGroup;
			RightDateBox.id = 'RightDateBox';
			RightDateBox.width = 0;
			RightDateBox.height = DateHeight;
			RightDateBox.horizontalCenter = 0;
			RightDateBox.verticalCenter = 0;
			RightDateBox.horizontalAlign = 'center';
			RightDateBox.verticalAlign = 'middle';
			RightDateBox.setStyle('kerning',false);
			RightDateBox.includeInLayout = false; RightDateBox.visible = false;
			PlateElementsContainer.addElement(RightDateBox);
			
			RightFlagBox = new HGroup;
			RightFlagBox.id = 'RightFlagBox';
			RightFlagBox.width = 0;
			RightFlagBox.height = FlagHeight;
			RightFlagBox.horizontalCenter = 0;
			RightFlagBox.verticalCenter = 0;
			RightFlagBox.horizontalAlign = 'center';
			RightFlagBox.verticalAlign = 'middle';
			RightFlagBox.includeInLayout = false; RightFlagBox.visible = false;
			PlateElementsContainer.addElement(RightFlagBox);
			}	*/
			
			private function AddDateToDateBox(ElementType:String):void
			{
				var a:Array = String(SelectedFoilSwatchImage).split(".");
				var Date1Save:Number = Date1.value as Number;
				var Date2Save:Number = Date2.value as Number;
				var Date3Save:Number = Date3.value as Number;
				
				var plategroup:VGroup = new VGroup;
				plategroup.width = DateWidth;
				plategroup.height = DateHeight;
				plategroup.horizontalAlign = 'center';
				plategroup.verticalAlign = 'middle';
				plategroup.setStyle('contentBackgroundAlpha',0);
				plategroup.gap = 0;
				
				var D1:Label = new Label;
				D1.horizontalCenter = 0;
				D1.verticalCenter = 0;
				D1.styleName = 'PlateDate';
				
				if (Date1Save == 0)
				{
					D1.text = '00';
				}
				else if (Date1Save <= 9)
				{
					D1.text = ('0' + String(Date1Save));
				}
				else
				{
					D1.text = String(Date1Save);
				}
				
				var D2:Label = new Label;
				D2.horizontalCenter = 0;
				D2.verticalCenter = 0;
				D2.styleName = 'PlateDate';
				
				if (Date2Save == 0)
				{
					D2.text = '00';
				}
				else if (Date2Save <= 9)
				{
					D2.text = ('0' + String(Date2Save));
				}
				else
				{
					D2.text = String(Date2Save);
				}
				
				var D3:Label = new Label;
				D3.horizontalCenter = 0;
				D3.verticalCenter = 0;
				D3.styleName = 'PlateDate';
				
				if (Date3Save == 0)
				{
					D3.text = '00';
				}
				else if (Date3Save <= 9)
				{
					D3.text = ('0' + String(Date3Save));
				}
				else
				{
					D3.text = String(Date3Save);
				}
				
				var imgD1:Image = new Image();
				imgD1.source = String(a[0]) + "_24.jpg";
				PreviewElementsAC.addItem(imgD1);
				imgD1.width = 24;
				imgD1.height = 24;
				
				var imgD2:Image = new Image();
				imgD2.source = String(a[0]) + "_24.jpg";
				PreviewElementsAC.addItem(imgD2);
				imgD2.width = 24;
				imgD2.height = 24;
				
				var imgD3:Image = new Image();
				imgD3.source = String(a[0]) + "_24.jpg";
				PreviewElementsAC.addItem(imgD3);
				imgD3.width = 24;
				imgD3.height = 24;
				
				var bc1:BorderContainer = new BorderContainer();
				bc1.width = 24;
				bc1.height = 24;
				bc1.setStyle('borderColor',OutlineColor);
				bc1.setStyle('backgroundAlpha',0);
				
				var bc2:BorderContainer = new BorderContainer();
				bc2.width = 24;
				bc2.height = 24;
				bc2.setStyle('borderColor',OutlineColor);
				bc2.setStyle('backgroundAlpha',0);
				
				var bc3:BorderContainer = new BorderContainer();
				bc3.width = 24;
				bc3.height = 24;
				bc3.setStyle('borderColor',OutlineColor);
				bc3.setStyle('backgroundAlpha',0);
				
				imgD1.cacheAsBitmap = true;
				D1.cacheAsBitmap = true;
				imgD1.mask = D1;
				
				imgD2.cacheAsBitmap = true;
				D2.cacheAsBitmap = true;
				imgD2.mask = D2;
				
				imgD3.cacheAsBitmap = true;
				D3.cacheAsBitmap = true;
				imgD3.mask = D3;
				
				bc1.addElement(D1);
				bc1.addElement(imgD1);
				bc2.addElement(D2);
				bc2.addElement(imgD2);
				bc3.addElement(D3);
				bc3.addElement(imgD3);
				
				plategroup.addElement(bc1);
				plategroup.addElement(bc2);
				plategroup.addElement(bc3);
				
				/*	LeftDateBox.includeInLayout=true; LeftDateBox.visible=true;
				LeftDateBox.addElement(plategroup);	*/
				
				if (ElementType == 'LD')
				{
					//Remove any existing left date
					if (LeftDateBox.numElements > 0)
					{
						LeftDateBox.removeAllElements();
						
						AdjustBoxWidths('LeftDate','-');
					}
					
					LeftDateBox.width=DateWidth; 
					LeftDateBox.includeInLayout=true;
					LeftDateBox.addElement(plategroup);
					
					AdjustBoxWidths('LeftDate','+');
				}
				else if (ElementType == 'RD')
				{
					//Remove any existing right date
					if (RightDateBox.numElements > 0)
					{
						RightDateBox.removeAllElements();
						
						AdjustBoxWidths('RightDate','-');
					}
					
					RightDateBox.width=DateWidth;
					RightDateBox.includeInLayout=true;
					RightDateBox.addElement(plategroup);
					
					AdjustBoxWidths('RightDate','+');
				}
				
				Date1.value = Date1Save;
				Date2.value = Date2Save;
				Date3.value = Date3Save;
				
				DateCount = (DateCount + 1);
				
				HideShow();
				
				CalculatePrice();
				
				StackAction.push(plategroup);
			}
						
			private function AddFlagToFlagBox(event:MouseEvent,FlagBox:String):void 
			{
				var plateimage:Image = new Image;
				plateimage.source = SelectedFlag;
				plateimage.width = FlagWidth;
				plateimage.height = FlagHeight;
				
				if (FlagBox == 'Left')
				{
					//Remove any existing left flag
					if (LeftFlagBox.numElements > 0)
					{
						LeftFlagBox.removeAllElements();
						
						AdjustBoxWidths('LeftFlag','-');
					}
					
					LeftFlagBox.width = FlagWidth;
					LeftFlagBox.includeInLayout=true;
					LeftFlagBox.addElement(plateimage);
					
					AdjustBoxWidths('LeftFlag','+');
				}
				else if (FlagBox == 'Right')
				{
					//Remove any existing right flag
					if (RightFlagBox.numElements > 0)
					{
						RightFlagBox.removeAllElements();
						
						AdjustBoxWidths('RightFlag','-');
					}
					
					RightFlagBox.width = FlagWidth;
					RightFlagBox.includeInLayout=true;
					RightFlagBox.addElement(plateimage);
					
					AdjustBoxWidths('RightFlag','+');
				}
				
				HideShow();
				
				StackAction.push(plateimage);
				
				FlagCount = (FlagCount + 1);
				
				CalculatePrice();
			}
			
			private function HideShow():void
			{
				if (LeftFlagBox.includeInLayout == false)
				{
					LeftFlagBox.visible = false;
				}
				else if (LeftFlagBox.includeInLayout == true)
				{
					LeftFlagBox.visible = true;
				}
				
				if (LeftDateBox.includeInLayout == false)
				{
					LeftDateBox.visible = false;
				}
				else if (LeftDateBox.includeInLayout == true)
				{
					LeftDateBox.visible = true;
				}
				
				if (LeftSymbolBox.includeInLayout == false)
				{
					LeftSymbolBox.visible = false;
				}
				else if (LeftSymbolBox.includeInLayout == true)
				{
					LeftSymbolBox.visible = true;
				}
				
				if (RightFlagBox.includeInLayout == false)
				{
					RightFlagBox.visible = false;
				}
				else if (RightFlagBox.includeInLayout == true)
				{
					RightFlagBox.visible = true;
				}
				
				if (RightDateBox.includeInLayout == false)
				{
					RightDateBox.visible = false;
				}
				else if (RightDateBox.includeInLayout == true)
				{
					RightDateBox.visible = true;
				}
				
				if (RightSymbolBox.includeInLayout == false)
				{
					RightSymbolBox.visible = false;
				}
				else if (RightSymbolBox.includeInLayout == true)
				{
					RightSymbolBox.visible = true;
				}
				
				if (CenterSymbolBox.includeInLayout == false)
				{
					CenterSymbolBox.visible = false;
				}
				else if (CenterSymbolBox.includeInLayout == true)
				{
					CenterSymbolBox.visible = true;
				}
				
				if (X1B.includeInLayout == false)
				{
					X1B.visible = false;
				}
				else if (X1B.includeInLayout == true)
				{
					X1B.visible = true;
				}
				
				if (X2.includeInLayout == false)
				{
					X2.visible = false;
				}
				else if (X2.includeInLayout == true)
				{
					X2.visible = true;
				}
				
				if (X2A.includeInLayout == false)
				{
					X2A.visible = false;
				}
				else if (X2A.includeInLayout == true)
				{
					X2A.visible = true;
				}
				
				if (X2B.includeInLayout == false)
				{
					X2B.visible = false;
				}
				else if (X2B.includeInLayout == true)
				{
					X2B.visible = true;
				}
				
				Outlines();
			}
			
			private function Outlines():void
			{				
				X1A.setStyle('borderVisible',true);
				X2A.setStyle('borderVisible',true);
				X1B.setStyle('borderVisible',true);
				X2B.setStyle('borderVisible',true);
				X1A.setStyle('borderAlpha',.25);
				X1B.setStyle('borderAlpha',.25);
				X2A.setStyle('borderAlpha',.25);
				X2B.setStyle('borderAlpha',.25);
				//	X1A.setStyle('backgroundColor',0xffffff);
				//	X1B.setStyle('backgroundColor',0xffffff);
				//	X2A.setStyle('backgroundColor',0xffffff);
				//	X2B.setStyle('backgroundColor',0xffffff);
				
				if (CurrentBox == 'X1A')
				{
					X1A.setStyle('borderVisible',true);
					X1A.setStyle('borderAlpha',CurrentOutlineAlpha);
					X1A.setStyle('borderColor',OutlineColor);
					X1A.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X1B')
				{
					X1B.setStyle('borderVisible',true);
					X1B.setStyle('borderAlpha',CurrentOutlineAlpha);
					X1B.setStyle('borderColor',OutlineColor);
					X1B.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X2A')
				{
					X2A.setStyle('borderVisible',true);
					X2A.setStyle('borderAlpha',CurrentOutlineAlpha);
					X2A.setStyle('borderColor',OutlineColor);
					X2A.setStyle('backgroundColor',CurrentBoxColor);
				}
				else if (CurrentBox == 'X2B')
				{
					X2B.setStyle('borderVisible',true);
					X2B.setStyle('borderAlpha',CurrentOutlineAlpha);
					X2B.setStyle('borderColor',OutlineColor);
					X2B.setStyle('backgroundColor',CurrentBoxColor);
				}
			}
			
			private function AddSymbolToCurrentBox(event:MouseEvent):void
			{
				var bdTmp:BorderContainer = SelectedSymbolFrame.getElementAt(0) as BorderContainer;
				var imgTxt1:Image = bdTmp.getElementAt(0) as Image;
				var imgTmp1:Image = bdTmp.getElementAt(1) as Image;
				
				var imgTmp:Image = new Image;
				imgTmp.source = imgTmp1.source;
				imgTmp.width = imgTmp1.width;
				imgTmp.height = imgTmp1.height;
				imgTmp.fillMode = imgTmp1.fillMode;
				imgTmp.scaleMode = imgTmp1.scaleMode;
				
				for (var i:int=0; i < Symbols_AC.length; i++)
				{
					var img:Image = Symbols_AC.getItemAt(i) as Image;
					
					if (img.source == imgTmp.source)
					{
						imgTmp = new Image();
						imgTmp.source = img.source;
						imgTmp.width = (img.width * 2.1);
						imgTmp.height = (img.height * 2.1);
						SymbolWidth = imgTmp.width;
						break;
					}
				}

				var imgTxt:Image = new Image;
				imgTxt.source = imgTxt1.source;
				imgTxt.width = imgTmp.width;
				imgTxt.height = imgTmp.height;
				
				PreviewElementsAC.addItem(imgTxt);
				
				var tt:TexturedText = new TexturedText();
				var plateimage:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
				plateimage.width=imgTxt.width;
				plateimage.height=imgTxt.height;
				
				if (CurrentBox == 'X1A')
				{
					AdjustBoxWidths('1ASymbol','+');
					
					X1A.addElement(plateimage);
				}
				else if (CurrentBox == 'X1B')
				{
					AdjustBoxWidths('1BSymbol','+');
					
					X1B.addElement(plateimage);
				}
				else if (CurrentBox == 'X2A')
				{
					AdjustBoxWidths('2ASymbol','+');
					
					X2A.addElement(plateimage);
				}
				else if (CurrentBox == 'X2B')
				{
					AdjustBoxWidths('2BSymbol','+');
					
					X2B.addElement(plateimage);
				}
				
				HideShow();
				
				//	StackAction.push(bd);
				
				if (SymbolSize == 'Tall')
				{
					TallSymbolCount == (TallSymbolCount + 1);
				}
				else if (SymbolSize == 'Short')
				{
					ShortSymbolCount == (ShortSymbolCount + 1);
				}
			}
			
			private function AddCharacterToPlate(event:MouseEvent):void
			{
				var keypadbutton:Button = event.target as Button;
				var platelabel:Label = new Label;
				var img:Image = new Image();
				
				var char:String = keypadbutton.label as String;
				SelectedCharacter = char;
				
				// Do not set width or height on platelabel
				platelabel.text = SelectedCharacter;
				platelabel.horizontalCenter = 0;
				platelabel.verticalCenter = 0;
				
				var bclayout:BasicLayout = new BasicLayout();
				bclayout.clipAndEnableScrolling = true;
				
				var bc:BorderContainer = new BorderContainer();
				bc.setStyle('borderColor',OutlineColor);
				bc.setStyle('backgroundAlpha',0);
				bc.verticalCenter = -44; //Compensate for problem font
				bc.horizontalCenter = 0;
				bc.layout = bclayout;
				
				/* It only works with BasicLayout		
				var bclayout:HorizontalLayout = new HorizontalLayout();
				//bclayout.clipAndEnableScrolling = true;
				bclayout.gap = 0;
				bclayout.horizontalAlign = 'center';
				bclayout.verticalAlign = 'bottom';
				bclayout.paddingTop = 0;
				bclayout.paddingBottom = 0;
				bclayout.paddingLeft = 0;
				bclayout.paddingBottom = 0;
				bclayout.clipAndEnableScrolling = true;
				
				var bc:BorderContainer = new BorderContainer();
				bc.setStyle('borderColor','blue');
				bc.setStyle('backgroundAlpha',0);
				bc.verticalCenter = 0;
				bc.horizontalCenter = 0;
				bc.layout = bclayout;
				*/
				
				var a:Array = String(SelectedFoilSwatchImage).split(".");
								
				SelectedFoilSwatchImage;
				img = new Image();
				
				if (CharacterSize == 'Small')
				{
					img.source = String(a[0]) + "_S.jpg";
					img.width = SmallCharacterWidth;
					img.height = SmallCharacterHeight;
					bc.width = SmallCharacterWidth;
					bc.height = SmallCharacterHeight;
					platelabel.styleName = 'PlateCharacterSmall';
				}
				else if (CharacterSize == 'Medium')
				{
					img.source = String(a[0]) + "_M.jpg";
					img.width = MediumCharacterWidth;
					img.height = MediumCharacterHeight;
					bc.width = MediumCharacterWidth;
					bc.height = MediumCharacterHeight;
					platelabel.styleName = 'PlateCharacterMedium';
				}
				else if (CharacterSize == 'Large')
				{
					img.source = String(a[0]) + "_L.jpg";
					img.width = LargeCharacterWidth;
					img.height = LargeCharacterHeight;
					bc.width = LargeCharacterWidth;
					bc.height = LargeCharacterHeight;
					platelabel.styleName = 'PlateCharacterLarge';
				}
				
				PreviewElementsAC.addItem(img);
				
				img.cacheAsBitmap = true;
				platelabel.cacheAsBitmap = true;
				img.mask = platelabel;
				
				TargetBox = CurrentBox;
				
				if (TargetBox == 'X1A')
				{					
					bc.id = (TargetBox + String(X1A_Index));
					
					bc.addElement(platelabel);
					bc.addElement(img);
					
					X1A.addElement(bc);
					
					X1A_Index = (X1A_Index + 1);
					
					CurrentBox = 'X1A';
				}
				else if (TargetBox == 'X1B')
				{
					bc.id = (TargetBox + String(X1B_Index));
					
					bc.addElement(platelabel);
					bc.addElement(img);
					
					X1B.addElement(bc);
					
					X1B_Index = (X1B_Index + 1);
					
					CurrentBox = 'X1B';
				}
				else if (TargetBox == 'X2A')
				{
					bc.id = (TargetBox + String(X2A_Index));
					
					bc.addElement(platelabel);
					bc.addElement(img);
					
					X2A.addElement(bc);
					
					X2A_Index = (X2A_Index + 1);
					
					CurrentBox = 'X2A';
				}
				else if (TargetBox == 'X2B')
				{	
					bc.id = (TargetBox + String(X2B_Index));
					
					bc.addElement(platelabel);
					bc.addElement(img);
					
					X2B.addElement(bc);
					
					X2B_Index = (X2B_Index + 1);
					
					CurrentBox = 'X2B';	
				}
				
				LastBox = CurrentBox;
				
				HideShow();
				Outlines();
				
				//ElementsArray.push(ElementId);		
			}
			
			private function AddSymbolToSymbolBox(event:MouseEvent,SymbolBox:String):void 
			{
				var bdTmp:BorderContainer = SelectedSymbolFrame.getElementAt(0) as BorderContainer;
				
				if (bdTmp.numElements > 1)
				{
					var imgTxt1:Image = bdTmp.getElementAt(0) as Image;
					var imgTmp1:Image = bdTmp.getElementAt(1) as Image;
				}
				else
				{
					var imgTmp1:Image = bdTmp.getElementAt(0) as Image;
					var imgTxt1:Image = new Image();
					imgTxt1.source = "assets/foils/BlackFoilSwatch.jpg";
					imgTxt1.width = (imgTmp1.width);
					imgTxt1.height = (imgTmp1.height);
					imgTxt1.fillMode = imgTmp1.fillMode;
					imgTxt1.scaleMode = imgTmp1.scaleMode;
				}
				
				var imgTxt:Image = new Image;
				imgTxt.source = imgTxt1.source;
				imgTxt.width = (imgTxt1.width * 2.1);
				imgTxt.height = (imgTxt1.height * 2.1);
				imgTxt.fillMode = imgTxt1.fillMode;
				imgTxt.scaleMode = imgTxt1.scaleMode;
				
				PreviewElementsAC.addItem(imgTxt);
				
				var imgTmp:Image = new Image;
				imgTmp.source = imgTmp1.source;
				imgTmp.width = (imgTmp1.width * 2.1);
				imgTmp.height = (imgTmp1.height * 2.1);			
				imgTmp.fillMode = 'scale';
				imgTmp.scaleMode = 'letterbox';
				
				var tt:TexturedText = new TexturedText();
				var plateimage:BorderContainer = tt.getTextMaskImage(imgTxt, imgTmp);
				plateimage.width=(imgTmp.width);
				plateimage.height=(imgTmp.height);
				
				SymbolWidth = imgTmp.width;
				
				if (SymbolBox == 'Left')
				{
					//Remove any existing left symbol
					if (LeftSymbolBox.numElements > 0)
					{
						LeftSymbolBox.removeAllElements();
						
						AdjustBoxWidths('LeftSymbol','-');
					}
					
					LeftSymbolBox.width = SymbolWidth;
					LeftSymbolBox.includeInLayout=true;
					
					//	LeftSymbolBox.addElement(bd);
					LeftSymbolBox.addElement(plateimage);
					
					AdjustBoxWidths('LeftSymbol','+');
				}
				else if (SymbolBox == 'Center')
				{
					//Remove any existing center symbol					
					if (CenterSymbolBox.numElements > 0)
					{
						CenterSymbolBox.removeAllElements();
						
						AdjustBoxWidths('CenterSymbol','-');
					}
					// ! move this ?
					if (X2.includeInLayout == false)
					{	
						if (X1_LineCount == 1 || X2_LineCount == 0)
						{
							X2.includeInLayout = true;
							X2A.includeInLayout = true;
							X2_LineCount = 1;
						}
						else if (X1_LineCount == 2 || X2_LineCount == 2)
						{
							X2B.includeInLayout = true;
							X2_LineCount = 2;
						}
						
						LinesChooser2.visible = true;
					}
					
					CenterSymbol=true;
					
					CenterSymbolBox.width = SymbolWidth;
					CenterSymbolBox.addElement(plateimage);
					
					AdjustBoxWidths('CenterSymbol','+');
					
					CenterSymbolBox.includeInLayout=true;
					
					HideShow();
					
					if (X1A.numElements == 0 && X1B.numElements == 0)
					{
						CurrentBox = 'X1A'
					}
					
					SetNextBoxAndSwitchButtonImage();
					
				}
				else if (SymbolBox == 'Right')
				{
					//Remove any existing right symbol
					if (RightSymbolBox.numElements > 0)
					{
						RightSymbolBox.removeAllElements();
						
						AdjustBoxWidths('RightSymbol','-');
					}
					
					RightSymbolBox.width = SymbolWidth;
					RightSymbolBox.includeInLayout=true;
					
					//	RightSymbolBox.addElement(bd);
					RightSymbolBox.addElement(plateimage);
					
					AdjustBoxWidths('RightSymbol','+');
				}
				
				HideShow();
				
				StackAction.push(plateimage);
			}
			
			private function Texture(SelectedCharacter:String):BorderContainer
			{
				var img:Image = new Image();
				img.source = SelectedFoilSwatchImage;
				var tt:TexturedText = new TexturedText();
				return tt.getTextMaskText(img,SelectedCharacter,CharacterFontSize,"normal","GL-Nummernschild-Eng");
				
				//fontFamily: GL-Nummernschild-Eng;
				//fontSize: 96;
				//fontWeight: normal;
				//kerning: true;
			}
			
			private function AdjustBoxWidths(Context:String,AorD:String):void
			{
				if (AorD == '+')
				{
					if (Context == 'LeftFlag')
					{
						LeftLoad = (LeftLoad + FlagWidth);
					}
					else if (Context == 'RightFlag')
					{
						RightLoad = (RightLoad + FlagWidth);
					}
					else if (Context == 'LeftDate')
					{
						LeftLoad = (LeftLoad + DateWidth);
					}
					else if (Context == 'RightDate')
					{
						RightLoad = (RightLoad + DateWidth);
					}
					else if (Context == 'LeftSymbol')
					{
						LeftLoad = (LeftLoad + SymbolWidth);
					}
					else if (Context == 'RightSymbol')
					{
						RightLoad = (RightLoad + SymbolWidth);
					}
					else if (Context == 'CenterSymbol')
					{
						LeftLoad = (LeftLoad + (SymbolWidth/2));
						RightLoad = (RightLoad + (SymbolWidth/2));
					}
				}
				else if (AorD == '-')
				{
					if (Context == 'LeftFlag')
					{
						LeftLoad = (LeftLoad - FlagWidth);
					}
					else if (Context == 'RightFlag')
					{
						RightLoad = (RightLoad - FlagWidth);
					}
					else if (Context == 'LeftDate')
					{
						LeftLoad = (LeftLoad - DateWidth);
					}
					else if (Context == 'RightDate')
					{
						RightLoad = (RightLoad - DateWidth);
					}
					else if (Context == 'LeftSymbol')
					{
						LeftLoad = (LeftLoad - SymbolWidth);
					}
					else if (Context == 'RightSymbol')
					{
						RightLoad = (RightLoad - SymbolWidth);
					}
					else if (Context == 'CenterSymbol')
					{
						LeftLoad = (LeftLoad - (SymbolWidth/2));
						RightLoad = (RightLoad - (SymbolWidth/2));
					}
				}
				
				if (X2.includeInLayout == true)
				{
					X1.width = ((PlateElementsContainer.width/2) - LeftLoad);
					X2.width = ((PlateElementsContainer.width/2) - RightLoad);
				}
				else
				{
					X1.width = (PlateElementsContainer.width- LeftLoad - RightLoad);
				}
			}
			
			private function SetLineCount(Box1or2:int,RequestedLineCount:int):void
			{
				// !! Need to preserve what has content, maybe disallow if both have content.  Can B be active and A not?
				if (Box1or2 == 1 && RequestedLineCount == 1)
				{
					X1_LineCount = 1;
					X1A.includeInLayout = true;
					X1B.includeInLayout = false;
				}
				else if (Box1or2 == 1 && RequestedLineCount == 2)
				{
					X1_LineCount = 2;
					X1A.includeInLayout = true;
					X1B.includeInLayout = true;
					SetCharacterSize('Small')
				}
				else if (Box1or2 == 2 && RequestedLineCount == 1)
				{
					X2_LineCount = 1;
					X2A.includeInLayout = true;
					X2B.includeInLayout = false;
				}
				else if (Box1or2 == 2 && RequestedLineCount == 2)
				{
					X2_LineCount = 2;
					X2A.includeInLayout = true;
					X2B.includeInLayout = true;
					SetCharacterSize('Small')
				}
				
				EnableDisableControls();
				
				HideShow();
				Outlines();
				
				SetNextBoxAndSwitchButtonImage();
			}
			
			// check for fullness?
			// ! Propagate calls to this in place of ad-hoc
			private function SetNextBoxAndSwitchButtonImage():void
			{
				if(Debugging) Alert.show('CurrentBox ' + CurrentBox);
				if(Debugging) Alert.show('NextBox ' + NextBox);
				if(Debugging) Alert.show('CS ' + String(CenterSymbol));
				if(Debugging) Alert.show('x1lc ' + String(X1_LineCount));
				if(Debugging) Alert.show('x2lc ' + String(X2_LineCount));
				
				if (CurrentBox == 'X1A')
				{
					if (CenterSymbol == false)
					{
						if (X1_LineCount == 1)
							
							NextBox = CurrentBox; 
						
						//SwitchButtonImage = '';							
						SwitchButton.visible = false;
					}
					if (X1_LineCount == 2)
					{
						NextBox = 'X1B';
						
						SwitchButtonImage.source = CX1A_NX1B;					
						SwitchButton.visible = true;
					}
				}
				else if (CenterSymbol == true)
				{
					NextBox = 'X2A';
					
					if (X1_LineCount == 1 && X2_LineCount == 1)
					{
						SwitchButtonImage.source = CX1_NX2;
					}
					else if (X1_LineCount == 1 && X2_LineCount == 2)
					{
						SwitchButtonImage.source = CX1_NX2A;
					}
					else if (X1_LineCount == 2 && X2_LineCount == 1)
					{
						SwitchButtonImage.source = CX1A_NX2;
					}
					else if (X1_LineCount == 2 && X2_LineCount == 2)
					{
						SwitchButtonImage.source = CX1A_NX2A;
					}
					
					SwitchButton.visible = true;
					
					if ((X1_LineCount == 1 && X1A.numElements > 0) || (X1_LineCount == 2 && X1A.numElements > 0 && X1B.numElements > 0))
					{
						CurrentBox = NextBox;
					}
				}
				else if (CurrentBox == 'X1B')
				{
					NextBox = 'X1A';
					
					if (CenterSymbol == false)
					{
						if (X1_LineCount == 2)
						{
							SwitchButtonImage.source = SPAN_CX1B_NX1A;
						}
					}
					else if (CenterSymbol == true)
					{
						if (X1_LineCount == 2 && X2_LineCount == 1)
						{
							SwitchButtonImage.source = CX1B_NX1A_SPAN;
						}
						else if (X1_LineCount == 2 && X2_LineCount == 2)
						{
							SwitchButtonImage.source = CX1B_NX1A;
						}
					}
					
					SwitchButton.visible = true;
				}
				else if (CurrentBox == 'X2A')
				{
					if (X1_LineCount == 1 && X2_LineCount == 1)
					{
						NextBox = 'X1A';
						SwitchButtonImage.source = CX2_NX1;
					}
					else if (X1_LineCount == 2 && X2_LineCount == 1)
					{
						NextBox = 'X1B';
						SwitchButtonImage.source = CX2_NX1B;
					}
					else if (X1_LineCount == 1 && X2_LineCount == 2)
					{
						NextBox = 'X2B';
						SwitchButtonImage.source = CX2A_NX2B_SPAN;
					}
					else if (X1_LineCount == 2 && X2_LineCount == 2)
					{
						NextBox = 'X2B';
						SwitchButtonImage.source = CX2A_NX2B;
					}
					
					SwitchButton.visible = true;
				}
				else if (CurrentBox == 'X2B')
				{
					if (X1_LineCount == 1 && X2_LineCount == 2)
					{
						NextBox = 'X1A';
						SwitchButtonImage.source = CX2B_NX1;
					}
					else if (X1_LineCount == 2 && X2_LineCount == 2)
					{
						NextBox = 'X1B';
						SwitchButtonImage.source = CX2B_NX1B;
					}
					
					SwitchButton.visible = true;
				}
				
				Outlines();
			}
			
			/*	private function ChangeLineCount(event:MouseEvent,RequestedLineCount:int):void
			{
			if (RequestedLineCount == 2 && TwoLines == false)
			{
			TwoLines = true;
			
			SwitchButton.visible = true;
			
			if (CharacterSize == 'Large')
			{
			CharacterSize = 'Medium';
			}
			}
			else if (RequestedLineCount == 1 && TwoLines == true)
			{
			TwoLines = false;
			
			SwitchButton.visible = false;
			}
			
			SetCharacterDimensions();
			
			Outlines();
			
			CalculatePrice();
			}	*/
			
			/*	private function ChangeCurrentBox():void
			{
			if (TwoLines == false)
			{
			if (CurrentBox == 'X1A')
			{
			CurrentBox = 'X2A';
			X1B.includeInLayout=false; X1B.visible=false;
			X2.includeInLayout=true; X2.visible=true;
			X2A.includeInLayout=true; X2A.visible=true;
			X2B.includeInLayout=false; X2B.visible=false;
			CurrentLine = 'Line 1';
			}
			else if (CurrentBox == 'X1B')
			{
			CurrentLine = 'Line 2';
			}
			}
			else if (TwoLines == true)
			{
			if (CurrentBox == 'X1A')
			{
			CurrentBox = 'X1B';
			X1B.includeInLayout=true; X1B.visible=true;
			CurrentLine = 'Line 2';
			}
			if (CurrentBox == 'X1B')
			{
			CurrentBox = 'X2A';
			X2.includeInLayout=true; X2.visible=true;
			X2A.includeInLayout=true; X2A.visible=true;
			X2B.includeInLayout=true; X2B.visible=true;
			CurrentLine = 'Line 1';
			}
			if (CurrentBox == 'X2A')
			{
			CurrentBox = 'X2B';
			X2B.includeInLayout=true; X2B.visible=true;
			CurrentLine = 'Line 2';
			}
			if (CurrentBox == 'X2B')
			{
			CurrentLine = 'Line 2';
			}
			}
			Outlines();
			}	*/
			
			[Bindable] private var LP:LargePreview;
			
			private function SnapshotPreviewPlate(event:MouseEvent):void
			{
				//				component.CustomSnapshot.target=PreviewContainer
				PopUpLargePreview();
			}
			
			private function PopUpLargePreview():void
			{
				LP = new LargePreview;
				PopUpManager.addPopUp(LP,this,false);
				PopUpManager.centerPopUp(LP);
			}
			
			public function CloseLargePreview():void
			{
				PopUpManager.removePopUp(LP);
			}
			
			private function UndoLastAction():void
			{
				// ! Need to AdjustBoxWidths
				if (StackAction.length > 0)
				{
					CharactersAdded = (CharactersAdded - 1);
					PlateElementsContainer.removeElementAt(StackAction.length);
					StackAction.pop();
				}
			}
			
			private function ClearPreview():void
			{
				if (LeftFlagBox.numElements > 0)
				{
					LeftFlagBox.removeAllElements();
					
					FlagCount = (FlagCount - 1);
				}
				LeftFlagBox.width=0; LeftFlagBox.includeInLayout= false;
				
				if (LeftDateBox.numElements > 0)
				{
					LeftDateBox.removeAllElements();
					
					DateCount = (DateCount - 1);
				}
				LeftDateBox.width=0; LeftDateBox.includeInLayout= false;
				
				if (LeftSymbolBox.numElements > 0)
				{
					LeftSymbolBox.removeAllElements();
				}
				LeftSymbolBox.width=0; LeftSymbolBox.includeInLayout= false;
				
				if (X1A.numElements > 0)
				{
					X1A.removeAllElements();
				}
				
				if (X1B.numElements > 0)
				{
					X1B.removeAllElements();
				}
				
				if (X2A.numElements > 0)
				{
					X2A.removeAllElements();
				}
				
				if (X2B.numElements > 0)
				{
					X2B.removeAllElements();
				}
				
				if (RightFlagBox.numElements > 0)
				{
					RightFlagBox.removeAllElements();
					
					FlagCount = (FlagCount - 1);
				}
				RightFlagBox.width=0; RightFlagBox.includeInLayout= false;
				
				if (RightDateBox.numElements > 0)
				{
					RightDateBox.removeAllElements();
					
					DateCount = (DateCount - 1);
				}
				RightDateBox.width=0; RightDateBox.includeInLayout= false;
				
				if (RightSymbolBox.numElements > 0)
				{
					RightSymbolBox.removeAllElements();
				}
				RightSymbolBox.width=0; RightSymbolBox.includeInLayout= false;
				
				CharactersAdded = 0;
				CenterSymbol = false;
				
				LeftLoad = 0;
				RightLoad = 0;
				
				HideShow();
				CalculatePrice();
			}
			
			private function StartOver():void
			{
				// ! also reset default symbol etc.
				ClearPreview();
				
				X1B.width=0; X1B.includeInLayout=false; X1B.visible=false;
				X2A.width=0; X2A.includeInLayout=false; X2A.visible=false;
				X2B.width=0; X2B.includeInLayout=false; X2B.visible=false;
				
				SetDefaults();
				
				CharactersAdded = 0;
			}
			
			//!!! Put into vars, granular
			private function CalculatePrice():void
			{
				if (PlateSize == 'Large' || PlateSize == 'Medium')
				{
					Price = 12;
					
					if (PlateIsMetallic == true)
					{
						Price = (Price + 4);
					}
					
					Price = (Price + (FlagCount * 3));
					
					Price = (Price + (DateCount * 3));
				}
				else if (PlateSize == 'Small')
				{
					Price = 10;
				}
				
				Price = (Price + (HoleCount * 0));
				
				Price = (Price + (CupCount * 1));
				
				if (X1_LineCount == 2 || X2_LineCount == 2)
				{
					Price = (Price + 2);
				}
				
				DisplayPrice = String(Price);
			}
			
			/*		
			Constants:
			
			SmallPlateHeight (in mm)
			SmallPlateWidth (in mm)
			MediumPlateHeight (in mm)
			MediumPlateWidth (in mm)
			LargePlateHeight (in mm)
			LargePlateWidth (in mm)
			SmallCharacterWidth (in mm)
			SmallCharacterHeight (in mm)
			MediumCharacterWidth (in mm)
			MediumCharacterHeight (in mm)
			LargeCharacterHeight (in mm)
			LargeCharacterWidth (in mm)
			DateHeight (in mm)
			DatePairWidth (in mm)
			DatePairLeading (in mm)
			SymbolHeight (in mm)
			LargeFlagHeight (in mm)
			LargeFlagWidth (in mm)
			SmallFlagHeight (in mm)
			SmallFlagWidth (in mm)
			HoleCenterPointOffsetFromEdge (in mm)
			CupSize (in mm)
			HolesPriceEUR (float)
			CupsPriceEUR (float)
			*/
			
			/*			[Bindable]
			private var GermanCharacters_Small_AC:ArrayCollection = new ArrayCollection([
			//In points
			//For IDs C2, C17, and C24, need to prefix Label with "&#" and suffix with ";" when rendering (e.g., "&#196;")
			{ID:"C1", Label:"A", FontID:"1", FontSize:"25"},
			{ID:"C2", Label:"&#196;", FontID:"1", FontSize:"25"},
			{ID:"C3", Label:"B", FontID:"1", FontSize:"25"},
			{ID:"C4", Label:"C", FontID:"1", FontSize:"25"},
			{ID:"C5", Label:"D", FontID:"1", FontSize:"25"},
			{ID:"C6", Label:"E", FontID:"1", FontSize:"25"},
			{ID:"C7", Label:"F", FontID:"1", FontSize:"25"},
			{ID:"C8", Label:"G", FontID:"1", FontSize:"25"},
			{ID:"C9", Label:"H", FontID:"1", FontSize:"25"},
			{ID:"C10", Label:"I", FontID:"1", FontSize:"25"},
			{ID:"C11", Label:"J", FontID:"1", FontSize:"25"},
			{ID:"C12", Label:"K", FontID:"1", FontSize:"25"},
			{ID:"C13", Label:"L", FontID:"1", FontSize:"25"},
			{ID:"C14", Label:"M", FontID:"1", FontSize:"25"},
			{ID:"C15", Label:"N", FontID:"1", FontSize:"25"},
			{ID:"C16", Label:"O", FontID:"1", FontSize:"25"},
			{ID:"C17", Label:"&#214;", FontID:"1", FontSize:"25"},
			{ID:"C18", Label:"P", FontID:"1", FontSize:"25"},
			{ID:"C19", Label:"Q", FontID:"1", FontSize:"25"},
			{ID:"C20", Label:"R", FontID:"1", FontSize:"25"},
			{ID:"C21", Label:"S", FontID:"1", FontSize:"25"},
			{ID:"C22", Label:"T", FontID:"1", FontSize:"25"},
			{ID:"C23", Label:"U", FontID:"1", FontSize:"25"},
			{ID:"C24", Label:"&#220;", FontID:"1", FontSize:"25"},
			{ID:"C25", Label:"V", FontID:"1", FontSize:"25"},
			{ID:"C26", Label:"W", FontID:"1", FontSize:"25"},
			{ID:"C27", Label:"X", FontID:"1", FontSize:"25"},
			{ID:"C28", Label:"Y", FontID:"1", FontSize:"25"},
			{ID:"C29", Label:"Z", FontID:"1", FontSize:"25"},
			{ID:"C30", Label:"1", FontID:"1", FontSize:"25"},
			{ID:"C31", Label:"2", FontID:"1", FontSize:"25"},
			{ID:"C32", Label:"3", FontID:"1", FontSize:"25"},
			{ID:"C33", Label:"4", FontID:"1", FontSize:"25"},
			{ID:"C34", Label:"5", FontID:"1", FontSize:"25"},
			{ID:"C35", Label:"6", FontID:"1", FontSize:"25"},
			{ID:"C36", Label:"7", FontID:"1", FontSize:"25"},
			{ID:"C37", Label:"8", FontID:"1", FontSize:"25"},
			{ID:"C38", Label:"9", FontID:"1", FontSize:"25"},
			{ID:"C39", Label:"0", FontID:"1", FontSize:"25"},
			{ID:"C40", Label:"-", FontID:"1", FontSize:"25"},
			{ID:"C41", Label:".", FontID:"1", FontSize:"25"},
			{ID:"C42", Label:"?", FontID:"1", FontSize:"25"},
			]);  */
			
			/*			private var GermanCharacters_Medium_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"50"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"50"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"50"}
			//..
			]);
			
			private var GermanCharacters_Large_AC:ArrayCollection = new ArrayCollection([
			//In points
			{ID:"Au", Label:"&#196", FontID:"1", FontSize:"75"}
			//..
			{ID:"Ou", Label:"&#214", FontID:"1", FontSize:"75"}
			//..
			{ID:"Uu", Label:"&#220;", FontID:"1", FontSize:"75"}
			//..
			]);
			
			[Bindable]
			private var Spacers_AC:ArrayCollection = new ArrayCollection([
			//in mm
			{Width:"20", Label:""},
			{Width:"30", Label:""},
			{Width:"40", Label:""}
			]);
			*/
			
			
			/*			
			[Bindable]
			private var SmallPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var MediumPlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidRed", Label"Solid red", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargePlateStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidYellow", Label:"Solid Yellow", ColorSpec:"blue", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var FoilStyles_AC:ArrayCollection = new ArrayCollection([
			//Either ColorSpec or PatternFile
			{ID:"SolidBlue", Label:"Solid Blue", ColorSpec:"0000", PatternFile:"blah.png", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var Stickers_AC:ArrayCollection = new ArrayCollection([
			{ID:"Dalmation", Label:"Dalmation", Width:"20", Height:"50", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var LargeFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var SmallFlags_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", PriceEUR:"0.00", Discontinued:false, InStock:true}
			]);
			
			[Bindable]
			private var DefaultsByCountry_AC:ArrayCollection = new ArrayCollection([
			{ID:"DE", Label:"Germany", LanguageID:"DE", PlateSizeID:"GL", PlateStyleID:"PlateStyleID",
			FoilStyleID:"FoilID", Date:"112233", SymbolID:"SymbolID", StickerID:"StickerID", FlagID:"FlagID", 
			Currency:"EUR"}
			]);	
			
			private function application1_creationCompleteHandler():void {
			Button_A.addEventListener(MouseEvent.CLICK, AddCharacterAToPlate);
			Button_Au.addEventListener(MouseEvent.CLICK, AddCharacterAuToPlate);
			ClearTextButton.addEventListener(MouseEvent.CLICK, ClearPreview);
			ClearPreviewButton.addEventListener(MouseEvent.CLICK, ClearAll);
			StartOverButton.addEventListener(MouseEvent.CLICK, StartOver);
			}
			
			private function ConvertMMtoPixels {
			//Varies by font family?
			}
			
			private function SetPlateSize(event:MouseEvent) {
			//Change dropdownlist content
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetPlateStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function SetFoilStyle {
			//Change dropdownlist content
			//Warn if not in stock
			//Disallow if discontinued
			//Recalculate price
			}
			
			private function Change1LineTo2Lines(event:MouseEvent) {
			//If plate size is not large, prompt to change
			//If character size is not small, prompt to change character size to small
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function Change2LinesTo1Line(event:MouseEvent) {
			//Prompt to increase character size to medium or large (large if text fits)
			//Need to retain plate contents, if any
			//If contents won't fit new plate size, alert and abort 
			//Recalculate price
			}
			
			private function SetCharacterDimensions(event:MouseEvent) {
			//Prompt to clear text if new-size characters will not fit
			//Recalculate price
			}
			
			private function AddCharacterToPlate(event:MouseEvent) {	
			//Alert if no room to add
			}
			
			private function AddSymbolToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddDateToPlate(event:MouseEvent) {
			//Position as specified
			//Alert if no room to add
			//Recalculate price
			}
			
			private function AddStickerToPlate {	
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddFlagToPlate {
			//Position as specified
			//Alert if no room
			//Recalculate price
			}
			
			private function AddHolesAndCupstoPlate {
			//Position as specified
			//Recalculate price
			}
			*/			
		]]>
	</fx:Script>
	
	<!-- Outer (basic) container -->
	<s:BorderContainer id="OuterContainer"
					   width="540" height="420" horizontalCenter="0" verticalCenter="0" borderVisible="true">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<!-- Inner (vertical) container -->
		<s:BorderContainer id="InnerContainer"
						   x="0" y="0" width="{OuterContainer.width-2}" height="{OuterContainer.height-2}" borderVisible="false" depth="2">
			<s:layout>
				<s:VerticalLayout paddingTop="10" paddingBottom="4" paddingLeft="10" paddingRight="10" gap="0"/>
			</s:layout>
			
			<!--Preview frame (fixed-sized of large plate)-->
			<s:BorderContainer id="PreviewFrame"
							   width="{LargePlateOuterWidth}" height="{LargePlateOuterHeight}" borderVisible="false" depth="1">
				<s:layout>
					<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"/>
				</s:layout>
				
				<!-- Preview container.  Background color or image set via functions -->
				<s:BorderContainer id="PreviewContainer"
								   width="{PlateOuterWidth}" height="{PlateOuterHeight}" horizontalCenter="0" verticalCenter="0"
								   borderVisible="true" borderWeight="2" cornerRadius="8">
					<s:layout>
						<s:BasicLayout clipAndEnableScrolling="true"/>
					</s:layout>
					
					<s:BorderContainer id="PreviewPlateNonImageContainer" depth="1" includeInLayout="false" visible="false"
									   width="{PlateOuterWidth}" height="{PlateOuterHeight}"
									   cornerRadius="7" backgroundColor="{PlateColor}" backgroundAlpha="1">
					</s:BorderContainer>
					<s:BorderContainer id="PreviewPlateImageContainer" depth="1" includeInLayout="false" visible="false"
									   width="{PlateOuterWidth}" height="{PlateOuterHeight}" borderVisible="false" 
									   horizontalCenter="0" verticalCenter="0">
						<s:layout>
							<s:HorizontalLayout clipAndEnableScrolling="true"/>
						</s:layout>
						<s:Image id="PreviewPlateImage" depth="3"
								 x="0" y="0" width="100%" height="100%" horizontalCenter="0" verticalCenter="0"
								 source="{SelectedPlateImage}" fillMode="scale" scaleMode="stretch"/>
					</s:BorderContainer>
					
					<!-- Plate outer (border) container which is bordered and transparent, with invisible border if plate is full size.  Border color is set via function. -->
					<s:BorderContainer id="PlateBorder" depth="5"
									   x="0" y="0" width="100%" height="100%" borderVisible="false" backgroundAlpha="0">
						<s:layout>
							<s:BasicLayout/>
						</s:layout>
						
						<s:BorderContainer id="PreviewBorderImageContainer" visible="true" includeInLayout="true" depth="1"
										   x="0" y="0" width="100%" height="100%" borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout clipAndEnableScrolling="true"/>
							</s:layout>
							<s:Image id="PlateBorderImage"
									 width="100%" height="100%"
									 fillMode="scale" scaleMode="stretch" source="{SelectedFoilBorderImage}"/>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Plate elements container.  BackgroundColor or image set via functions -->
					<s:BorderContainer id="PlateElementsContainer" depth="6"
									   x="{((PlateOuterWidth-PlateInnerWidth)/2)}" y="{((PlateOuterHeight-PlateInnerHeight)/2)}" 
									   width="{PlateInnerWidth-4}" height="{PlateInnerHeight}"
									   horizontalCenter="0" verticalCenter="0" borderVisible="false" backgroundAlpha="0">
						<s:layout>
							<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"
												horizontalAlign="left" verticalAlign="middle" clipAndEnableScrolling="true"/>
						</s:layout>
						
						<!--Multiple containers for potential elements, which are hidden and shown as needed.  Widths are reset by functions"-->
						<s:BorderContainer id="LeftFlagBox"
										   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
													paddingTop="0" paddingBottom="0" gap="0"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="LeftDateBox"
										   width="{DateWidth}" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0" kerning="off">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="LeftSymbolBox"
										   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
													paddingTop="0" paddingBottom="0" gap="0"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="X1"
										   width="{PlateElementsContainer.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="true" visible="true"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="{vgap}" clipAndEnableScrolling="true"
												  paddingTop="5" paddingBottom="5"/>
							</s:layout>
							<s:BorderContainer id="X1A"
											   width="{X1.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="true" visible="true" 
											   borderVisible="false" backgroundAlpha="0">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
								</s:layout>
							</s:BorderContainer>
							<s:BorderContainer id="X1B"
											   width="{X1.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false"
											   borderVisible="false" backgroundAlpha="0">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
								</s:layout>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<!--No width set.  Let the symbol dictate the width-->
						<s:BorderContainer id="CenterSymbolBox"
										   height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
												  paddingTop="5" paddingBottom="5"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="X2"
										   width="0" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="{vgap}" clipAndEnableScrolling="true"
												  paddingTop="5" paddingBottom="5"/>
							</s:layout>
							<s:BorderContainer id="X2A"
											   width="{X2.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false" 
											   borderVisible="false" backgroundAlpha="0">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
								</s:layout>
							</s:BorderContainer>
							<s:BorderContainer id="X2B"
											   width="{X2.width}" height="100%" verticalCenter="0" horizontalCenter="0" includeInLayout="false" visible="false"
											   borderVisible="false" backgroundAlpha="0">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="-1" clipAndEnableScrolling="true"/>
								</s:layout>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<s:BorderContainer id="RightSymbolBox"
										   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
													paddingTop="0" paddingBottom="0"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="RightDateBox"
										   width="{DateWidth}" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0" kerning="off">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"/>
							</s:layout>
						</s:BorderContainer>
						
						<s:BorderContainer id="RightFlagBox"
										   width="0" height="100%" horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
										   borderVisible="false" backgroundAlpha="0">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="0" clipAndEnableScrolling="true"
													paddingTop="0" paddingBottom="0"/>
							</s:layout>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Holes -->
					<s:BorderContainer id="HolesPreview"
									   x="{((PlateOuterWidth-PlateInnerWidth)/2)}" y="{((PlateOuterHeight-PlateInnerHeight)/2)}"
									   width="{PlateInnerWidth}" height="{PlateInnerHeight}" horizontalCenter="0" verticalCenter="0"
									   borderVisible="false" backgroundAlpha="0" depth="10">
						<s:layout>
							<s:BasicLayout clipAndEnableScrolling="true"/>
						</s:layout>
						<s:Ellipse id="TopLeftHole"
								   x="5" y="5" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="TopRightHole"
								   x="501" y="5" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="MiddleLeftHole"
								   x="5" y="49.5" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="MiddleRightHole"
								   x="501" y="49.5" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="BottomLeftHole"
								   x="5" y="94" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="BottomRightHole"
								   x="501" y="94" visible="false" width="8" height="8" depth="1">
							<s:fill>
								<s:SolidColor color="white"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="gray" weight=".25"/>
							</s:stroke>
						</s:Ellipse>
						<!-- Suction cups -->
						<s:Ellipse id="TopLeftCup"
								   x="0" y="0" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="TopRightCup"
								   x="496" y="0" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="MiddleLeftCup"
								   x="0" y="44.5" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="MiddleRightCup"
								   x="496" y="44.5" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="BottomLeftCup"
								   x="0" y="89" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
						<s:Ellipse id="BottomRightCup"
								   x="496" y="89" width="19" height="19" visible="false" depth="2">
							<s:fill>
								<s:SolidColor color="white" alpha=".5"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="white" weight="1.375"/>
							</s:stroke>
						</s:Ellipse>
					</s:BorderContainer>
					
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="3"/>
			
			<!-- Error message and control to clear plate elements -->
			<s:BorderContainer width="100%" height="16" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="right" verticalAlign="top"
										paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
				</s:layout>
				<!-- Controls to reset plate elements -->
				<s:BorderContainer width="100%" height="16" borderVisible="false">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"
											paddingTop="1" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="5"/>				
					</s:layout>
					<s:Button label="LARGE PREVIEW" 
							  width="200" height="14" fontFamily="Arial" fontSize="11" fontWeight="bold"
							  click="SnapshotPreviewPlate(event)"/>
					<s:Spacer width="100%"/>
					<s:BorderContainer width="70" height="16" borderVisible="true" backgroundColor="red">
						<s:layout>
							<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" paddingLeft="2" paddingRight="2"/>
						</s:layout>
						<s:Label text="Price:" styleName="DisplayPrice"/>
						<s:Label text="&#0128;" fontFamily="Arial" fontSize="12"/>
						<s:Label text="{DisplayPrice}" styleName="DisplayPrice" fontWeight="bold"/>
					</s:BorderContainer>
					<s:Spacer width="100%"/>
					<s:HGroup horizontalAlign="right">					
						<s:Button id="UndoButton" label="Undo" 
								  width="35" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="UndoLastAction()"/>
						<s:Button id="ClearButton" label="Clear plate" 
								  width="65" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="ClearPreview()"/>
						<s:Button id="ResetButton" label="Start over"
								  width="55" height="16" verticalCenter="0"
								  chromeColor="white" skinClass="skins.HTMLButtonSkin"
								  fontStyle="normal" styleName="HTMLButton"
								  click="StartOver()"/>
					</s:HGroup>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Controls to set the plate size -->
			<s:BorderContainer width="100%" height="33.9" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout gap="4" verticalAlign="middle"/>
				</s:layout>
				<s:BorderContainer width="30" height="34" borderVisible="false">
					<s:layout>
						<s:VerticalLayout verticalAlign="middle"
										  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<s:Label text="Plate"
							 width="30" height="14" verticalCenter="0"
							 styleName="DirectiveLabel"/>
					<s:Label text="size"
							 width="30" height="14" verticalCenter="0"
							 styleName="DirectiveLabel"/>
				</s:BorderContainer>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   selected="true"
							   click="ChangePlateSize(event,'Large')"/>
				<s:BorderContainer width="{LargePlateOuterWidth*PlateReduction}" height="{LargePlateOuterHeight*PlateReduction}" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout  horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="52cm x 11.3cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'Medium')"/>
				<s:BorderContainer width="{MediumPlateOuterWidth*PlateReduction}" height="{MediumPlateOuterHeight*PlateReduction}" borderVisible="true" cornerRadius="6">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="40cm x 11.3cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'Small')"/>
				<s:BorderContainer width="{SmallPlateOuterWidth*PlateReduction}" height="{SmallPlateOuterHeight*PlateReduction}" borderVisible="true" cornerRadius="5">
					<s:layout>
						<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
					</s:layout>
					<mx:Text text="29cm x 7.5cm"
							 verticalCenter="0"
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
				<s:Spacer width="100%"/>
				<s:RadioButton groupName="PlateSize" width="15" symbolColor="blue"
							   click="ChangePlateSize(event,'House')"/>
				<s:BorderContainer width="{HousePlateLabel.width}" height="100%" borderVisible="false">
					<s:layout>
						<s:BasicLayout clipAndEnableScrolling="true"/>
					</s:layout>
					<s:BorderContainer x="0" y="2" width="{HousePlateOuterWidth*PlateReduction}" height="{HousePlateOuterHeight*PlateReduction}" cornerRadius="3" depth="1"/>
					<s:Label id="HousePlateLabel" text="17.3cm x 11.3cm"
							 x="0" width="60" verticalCenter="0" depth="2" 
							 fontFamily="Arial Narrow" fontSize="11"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<s:Spacer height="1"/>
			
			<!-- Controls to choose orientation et al -->
			<s:BorderContainer width="100%" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"/>				
				</s:layout>
				
				<s:HGroup width="50%" verticalAlign="baseline">
					<s:Label text="Lines"
							 width="40" verticalCenter="0"
							 styleName="DirectiveLabel"/>
					<s:VGroup id="LinesChooser1" width="50%" gap="0" visible="false">
						<s:HGroup width="100%" height="16" verticalAlign="baseline" gap="5">
							<s:RadioButton groupName="LineCount1" 
										   width="10" verticalCenter="0" symbolColor="blue"
										   selected="true"							   
										   click="SetLineCount(1,1)"/>
							<s:Label text="1 line"
									 width="34" verticalCenter="0"
									 fontFamily="Arial" fontSize="11"/>
						</s:HGroup>
						<s:HGroup width="100%" height="16" verticalAlign="baseline" gap="5">
							<s:RadioButton groupName="LineCount1" 
										   width="10" verticalCenter="0"
										   click="SetLineCount(1,2)"/>
							<s:Label text="2 lines"
									 width="36" verticalCenter="0"
									 fontFamily="Arial" fontSize="11"/>
						</s:HGroup>
					</s:VGroup>
					<s:VGroup id="LinesChooser2" width="50%" gap="0" visible="false">
						<s:HGroup width="100%" height="16" verticalAlign="baseline" gap="5">
							<s:RadioButton groupName="LineCount2" 
										   width="10" verticalCenter="0" symbolColor="blue"
										   selected="true"							   
										   click="SetLineCount(2,1)"/>
							<s:Label text="1 line"
									 width="34" verticalCenter="0"
									 fontFamily="Arial" fontSize="11"/>
						</s:HGroup>
						<s:HGroup width="100%" height="16" verticalAlign="baseline" gap="5">
							<s:RadioButton groupName="LineCount2" 
										   width="10" verticalCenter="0"
										   click="SetLineCount(2,2)"/>
							<s:Label text="2 lines"
									 width="36" verticalCenter="0"
									 fontFamily="Arial" fontSize="11"/>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
				
				<s:Spacer width="100%"/>
			
				<s:VGroup width="110" gap="0" visible="{SwitchButton.visible}">
					<s:Label text="Current/next position" styleName="DirectiveLabel"/>
					
					<s:BorderContainer id="SwitchButton" width="110" height="22" horizontalCenter="0" verticalCenter="0" visible="false" includeInLayout="true"
									   chromeColor="gray" borderColor="black" cornerRadius="3" 
									   useHandCursor="true" buttonMode="true" 
									   click="CurrentBox=NextBox; SetNextBoxAndSwitchButtonImage()">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"
											  paddingTop="1" paddingBottom="2" paddingLeft="2" paddingRight="2" gap="3"/>
						</s:layout>
						<s:BorderContainer width="100%" height="16" borderVisible="true" borderWeight=".5">
							<s:layout>
								<s:HorizontalLayout clipAndEnableScrolling="false"/>
							</s:layout>
							<s:Image id="SwitchButtonImage" width="100%" height="100%" 
									 source="" fillMode="scale" scaleMode="stretch"/>
						</s:BorderContainer>
					</s:BorderContainer>
				</s:VGroup>
				<!--Switch button image is set and visibility is toggled via function-->
				
				<s:Spacer width="100%"/>
				
				<s:HGroup width="40%">
					<mx:Text text="Date, symbols, colors, and holes"
							 width="191.4" verticalCenter="0" horizontalCenter="114"
							 leading="0" textAlign="center"
							 styleName="DirectiveLabel"/>
				</s:HGroup>
			</s:BorderContainer>
			
			<s:Spacer height="4"/>
			
			<!-- Outer container for plate content controls -->
			<s:BorderContainer width="100%" height="196" 
							   borderVisible="false">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										gap="8"/>
				</s:layout>
				<s:BorderContainer width="100%" height="100%" 
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0"/>
					</s:layout>
					<!-- Outer container for character buttons -->
					<s:BorderContainer id="CharacterButtonContainer"
									   width="320" height="164"
									   borderVisible="true">
						<s:layout>
							<s:VerticalLayout paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4"
											  gap="2"/>
						</s:layout>
						<s:BorderContainer width="100%" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C1_Button" label="A"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0"
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C2_Button" label="&#196;"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C3_Button" label="B"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C4_Button" label="C" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C5_Button" label="D" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C6_Button" label="E" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C7_Button" label="F" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C8_Button" label="G" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C9_Button" label="H" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C10_Button" label="I" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C11_Button" label="J" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C12_Btn" label="K" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C13_Button" label="L" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C14_Button" label="M" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>	
							<s:Button id="C15_Button" label="N" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C16_Button" label="O" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C17_Button" label="&#214;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C18_Button" label="P" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C19_Button" label="Q" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C20_Button" label="R" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C21_Button" label="S" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C22_Button" label="T" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C23_Button" label="U" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C24_Button" label="&#220;" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C25_Button" label="V" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C26_Button" label="V" color="red"
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C27_Button" label="X" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C28_Button" label="Y" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C29_Button" label="Z" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C30_Button" label="1" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C31_Button" label="2" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C32_Button" label="3" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C33_Button" label="4" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
						</s:BorderContainer>
						<s:BorderContainer width="309" height="37"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
													paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
													gap="2"/>
							</s:layout>
							<s:Button id="C34_Button" label="5" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C35_Button" label="6" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C36_Button" label="7" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C37_Button" label="8" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C38_Button" label="9" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C39_Button" label="0" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}" horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C40_Button" label="-" 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C41_Button" label="." 
									  width="{CharacterButtonWidth}" height="{CharacterButtonHeight}"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Button id="C42_Button" label="?" 
									  width="{CharacterButtonWidth}" height="37"
									  horizontalCenter="0" verticalCenter="0" 
									  styleName="CharacterButton" skinClass="skins.CharacterButtonSkin"
									  click="AddCharacterToPlate(event)"/>
							<s:Spacer width="1"/>
							<s:BorderContainer width="52" 
											   height="37"
											   borderVisible="false">
								<s:layout>
									<s:VerticalLayout horizontalAlign="left" verticalAlign="top"
													  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
								</s:layout>
								<s:BorderContainer width="52"
												   height="22"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" verticalAlign="top"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
															gap="2"/>
									</s:layout>
									<s:Button id="S1_Button" label="" 
											  width="23" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S2_Button" label=""
											  width="15" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
									<s:Button id="S3_Button" label="" 
											  width="10" height="24" 
											  verticalCenter="0" horizontalCenter="0"
											  click="AddCharacterToPlate(event)"/>
								</s:BorderContainer>
								<s:BorderContainer width="52"
												   height="12"
												   borderVisible="false">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="bottom"
															paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"/>
									</s:layout>
									<s:Label text="Spaces"
											 width="40" height="12"
											 fontFamily="Arial" fontSize="11" fontWeight="normal"/>
								</s:BorderContainer>
							</s:BorderContainer>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<s:Spacer height="4"/>
					
					<!-- Controls to set the character size -->
					<s:BorderContainer width="100%" height="15" borderVisible="false">
						<s:layout>
							<s:HorizontalLayout gap="0" verticalAlign="middle"/>
						</s:layout>
						<mx:Text text="Text size"
								 width="63" verticalCenter="0"
								 styleName="DirectiveLabel"/>
						<s:RadioButton id="LargeCharacterRadioButton" 
									   groupName="CharacterSize" width="15" symbolColor="blue"
									   click="SetCharacterSize('Large')"/>
						<mx:Text text="ABC"
								 verticalCenter="0" enabled="{LargeCharacterRadioButton.enabled}"
								 fontFamily="GL-Nummernschild-Eng" fontSize="19.75"/>
						<mx:Text text="(79mm)"
								 verticalCenter="0" enabled="{LargeCharacterRadioButton.enabled}"
								 fontFamily="Arial Narrow" fontSize="12"/>
						<s:Spacer width="100%"/>
						<s:RadioButton id="MediumCharacterRadioButton" 
									   groupName="CharacterSize" width="15" symbolColor="blue"
									   selected="true"
									   click="SetCharacterSize('Medium')"/>
						<mx:Text text="ABC"
								 verticalCenter="0" enabled="{MediumCharacterRadioButton.enabled}"
								 fontFamily="GL-Nummernschild-Eng" fontSize="14.5"/>
						<mx:Text text="(58mm)" 
								 verticalCenter="0" enabled="{MediumCharacterRadioButton.enabled}"
								 fontFamily="Arial Narrow" fontSize="11"/>
						<s:Spacer width="100%"/>
						<s:RadioButton id="SmallCharacterRadioButton"
									   groupName="CharacterSize" width="15" symbolColor="blue"
									   click="SetCharacterSize('Small')"/>
						<mx:Text text="ABC"
								 verticalCenter="0" enabled="{SmallCharacterRadioButton.enabled}"
								 fontFamily="GL-Nummernschild-Eng" fontSize="10"/>
						<mx:Text text="(40mm)"
								 verticalCenter="0" enabled="{SmallCharacterRadioButton.enabled}"
								 fontFamily="Arial Narrow" fontSize="11"/>
					</s:BorderContainer>		
				</s:BorderContainer>
				
				<!-- Outer container for date controls and flag -->
				<s:BorderContainer width="42" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="2" paddingLeft="0" paddingRight="0"
										  gap="6"
										  horizontalAlign="left"/>
					</s:layout>
					
					<!-- Outer container for date controls -->		
					<s:BorderContainer id="DateChooser"
									   width="100%" height="97" 
									   minWidth="0" minHeight="0"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center"
											  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
											  gap="4"/>
						</s:layout>
						
						<!--Can be disabled by function-->
						<s:NumericStepper id="Date1"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="{Date1MaxValue}"
										  toolTip="{Date1ToolTip}"
										  styleName="NumericStepperDate"/>
						<s:NumericStepper id="Date2"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="{Date2MaxValue}"
										  toolTip="{Date2ToolTip}"
										  styleName="NumericStepperDate"/>
						<s:NumericStepper id="Date3"
										  width="100%" height="21" horizontalCenter="0"
										  stepSize="1" maximum="99"
										  toolTip="{Date3ToolTip}"
										  styleName="NumericStepperDate"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddDateToLeftDateBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Add date on left side"
									  click="AddDateToDateBox('LD')"/>
							<s:Button id="AddDateToRightDateBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Add date on right side"
									  click="AddDateToDateBox('RD')"/>
						</s:BorderContainer>
					</s:BorderContainer>
					
					<!-- Flag chooser -->
					<s:BorderContainer id="FlagChooser"
									   width="100%" height="60" borderVisible="false"
									   toolTip="Click on the flag to open the flag gallery to select the flag.  Then click on the 'L' or 'R' button to place the flag"
									   buttonMode="true">
						<s:layout>
							<s:VerticalLayout gap="0" horizontalAlign="center" verticalAlign="top"/>
						</s:layout>
						<s:BorderContainer width="30" height="60" borderVisible="true"
										   buttonMode="true" click="OpenFlagGallery(event)">
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image id="SelectedFlagImage"
									 width="100%" height="100%" horizontalAlign="center" verticalAlign="top"
									 source="{SelectedFlag}" fillMode="scale" scaleMode="stretch"/>
						</s:BorderContainer>
						<s:Image id="FlagGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenFlagGallery(event)"/>
						
						<s:BorderContainer width="100%" height="14"
										   minWidth="0" minHeight="0"
										   borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="center" gap="4"/>
							</s:layout>
							<s:Button id="AddFlagToLeftFlagBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place flag on left side"
									  click="AddFlagToFlagBox(event,'Left')"/>
							<s:Button id="AddFlagFlagBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place flag on right side"
									  click="AddFlagToFlagBox(event,'Right')"/>
						</s:BorderContainer>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!-- Outer container for symbols, plate style, foil style, and holes -->
				<s:BorderContainer width="140.4" height="100%"
								   minWidth="0" minHeight="0"
								   borderVisible="false">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="10"/>
					</s:layout>
					
					<!-- Outer container for symbols -->
					<s:BorderContainer width="100%" height="57"
									   borderVisible="false">
						<s:layout>
							<s:HorizontalLayout verticalAlign="top"
												paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												gap="0"/>
						</s:layout>
						
						<!-- Symbol chooser.  Symbol is set via function -->
						<s:BorderContainer id="SymbolChooser" width="57" height="63" horizontalCenter="0" verticalCenter="0" borderVisible="false"
										   toolTip="Click on the symbol to open the symbol gallery.  Then click on the 'x', 'L', 'C', or 'R' button to place the symbol"
										   click="OpenSymbolGallery(event)">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="0"/>
							</s:layout>
							<s:BorderContainer width="57" height="57" horizontalCenter="0" verticalCenter="0" borderVisible="true">
								<s:layout>
									<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"/>
								</s:layout>	
								<s:BorderContainer id="SelectedSymbolFrame"
												   width="100%" height="100%" horizontalCenter="0" verticalCenter="0"
												   buttonMode="true" borderVisible="false" backgroundAlpha="0">
									<s:layout>
										<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
									</s:layout>
									<!--s:Image width="100%" height="100%" source="{SelectedSymbol}"/-->
								</s:BorderContainer>
							</s:BorderContainer>
							<s:Image id="SymbolGalleryButton"
									 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
									 source="{DownTriangle}"
									 buttonMode="true" click="OpenSymbolGallery(event)"/>
						</s:BorderContainer>
						<s:Spacer width="3"/>
						<s:BorderContainer width="14" height="59" borderVisible="false" enabled="{SymbolChooser.enabled}">
							<s:layout>
								<s:VerticalLayout gap="1"/>
							</s:layout>
							<s:Button id="AddSymbolToCurrentBoxButton" label="X"
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place symbol in current position"
									  click="AddSymbolToCurrentBox(event)"/>
							<s:Button id="AddSymbolToLeftSymbolBoxButton" label="L" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place symbol on left side"
									  click="AddSymbolToSymbolBox(event,'Left')"/>
							<s:Button id="AddSymbolToCenterSymbolBox" label="C" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place symbol in center"
									  click="AddSymbolToSymbolBox(event,'Center')"/>
							<s:Button id="AddSymbolToRightSymbolBoxButton" label="R" 
									  width="14" height="14"
									  styleName="PositioningButton" skinClass="skins.CharacterButtonSkin"
									  toolTip="Place symbol on left side"
									  click="AddSymbolToSymbolBox(event,'Right')"/>
						</s:BorderContainer>
						
						<s:Spacer width="8"/>
						
					</s:BorderContainer>
					
					<!-- Outer container for plate, foil, and holes controls -->
					<s:BorderContainer width="140" height="100%" borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="top" gap="0"/>
						</s:layout>
						
						<!-- Plate chooser -->
						<s:BorderContainer id="Plate_MiniPlateFrame"
										   width="140.4" height="30.51" borderVisible="true" borderColor="black" 
										   toolTip="Click on the plate to open the plate gallery to select the plate style"
										   buttonMode="true" click="OpenPlateGallery(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0" 
												  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<s:BorderContainer id="Plate_MiniPlateNonImageContainer" includeInLayout="false" visible="false"
											   width="100%" height="{Plate_MiniPlateFrame.height-5}"
											   cornerRadius="3" borderVisible="true" borderColor="{PlateColor}" borderAlpha="1" borderWeight="2">
								<s:layout>
									<s:VerticalLayout paddingTop=".175" paddingBottom=".175" paddingLeft=".175" paddingRight=".175" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate NonImage-->
								<s:BorderContainer id="Plate_MiniPlateInnerNonImageContainer"
												   width="{Plate_MiniPlateNonImageContainer.width-4.25}" height="{Plate_MiniPlateNonImageContainer.height-4}" 
												   borderWeight=".175" cornerRadius="3" borderColor="white" borderAlpha=".8" 
												   backgroundColor="{PlateColor}" backgroundAlpha="1"/>
							</s:BorderContainer>
							
							<s:BorderContainer id="Plate_MiniPlateImageContainer" includeInLayout="false" visible="false"
											   width="{Plate_MiniPlateFrame.width-2}" height="{Plate_MiniPlateFrame.height-4}"
											   cornerRadius="3" borderVisible="true" borderColor="black" borderAlpha="1" borderWeight="1">
								<s:layout>
									<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0" 
													  verticalAlign="middle" horizontalAlign="center" clipAndEnableScrolling="true"/>
								</s:layout>
								
								<!--Plate MiniPlate image-->
								<s:BorderContainer id="Plate_MiniPlateInnerImageContainer"
												   width="100%" height="100%" cornerRadius="3" borderVisible="false">					   
									<s:layout>
										<s:BasicLayout clipAndEnableScrolling="true"/>
									</s:layout>
									<s:Image id="Plate_MiniPlateImage" width="100%" height="{Plate_MiniPlateImageContainer.height-3}" depth="1"
											 horizontalAlign="center" verticalAlign="middle"
											 source="{SelectedPlateImage}" fillMode="scale" scaleMode="stretch"/>
									<s:Rect id="Plate_MiniPlateImageFrame" width="100%" height="100%" radiusX="3" radiusY="3" depth="2">                          
										<s:stroke>
											<s:SolidColorStroke weight="2" color="black" alpha="1"/>
										</s:stroke>
										<s:fill>
											<s:SolidColor alpha="0"/>
										</s:fill>
									</s:Rect>
								</s:BorderContainer>
								
							</s:BorderContainer>
							
						</s:BorderContainer>
						
						<s:Image id="PlateGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenPlateGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Foil chooser -->
						<s:BorderContainer id="Foil_MiniPlateFrame" width="140.4" height="30.51" horizontalCenter="0" verticalCenter="0" borderVisible="true"	
										   toolTip="Click on the plate to open the foil gallery to select the foil style"
										   buttonMode="true" click="OpenFoilGallery(event)">
							<s:layout>
								<s:VerticalLayout paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2" gap="0" 
												  horizontalAlign="center" verticalAlign="middle" clipAndEnableScrolling="true"/>
							</s:layout>
							
							<!--Foil MiniPlate image-->
							<s:BorderContainer id="Foil_MiniPlateImageContainer"
											   width="100%" height="{Foil_MiniPlateFrame.height-6}" 
											   horizontalCenter="0" verticalCenter="0" borderVisible="false">			   
								<s:layout>
									<s:HorizontalLayout clipAndEnableScrolling="true"/>
								</s:layout>
								<s:Image id="Foil_MiniPlateImage"
										 width="100%" height="100%" horizontalCenter="0" verticalCenter="0" depth="1"
										 horizontalAlign="center" verticalAlign="middle"
										 source="{SelectedFoilBorderImage}" fillMode="scale" scaleMode="stretch">
								</s:Image>
							</s:BorderContainer>
						</s:BorderContainer>
						
						<s:Image id="FoilGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenFoilGallery(event)"/>
						
						<s:Spacer height="1"/>
						
						<!-- Holes chooser -->
						<s:BorderContainer id="HolesChooser"
										   width="140.4" height="30.51" borderVisible="true"										   
										   buttonMode="true" click="OpenHolesGallery(event)"
										   toolTip="Click on the plate to open the holes and cups gallery to select the holes and cups style">
							<s:layout>
								<s:VerticalLayout paddingTop="1.5" paddingBottom="1.5" paddingLeft="1.5" paddingRight="1.5" gap="0"/>
							</s:layout>
							
							<s:Image id="SelectedHolesImage"
									 width="100%" height="100%" 
									 horizontalCenter="0" horizontalAlign="center" verticalCenter="0" verticalAlign="middle"
									 source="{SelectedHoles}" fillMode="scale" scaleMode="stretch"/>
						</s:BorderContainer>
						<s:Image id="HolesGalleryButton"
								 width="16" height="10" verticalAlign="top" verticalCenter="0" horizontalAlign="center" horizontalCenter="0" 
								 source="{DownTriangle}"
								 buttonMode="true" click="OpenHolesGallery(event)"/>
					</s:BorderContainer>
				</s:BorderContainer>
				
			</s:BorderContainer>
		</s:BorderContainer>
		
		<!--Height and width and padding involve GalleryList-->
		<component:CustomTitleWindow id="GalleryWindow" title=""
									 x="10" y="127" width="323" height="268" headerHeight="14" visible="false"
									 borderVisible="true" borderColor="blue" dropShadowVisible="true" skinClass="skins.CustomTitleWindowSkin" depth="10"
									 close="CloseGallery_()">
			<s:VGroup width="100%" height="100%" paddingTop="-5" paddingBottom="-5" paddingLeft="10" paddingRight="0" gap="0" clipAndEnableScrolling="true">
				
				<mx:ViewStack id="Galleries" width="100%" height="100%" clipContent="true" creationPolicy="auto"
							  paddingTop="5" paddingBottom="5" paddingRight="0" change="Galleries_changeHandler(event)">
					
					<s:NavigatorContent id="SmallPlateGallery" width="100%" height="100%">			
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="PlateGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout id="SmallPlateGalleryTileLayout"
											  columnWidth="97.64" rowHeight="25.25" requestedColumnCount="1" requestedRowCount="7"
											  columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap" verticalGap="3"
											  paddingTop="10" paddingBottom="10" 
											  paddingLeft="{((GalleryWindow.width-VerticalScrollbarWidth)-SmallPlateGalleryTileLayout.columnWidth)/2}"
											  paddingRight="{((GalleryWindow.width-VerticalScrollbarWidth)-SmallPlateGalleryTileLayout.columnWidth)/2}"
											  horizontalAlign="center" verticalAlign="middle"
											  clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:BorderContainer id="S_GP_A_Black" width="{SmallPlateGalleryTileLayout.columnWidth}" height="{SmallPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'BlackPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="S_GP_B_Black" width="{S_GP_A_Black.width-2}" height="{S_GP_A_Black.height-2}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="S_GP_C_Black" width="{S_GP_B_Black.width-6}" height="{S_GP_B_Black.height-6}"
															   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="S_GP_A_White" width="{SmallPlateGalleryTileLayout.columnWidth}" height="{SmallPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'WhitePlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="S_GP_B_White" width="{S_GP_A_White.width-2}" height="{S_GP_A_White.height-2}"
														   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="S_GP_C_White" width="{S_GP_B_White.width-6}" height="{S_GP_B_White.height-6}"
															   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="S_GP_A_LimeGreen" width="{SmallPlateGalleryTileLayout.columnWidth}" height="{SmallPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'LimeGreenPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="S_GP_B_LimeGreen" width="{S_GP_A_LimeGreen.width-2}" height="{S_GP_A_LimeGreen.height-2}"
														   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="S_GP_C_LimeGreen" width="{S_GP_B_LimeGreen.width-6}" height="{S_GP_B_LimeGreen.height-6}"
															   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:Image width="{SmallPlateGalleryTileLayout.columnWidth}" height="{SmallPlateGalleryTileLayout.rowHeight}"
											 fillMode="scale" scaleMode="stretch" source="assets/plates/solid/White.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Black.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/BrightGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkBlue.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkYellow.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LightGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LimeGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/OliveGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Orange.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Pink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Purple.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Red.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ReflexWhite.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ShockingPink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Silver.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/YellowGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Bayern.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/BlueDiamonds.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GermanFlagColors.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>									
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterBlue.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreen.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreenRainbow.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterRed.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Rainbow.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Raindrops.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Space.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Woodgrain.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								</s:ArrayList>
							</s:dataProvider>
						</s:List>					
					</s:NavigatorContent>
					
					<s:NavigatorContent id="MediumPlateGallery" width="100%" height="100%">			
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="MediumPlateGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout id="MediumPlateGalleryTileLayout"
											  rowHeight="38" columnWidth="134.51" requestedColumnCount="1" requestedRowCount="6"
											  columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap" verticalGap="3"
											  paddingTop="10" paddingBottom="10"
											  paddingLeft="{((GalleryWindow.width-VerticalScrollbarWidth)-MediumPlateGalleryTileLayout.columnWidth)/2}"
											  paddingRight="{((GalleryWindow.width-VerticalScrollbarWidth)-MediumPlateGalleryTileLayout.columnWidth)/2}"
											  horizontalAlign="center" verticalAlign="middle"
											  clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:BorderContainer id="M_GP_A_Black" 
													   width="{MediumPlateGalleryTileLayout.columnWidth}" height="{MediumPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'BlackPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="M_GP_B_Black" width="{M_GP_A_Black.width-2}" height="{M_GP_A_Black.height-2}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="M_GP_C_Black" width="{M_GP_B_Black.width-6}" height="{M_GP_B_Black.height-6}"
															   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="M_GP_A_White" width="{MediumPlateGalleryTileLayout.columnWidth}" height="{MediumPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'WhitePlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="M_GP_B_White" width="{M_GP_A_White.width-2}" height="{M_GP_A_White.height-2}"
														   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="M_GP_C_White" width="{M_GP_B_White.width-6}" height="{M_GP_B_White.height-6}"
															   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="M_GP_A_LimeGreen" width="{MediumPlateGalleryTileLayout.columnWidth}" height="{MediumPlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'LimeGreenPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="M_GP_B_LimeGreen" width="{M_GP_A_LimeGreen.width-2}" height="{M_GP_A_LimeGreen.height-2}"
														   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="M_GP_C_LimeGreen" width="{M_GP_B_LimeGreen.width-6}" height="{M_GP_B_LimeGreen.height-6}"
															   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/White.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Black.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/BrightGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkBlue.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkYellow.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LightGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LimeGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/OliveGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Orange.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Pink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Purple.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Red.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ReflexWhite.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ShockingPink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Silver.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/YellowGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Bayern.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/BlueDiamonds.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GermanFlagColors.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>									
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterBlue.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreen.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreenRainbow.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterRed.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Rainbow.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Raindrops.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Space.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Woodgrain.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								</s:ArrayList>
							</s:dataProvider>
						</s:List>					
					</s:NavigatorContent>

					<s:NavigatorContent id="LargePlateGallery" width="100%" height="100%">			
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="LargePlateGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout id="LargePlateGalleryTileLayout"
											  rowHeight="38" columnWidth="174.87" requestedColumnCount="1" requestedRowCount="6"
											  columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap" verticalGap="3"
											  paddingTop="10" paddingBottom="10"
											  paddingLeft="{((GalleryWindow.width-VerticalScrollbarWidth)-LargePlateGalleryTileLayout.columnWidth)/2}"
											  paddingRight="{((GalleryWindow.width-VerticalScrollbarWidth)-LargePlateGalleryTileLayout.columnWidth)/2}"
											  horizontalAlign="center" verticalAlign="middle"
											  clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:BorderContainer id="L_GP_A_Black" width="{LargePlateGalleryTileLayout.columnWidth}" height="{LargePlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x000000" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'BlackPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="L_GP_B_Black" width="{L_GP_A_Black.width-2}" height="{L_GP_A_Black.height-2}"
														   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="L_GP_C_Black" width="{L_GP_B_Black.width-6}" height="{L_GP_B_Black.height-6}"
															   backgroundColor="0x000000" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="L_GP_A_White" width="{LargePlateGalleryTileLayout.columnWidth}" height="{LargePlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0xffffff" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'WhitePlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="L_GP_B_White" width="{L_GP_A_White.width-2}" height="{L_GP_A_White.height-2}"
														   backgroundColor="0xe6e6e6" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="L_GP_C_White" width="{L_GP_B_White.width-6}" height="{L_GP_B_White.height-6}"
															   backgroundColor="0xffffff" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:BorderContainer id="L_GP_A_LimeGreen" width="{LargePlateGalleryTileLayout.columnWidth}" height="{LargePlateGalleryTileLayout.rowHeight}"
													   backgroundColor="0x00ff00" backgroundAlpha=".5" styleName="GalleryPlate_A"
													   click="SelectPlateGalleryNonImage(event,'LimeGreenPlate'); CloseGallery(event);">
										<s:layout>
											<s:HorizontalLayout paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1" clipAndEnableScrolling="true"/>
										</s:layout>
										<s:BorderContainer id="L_GP_B_LimeGreen" width="{L_GP_A_LimeGreen.width-2}" height="{L_GP_A_LimeGreen.height-2}"
														   backgroundColor="0x00e600" backgroundAlpha="1" styleName="GalleryPlate_B">
											<s:layout>
												<s:HorizontalLayout paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" clipAndEnableScrolling="true"/>
											</s:layout>
											<s:BorderContainer id="L_GP_C_LimeGreen" width="{L_GP_B_LimeGreen.width-6}" height="{L_GP_B_LimeGreen.height-6}"
															   backgroundColor="0x00ff00" backgroundAlpha="1" styleName="GalleryPlate_C">
											</s:BorderContainer>								
										</s:BorderContainer>
									</s:BorderContainer>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/White.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Black.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/BrightGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkBlue.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/DarkYellow.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LightGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/LimeGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/OliveGreen.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Orange.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Pink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Purple.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Red.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ReflexWhite.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/ShockingPink.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/Silver.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/solid/YellowGreen.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Bayern.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/BlueDiamonds.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GermanFlagColors.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>									
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterBlue.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreen.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterGreenRainbow.jpg" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/GlitterRed.jpg"
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Rainbow.jpg" 
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Raindrops.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Space.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/metallic/Woodgrain.jpg"
											 click="SelectPlateGalleryImage(event,false); CloseGallery(event);"/>
								</s:ArrayList>
							</s:dataProvider>
						</s:List>					
					</s:NavigatorContent>

					<s:NavigatorContent id="HousePlateGallery" width="100%" height="100%">			
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="HousePlateGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout id="HousePlateGalleryTileLayout"
											  rowHeight="38" columnWidth="58.29" requestedColumnCount="1" requestedRowCount="6"
											  columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap" verticalGap="3"
											  paddingTop="10" paddingBottom="10"
											  paddingLeft="{(GalleryWindow.width-HousePlateGalleryTileLayout.columnWidth)/2}"
											  paddingRight="{(GalleryWindow.width-HousePlateGalleryTileLayout.columnWidth)/2}"
											  horizontalAlign="center" verticalAlign="middle"
											  clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/house/HouseWhite.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/plates/house/HouseBlue.png" 
											 click="SelectPlateGalleryImage(event,true); CloseGallery(event);"/>
								</s:ArrayList>
							</s:dataProvider>
						</s:List>					
					</s:NavigatorContent>
					
					<!-- Data provider and horizontalGap is set via function -->
					<s:NavigatorContent id="FoilGallery" width="100%" height="100%">				
						<!--Height and width and padding involve GalleryWindow.  DataProvider set via function-->
						<s:List id="FoilGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<layouts:FlowLayout padding="10" horizontalGap="{FoilGalleryListHorizontalGap}" verticalGap="6"/>
							</s:layout>
						</s:List>					
					</s:NavigatorContent>
					
					<s:NavigatorContent id="HolesGallery" width="100%" height="100%" >
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="HolesGalleryList" width="100%" height="100%" 
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout rowHeight="38" columnWidth="275" requestedColumnCount="1" requestedRowCount="6"
											  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" verticalGap="3"
											  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourCups.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopCups.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleCups.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomCups.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/FourHoles.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/TopHoles.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/MiddleHoles.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/BottomHoles.png" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/holes/NoneNone.jpg" 
											 click="SelectHolesGalleryImage(event); CloseGallery(event);"/>
								</s:ArrayList>		
							</s:dataProvider>
						</s:List>					
					</s:NavigatorContent>
					
					<s:NavigatorContent id="FlagGallery" width="100%" height="100%">				
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="FlagGalleryList" width="100%" height="100%"
								borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout rowHeight="68" columnWidth="34" requestedColumnCount="7" requestedRowCount="3"
											  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="8" verticalGap="8"
											  paddingTop="10" paddingBottom="10" paddingRight="5" clipAndEnableScrolling="true"/>
							</s:layout>
							<s:dataProvider>
								<s:ArrayList>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/A.jpg" 
											 click="SelectFlagGalleryImage(event,'Austria'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/AL.jpg" 
											 click="SelectFlagGalleryImage(event,'Albania'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/B.jpg" 
											 click="SelectFlagGalleryImage(event,'Belgium'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/BG.jpg" 
											 click="SelectFlagGalleryImage(event,'Bulgaria'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/BIH.jpg" 
											 click="SelectFlagGalleryImage(event,'Bosnia'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/CZ.jpg" 
											 click="SelectFlagGalleryImage(event,'Czech Republic'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/D.jpg" 
											 click="SelectFlagGalleryImage(event,'Germany'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/DK.jpg" 
											 click="SelectFlagGalleryImage(event,'Denmark'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/E.jpg" 
											 click="SelectFlagGalleryImage(event,'Spain'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/EST.jpg" 
											 click="SelectFlagGalleryImage(event,'Estonia'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/F.jpg" 
											 click="SelectFlagGalleryImage(event,'France'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/FIN.jpg" 
											 click="SelectFlagGalleryImage(event,'Finland'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/GB.jpg" 
											 click="SelectFlagGalleryImage(event,'Great Britain'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/GR.jpg" 
											 click="SelectFlagGalleryImage(event,'Greece'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/H.jpg" 
											 click="SelectFlagGalleryImage(event,'Hungary'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/IRL.jpg" 
											 click="SelectFlagGalleryImage(event,'Ireland'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/L.jpg" 
											 click="SelectFlagGalleryImage(event,'Luxembourg'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/M.jpg" 
											 click="SelectFlagGalleryImage(event,'Malta'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/NL.jpg" 
											 click="SelectFlagGalleryImage(event,'Netherlands'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/P.jpg" 
											 click="SelectFlagGalleryImage(event,'Portugal'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/PL.jpg" 
											 click="SelectFlagGalleryImage(event,'Poland'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/RO.jpg" 
											 click="SelectFlagGalleryImage(event,'Romania'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/S.jpg" 
											 click="SelectFlagGalleryImage(event,'Sweden'); CloseGallery(event);"/>
									<s:Image width="100%" height="100%" fillMode="scale" scaleMode="stretch" source="assets/flags/SK.jpg" 
											 click="SelectFlagGalleryImage(event,'Slovakia'); CloseGallery(event);"/>
								</s:ArrayList>		
							</s:dataProvider>
						</s:List>
					</s:NavigatorContent>
					
					<!--Data provider array collection is in Declarations-->
					<s:NavigatorContent id="SymbolGallery" width="100%" height="100%">		
						<!--Height and width and padding involve GalleryWindow-->
						<s:List id="SymbolGalleryList" width="100%" height="100%" borderVisible="false"
								horizontalScrollPolicy="off" verticalScrollPolicy="auto"
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0" verticalCenter="0">
							<s:layout>
								<s:TileLayout rowHeight="42" columnWidth="42" requestedColumnCount="6"
											  columnAlign="justifyUsingGap" rowAlign="justifyUsingGap" horizontalGap="0" verticalGap="0"
											  horizontalAlign="center" verticalAlign="middle" paddingTop="5" paddingBottom="5" paddingRight="5" clipAndEnableScrolling="true"/>
							</s:layout>
						</s:List>					
					</s:NavigatorContent>
					
				</mx:ViewStack>
				
			</s:VGroup>
		</component:CustomTitleWindow>
		
	</s:BorderContainer>
	
</s:Application>