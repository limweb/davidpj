<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:component="component.*"
			   xmlns:local="*"
			   minWidth="955" minHeight="600" xmlns:components="components.*" >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style source="Styles.css"/>
	
	<fx:Script>
		<![CDATA[
			import components.MultiChoiceComponent2;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.AdvancedDataGridEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable] private var CheckBoxWidth:Number=14;		
			[Bindable] private var CBW:Number=CheckBoxWidth;
			[Bindable] private var InfoButtonWidth:Number=14;
			[Bindable] private var IBW:Number=InfoButtonWidth;
			[Bindable] private var DispositionToggleWidth:Number=10;
			[Bindable] private var DTW:Number=DispositionToggleWidth;
			[Bindable] private var DeleteButtonWidth:Number=14;
			[Bindable] private var DBW:Number=DeleteButtonWidth;
			
			private var MultiChoice:MultiChoiceComponent2;
			private var SelectedLanguage:String;
			private var popUpGapY:Number = 5;
			private var popUpGapX:Number = 4;
			
			[Bindable]
			private var ConfigValues:ArrayCollection = new ArrayCollection(
				[
					{EntityType:"SysConfig", EntityName:"Language1Code:", EntityValue:"us_en", 
						EntityString:"English", EntityIcon:"assets/flags/us.jpg"},
					{EntityType:"SysConfig", EntityName:"Language2Code:", EntityValue:"nl_nl", 
						EntityString:"Dutch", EntityIcon:"assets/flags/nl.jpg"},
					{EntityType:"SysConfig", EntityName:"Language3Code:", EntityValue:"be_fr", 
						EntityString:"French", EntityIcon:"assets/flags/fr.jpg"},
					{EntityType:"SysConfig", EntityName:"Language4Code:", EntityValue:"de_de", 
						EntityString:"German", EntityIcon:"assets/flags/de.jpg"},
					{EntityType:"SysConfig", EntityName:"PrimaryLanguage:", EntityValue:"1"}
				]);
			
			[Bindable]
			private var FF_m_AC:ArrayCollection = new ArrayCollection(
				[
					{EntityType:"Field", ObjId:"1", Name:"Field1Name", Description:"Field1Description",
						Type:"Text", Precision:"", MinLength:"1", MaxLength:"40", MinValue:"", MaxValue:"", 
						InitialValue:"MultiChoiceLabel1", FieldControl:"TextInput", Enabled:true, checked:false},
					{EntityType:"Field", ObjId:"2", Name:"Field2Name", Description:"Field2Description",
						Type:"Text", Precision:"", MinLength:"1", MaxLength:"40", MinValue:"", MaxValue:"", 
						InitialValue:"MultiChoiceLabel1", FieldControl:"TextInput", Enabled:true, checked:false},
					{EntityType:"Field", ObjId:"3", Name:"Field3Name", Description:"Field3Description",
						Type:"Text", Precision:"", MinLength:"1", MaxLength:"40", MinValue:"", MaxValue:"", 
						InitialValue:"MultiChoiceLabel1", FieldControl:"TextInput", Enabled:true, checked:false}
				]);

			[Bindable]
			private var FF_ObjId_n_AC:ArrayCollection = new ArrayCollection(
				[
					{EntityType:"MultiChoice", Sequence:"1", FieldName:"FieldName",
						Lang1Label:"Lang1Label1", Lang1Value:"Lang1Value1",
						Lang2Label:"Lang2Label1", Lang2Value:"Lang2Value1",
						Lang3Label:"Lang3Label1", Lang3Value:"Lang3Value1",
						Lang4Label:"Lang4Label1", Lang4Value:"Lang4Value1",
						Disposition:"Enabled", checked:false},
					{EntityType:"MultiChoice", Sequence:"2", FieldName:"FieldName",
						Lang1Label:"Lang1Label2", Lang1Value:"Lang1Value2",
						Lang2Label:"Lang2Label2", Lang2Value:"Lang2Value2",
						Lang3Label:"Lang3Label2", Lang3Value:"Lang3Value2",
						Lang4Label:"Lang4Label2", Lang4Value:"Lang4Value2",
						Disposition:"Enabled", checked:false},
					{EntityType:"MultiChoice", Sequence:"3", FieldName:"FieldName",
						Lang1Label:"Lang1Label3", Lang1Value:"Lang1Value3",
						Lang2Label:"Lang2Label3", Lang2Value:"Lang2Value3",
						Lang3Label:"Lang3Label3", Lang3Value:"Lang3Value3",
						Lang4Label:"Lang4Label3", Lang4Value:"Lang4Value3",
						Disposition:"Enabled", checked:false},
				]);
			
			[Bindable]
			public var FF_MultiChoice_TB_AC:ArrayCollection = new ArrayCollection(
				[
					{Entity:"TabSpec", LangNo:"1", LangCode:"us_en", Label:"EN", Icon:"assets/flags/us.jpg", ToolTip:"English"},
					{Entity:"TabSpec", LangNo:"2", LangCode:"nl_nl", Label:"NL", Icon:"assets/flags/nl.jpg", ToolTip:"Dutch"},
					{Entity:"TabSpec", LangNo:"3", LangCode:"fr_fr", Label:"FR", Icon:"assets/flags/fr.jpg", ToolTip:"French"},
					{Entity:"TabSpec", LangNo:"4", LangCode:"de_de", Label:"DE", Icon:"assets/flags/de.jpg", ToolTip:"German"},
				]);
						
			protected function FF_m_DG_itemEditBeginHandler(event:AdvancedDataGridEvent):void
			{
				// TODO Auto-generated method stub
				trace("edit");
				trace("columnIndex:" + event.columnIndex);
				trace("rowIndex:" + event.rowIndex);
				PopUpManager.removePopUp(MultiChoice);
				MultiChoice = new MultiChoiceComponent2();
				MultiChoice.FF_ObjId_n_AC = this.FF_ObjId_n_AC;

				trace(FF_m_DG.x);
				trace(FF_m_DG.y);
				//PopUpManager.addPopUp(MultiChoice,FF_m_DG,false);
				//PopUpManager.centerPopUp(ttw);
				//var globalX:Number = localToGlobal(new Point(myIcon.x, myIcon.y)).x;
				//var globalY:Number = localToGlobal(new Point(myIcon.x, myIcon.y)).y;
				var arr:Array = FF_m_DG.columns;
				var xPos:int = 0;
				var yPos:int = 0;
				for (var i:int = 0; i<event.columnIndex; i++){
					xPos = xPos + AdvancedDataGridColumn(arr[i]).width;
				}
				//Alert.show(String(xPos));
				MultiChoice.x = xPos - MultiChoice.FF_MultiChoice_DG_Checkbox.width - 
					MultiChoice.FF_MultiChoice_DG_Information.width - 
					MultiChoice.FF_MultiChoice_DG_Disposition.width + popUpGapX;
				MultiChoice.y = FF_m_DG.rowHeight*(event.rowIndex+1) + popUpGapY;
				MultiChoice.width = MultiChoice.width - MultiChoice.FF_MultiChoice_DG_Lang1Label.width + 
					AdvancedDataGridColumn(arr[event.columnIndex]).width;
				MultiChoice.FF_MultiChoice_TB_AC = this.FF_MultiChoice_TB_AC;
				MultiChoice.FF_MultiChoice_DG_Lang1Label.width = AdvancedDataGridColumn(arr[event.columnIndex]).width;
				PopUpManager.addPopUp(MultiChoice,this,false);
			}
			
			protected function FF_m_DG_itemEditEndHandler(event:AdvancedDataGridEvent):void
			{
				// TODO Auto-generated method stub
				//PopUpManager.removePopUp(MultiChoice);
			}
			
			
		]]>
	</fx:Script>
	
	<s:SkinnableContainer id="skc" width="100%" height="100%">
		
		<components:CustomTitleWindow title="Field Master"
									 x="0" y="0" depth="1"
									 width="100%" height="200" headerHeight="18" borderVisible="true" dropShadowVisible="false"
									 skinClass="skin.CustomTitleWindowSkin">
			
			<s:VGroup width="100%" height="100%">
				
				<mx:AdvancedDataGrid id="FF_m_DG"
									 width="100%" height="100%" borderVisible="false"
									 headerHeight="20" rowHeight="20" rowCount="20"
									 horizontalScrollPolicy="off" verticalScrollPolicy="auto"
									 dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"
									 sortExpertMode="true"
									 headerStyleName="DataGridHeader" styleName="DataGridBody"
									 dataProvider="{FF_m_AC}" editable="true" itemEditBegin="FF_m_DG_itemEditBeginHandler(event)" itemEditEnd="FF_m_DG_itemEditEndHandler(event)">
					<mx:columns>
						<mx:AdvancedDataGridColumn id="FF_m_DG_Checkbox"
												   dataField="checked"
												   width="{(FF_m_DG.width-FF_m_DG.width)+CBW}"
												   headerRenderer="headerRenderer.ThreeStateCheckBoxHeaderRenderer"
												   itemRenderer="itemRenderer.CheckBoxItemRenderer"
												   rendererIsEditor="false" editable="false"/>
						<mx:AdvancedDataGridColumn id="FF_m_DG_Information"
												   width="{(FF_m_DG.width-FF_m_DG.width)+IBW}" editable="false"
												   headerRenderer="headerRenderer.InfoIconHeaderRenderer"
												   itemRenderer="itemRenderer.InfoButtonItemRenderer"/>
						<mx:AdvancedDataGridColumn id="FF_m_DG_Disposition"
												   dataField="Disposition"
												   width="{(FF_m_DG.width-FF_m_DG.width)+DTW}"
												   headerRenderer="headerRenderer.DispositionToggleButtonHeaderRenderer"
												   itemRenderer="itemRenderer.DispositionToggleButtonItemRenderer"/>
						<mx:AdvancedDataGridColumn id="FF_m_DG_Label" headerText="Field Label" dataField="Label" width="120" editable="true"/>
						<mx:AdvancedDataGridColumn id="FF_m_DG_FieldControl" headerText="Field Control" dataField="FieldControl" width="120" editable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox paddingTop="1" paddingBottom="1" paddingLeft="1" paddingRight="1">
										<fx:Script>
											<![CDATA[
												import mx.collections.ArrayCollection;
												import mx.events.AdvancedDataGridEvent;
												import mx.events.FlexEvent;
												import mx.managers.FocusManager;
												import mx.utils.StringUtil;
												
												import spark.events.IndexChangeEvent;
												
												[Bindable]
												private var FC_AC:ArrayCollection = new ArrayCollection
													([
														{Label:"Text Box", Data:"TextInput", Selected:true},
														{Label:"Drop Down List", Data:"DropDownList", Selected:false}
													]);
												
												private function AssignFieldControl(event):void
												{
													var FC_DD_Data:Object = event.target.selectedItem as Object;
													data.FieldControl = FC_DD_Data.Data;
												}
												
												protected function FC_DD_creationCompleteHandler(event:FlexEvent):void
												{
													// TODO Auto-generated method stub
													data;
													if (String(data.FieldControl).toLowerCase() == "TextInput"){
														FC_DD.selectedIndex = 0;
													}else if (String(data.FieldControl).toLowerCase() == "DropDownList"){
														FC_DD.selectedIndex = 1;
													}else{
														FC_DD.selectedIndex = 0;
													}
												}																						
											]]>
										</fx:Script>
										<components:CustomDropDownList id="FC_DD"
																	  width="100%" height="100%" 
																	  verticalCenter="0" dropShadowVisible="false" visible="true"
																	  mouseEnabled="true" enabled="true" 
																	  styleName="DropDownListText"
																	  dataProvider="{FC_AC}" labelField="Label"
																	  creationComplete="FC_DD_creationCompleteHandler(event)"
																	  change="AssignFieldControl(event)">																			
										</components:CustomDropDownList>
									</mx:VBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:AdvancedDataGridColumn>
						<mx:AdvancedDataGridColumn id="FF_m_DG_InitialValue" headerText="Initial Value" dataField="InitialValue" width="160" />
						<mx:AdvancedDataGridColumn id="FF_m_DG_TestCol1" headerText="TestCol1" dataField="L1Label" width="160" />
						<mx:AdvancedDataGridColumn id="FF_m_DG_TestCol2" headerText="TestCol2" dataField="L1Label" width="160" />
						<mx:AdvancedDataGridColumn id="FF_m_DG_TestCol3" headerText="TestCol3" dataField="L1Label" width="160" />
					</mx:columns>
				</mx:AdvancedDataGrid>
				
			</s:VGroup>
			
		</components:CustomTitleWindow>
	</s:SkinnableContainer>
	
</s:Application>